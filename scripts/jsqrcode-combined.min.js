


<!DOCTYPE html>
<html lang="en" class="">
  <head prefix="og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# object: http://ogp.me/ns/object# article: http://ogp.me/ns/article# profile: http://ogp.me/ns/profile#">
    <meta charset='utf-8'>
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta http-equiv="Content-Language" content="en">
    
    
    <title>html5-qrcode/jsqrcode-combined.min.js at master Â· dwa012/html5-qrcode</title>
    <link rel="search" type="application/opensearchdescription+xml" href="/opensearch.xml" title="GitHub">
    <link rel="fluid-icon" href="https://github.com/fluidicon.png" title="GitHub">
    <link rel="apple-touch-icon" sizes="57x57" href="/apple-touch-icon-114.png">
    <link rel="apple-touch-icon" sizes="114x114" href="/apple-touch-icon-114.png">
    <link rel="apple-touch-icon" sizes="72x72" href="/apple-touch-icon-144.png">
    <link rel="apple-touch-icon" sizes="144x144" href="/apple-touch-icon-144.png">
    <meta property="fb:app_id" content="1401488693436528">

      <meta content="@github" name="twitter:site" /><meta content="summary" name="twitter:card" /><meta content="dwa012/html5-qrcode" name="twitter:title" /><meta content="html5-qrcode - A cross platform HTML5 QR code reader." name="twitter:description" /><meta content="https://avatars3.githubusercontent.com/u/241679?v=3&amp;s=400" name="twitter:image:src" />
      <meta content="GitHub" property="og:site_name" /><meta content="object" property="og:type" /><meta content="https://avatars3.githubusercontent.com/u/241679?v=3&amp;s=400" property="og:image" /><meta content="dwa012/html5-qrcode" property="og:title" /><meta content="https://github.com/dwa012/html5-qrcode" property="og:url" /><meta content="html5-qrcode - A cross platform HTML5 QR code reader." property="og:description" />
      <meta name="browser-stats-url" content="/_stats">
    <link rel="assets" href="https://assets-cdn.github.com/">
    <link rel="conduit-xhr" href="https://ghconduit.com:25035">
    <link rel="xhr-socket" href="/_sockets">
    <meta name="pjax-timeout" content="1000">
    <link rel="sudo-modal" href="/sessions/sudo_modal">

    <meta name="msapplication-TileImage" content="/windows-tile.png">
    <meta name="msapplication-TileColor" content="#ffffff">
    <meta name="selected-link" value="repo_source" data-pjax-transient>
      <meta name="google-analytics" content="UA-3769691-2">

    <meta content="collector.githubapp.com" name="octolytics-host" /><meta content="collector-cdn.github.com" name="octolytics-script-host" /><meta content="github" name="octolytics-app-id" /><meta content="B21B5588:54E7:26EA36:54FDF928" name="octolytics-dimension-request_id" /><meta content="528896" name="octolytics-actor-id" /><meta content="crzndx" name="octolytics-actor-login" /><meta content="930e41a4f65658dd34cdf004b1fc9d3a8af610b433c45f4800011d6c5ebf9137" name="octolytics-actor-hash" />
    
    <meta content="Rails, view, blob#show" name="analytics-event" />

    
    <link rel="icon" type="image/x-icon" href="https://assets-cdn.github.com/favicon.ico">


    <meta content="authenticity_token" name="csrf-param" />
<meta content="Bi2aihyrlTx9yZnGzJl4nlaDAgZrNi8s/RehL1bkKLRnIC0f1vvsxdTkvqB4W9N8ulEin3CWzO2pt6KvckLK3g==" name="csrf-token" />

    <link href="https://assets-cdn.github.com/assets/github-de927e2906c40d418e6167abdba19ec436281bbdfe83d193db3e4a4a34a806b7.css" media="all" rel="stylesheet" />
    <link href="https://assets-cdn.github.com/assets/github2-5b6b3b7e2cf65a583ee133afec7acb992ede9cbdb174d26d0ce68177e0899c80.css" media="all" rel="stylesheet" />
    
    


    <meta http-equiv="x-pjax-version" content="9e2ff4bc383c64e63ef266b93505a82d">

      
  <meta name="description" content="html5-qrcode - A cross platform HTML5 QR code reader.">
  <meta name="go-import" content="github.com/dwa012/html5-qrcode git https://github.com/dwa012/html5-qrcode.git">

  <meta content="241679" name="octolytics-dimension-user_id" /><meta content="dwa012" name="octolytics-dimension-user_login" /><meta content="9636468" name="octolytics-dimension-repository_id" /><meta content="dwa012/html5-qrcode" name="octolytics-dimension-repository_nwo" /><meta content="true" name="octolytics-dimension-repository_public" /><meta content="false" name="octolytics-dimension-repository_is_fork" /><meta content="9636468" name="octolytics-dimension-repository_network_root_id" /><meta content="dwa012/html5-qrcode" name="octolytics-dimension-repository_network_root_nwo" />
  <link href="https://github.com/dwa012/html5-qrcode/commits/master.atom" rel="alternate" title="Recent Commits to html5-qrcode:master" type="application/atom+xml">

  </head>


  <body class="logged_in  env-production windows vis-public page-blob">
    <a href="#start-of-content" tabindex="1" class="accessibility-aid js-skip-to-content">Skip to content</a>
    <div class="wrapper">
      
      
      
      


        <div class="header header-logged-in true" role="banner">
  <div class="container clearfix">

    <a class="header-logo-invertocat" href="https://github.com/" data-hotkey="g d" aria-label="Homepage" data-ga-click="Header, go to dashboard, icon:logo">
  <span class="mega-octicon octicon-mark-github"></span>
</a>


      <div class="site-search repo-scope js-site-search" role="search">
          <form accept-charset="UTF-8" action="/dwa012/html5-qrcode/search" class="js-site-search-form" data-global-search-url="/search" data-repo-search-url="/dwa012/html5-qrcode/search" method="get"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /></div>
  <input type="text"
    class="js-site-search-field is-clearable"
    data-hotkey="s"
    name="q"
    placeholder="Search"
    data-global-scope-placeholder="Search GitHub"
    data-repo-scope-placeholder="Search"
    tabindex="1"
    autocapitalize="off">
  <div class="scope-badge">This repository</div>
</form>
      </div>
      <ul class="header-nav left" role="navigation">
        <li class="header-nav-item explore">
          <a class="header-nav-link" href="/explore" data-ga-click="Header, go to explore, text:explore">Explore</a>
        </li>
          <li class="header-nav-item">
            <a class="header-nav-link" href="https://gist.github.com" data-ga-click="Header, go to gist, text:gist">Gist</a>
          </li>
          <li class="header-nav-item">
            <a class="header-nav-link" href="/blog" data-ga-click="Header, go to blog, text:blog">Blog</a>
          </li>
        <li class="header-nav-item">
          <a class="header-nav-link" href="https://help.github.com" data-ga-click="Header, go to help, text:help">Help</a>
        </li>
      </ul>

    
<ul class="header-nav user-nav right" id="user-links">
  <li class="header-nav-item dropdown js-menu-container">
    <a class="header-nav-link name" href="/crzndx" data-ga-click="Header, go to profile, text:username">
      <img alt="crzndx" class="avatar" data-user="528896" height="20" src="https://avatars3.githubusercontent.com/u/528896?v=3&amp;s=40" width="20" />
      <span class="css-truncate">
        <span class="css-truncate-target">crzndx</span>
      </span>
    </a>
  </li>

  <li class="header-nav-item dropdown js-menu-container">
    <a class="header-nav-link js-menu-target tooltipped tooltipped-s" href="#" aria-label="Create new..." data-ga-click="Header, create new, icon:add">
      <span class="octicon octicon-plus"></span>
      <span class="dropdown-caret"></span>
    </a>

    <div class="dropdown-menu-content js-menu-content">
      
<ul class="dropdown-menu">
  <li>
    <a href="/new" data-ga-click="Header, create new repository, icon:repo"><span class="octicon octicon-repo"></span> New repository</a>
  </li>
  <li>
    <a href="/organizations/new" data-ga-click="Header, create new organization, icon:organization"><span class="octicon octicon-organization"></span> New organization</a>
  </li>


    <li class="dropdown-divider"></li>
    <li class="dropdown-header">
      <span title="dwa012/html5-qrcode">This repository</span>
    </li>
      <li>
        <a href="/dwa012/html5-qrcode/issues/new" data-ga-click="Header, create new issue, icon:issue"><span class="octicon octicon-issue-opened"></span> New issue</a>
      </li>
</ul>

    </div>
  </li>

  <li class="header-nav-item">
        <a href="/notifications" aria-label="You have unread notifications" class="header-nav-link notification-indicator tooltipped tooltipped-s" data-ga-click="Header, go to notifications, icon:unread" data-hotkey="g n">
        <span class="mail-status unread"></span>
        <span class="octicon octicon-inbox"></span>
</a>
  </li>

  <li class="header-nav-item">
    <a class="header-nav-link tooltipped tooltipped-s" href="/settings/profile" id="account_settings" aria-label="Settings" data-ga-click="Header, go to settings, icon:settings">
      <span class="octicon octicon-gear"></span>
    </a>
  </li>

  <li class="header-nav-item">
    <form accept-charset="UTF-8" action="/logout" class="logout-form" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="BJGg1UGv7W0Zq5OqzZM0zhUGm5keyh7y/U1lwGP6N+n2uEU9rPlQPYud3IzD5Kxeuvvli+cK3G1rh/XyB/Q9eQ==" /></div>
      <button class="header-nav-link sign-out-button tooltipped tooltipped-s" aria-label="Sign out" data-ga-click="Header, sign out, icon:logout">
        <span class="octicon octicon-sign-out"></span>
      </button>
</form>  </li>

</ul>


    
  </div>
</div>

        

        


      <div id="start-of-content" class="accessibility-aid"></div>
          <div class="site" itemscope itemtype="http://schema.org/WebPage">
    <div id="js-flash-container">
      
    </div>
    <div class="pagehead repohead instapaper_ignore readability-menu">
      <div class="container">
        
<ul class="pagehead-actions">

  <li>
      <form accept-charset="UTF-8" action="/notifications/subscribe" class="js-social-container" data-autosubmit="true" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="pDeJOlyMszENsNRSWAlZLQB8PowoF5pF+mnuRGJI7kZucfhL9oS1Xr2Uayn0C/gdwU1M+zKqmZTbQSYI7wFoQw==" /></div>    <input id="repository_id" name="repository_id" type="hidden" value="9636468" />

      <div class="select-menu js-menu-container js-select-menu">
        <a class="social-count js-social-count" href="/dwa012/html5-qrcode/watchers">
          18
        </a>
        <a href="/dwa012/html5-qrcode/subscription"
          class="minibutton select-menu-button with-count js-menu-target" role="button" tabindex="0" aria-haspopup="true">
          <span class="js-select-button">
            <span class="octicon octicon-eye"></span>
            Watch
          </span>
        </a>

        <div class="select-menu-modal-holder">
          <div class="select-menu-modal subscription-menu-modal js-menu-content" aria-hidden="true">
            <div class="select-menu-header">
              <span class="select-menu-title">Notifications</span>
              <span class="octicon octicon-x js-menu-close" role="button" aria-label="Close"></span>
            </div>

            <div class="select-menu-list js-navigation-container" role="menu">

              <div class="select-menu-item js-navigation-item selected" role="menuitem" tabindex="0">
                <span class="select-menu-item-icon octicon octicon-check"></span>
                <div class="select-menu-item-text">
                  <input checked="checked" id="do_included" name="do" type="radio" value="included" />
                  <span class="select-menu-item-heading">Not watching</span>
                  <span class="description">Be notified when participating or @mentioned.</span>
                  <span class="js-select-button-text hidden-select-button-text">
                    <span class="octicon octicon-eye"></span>
                    Watch
                  </span>
                </div>
              </div>

              <div class="select-menu-item js-navigation-item " role="menuitem" tabindex="0">
                <span class="select-menu-item-icon octicon octicon octicon-check"></span>
                <div class="select-menu-item-text">
                  <input id="do_subscribed" name="do" type="radio" value="subscribed" />
                  <span class="select-menu-item-heading">Watching</span>
                  <span class="description">Be notified of all conversations.</span>
                  <span class="js-select-button-text hidden-select-button-text">
                    <span class="octicon octicon-eye"></span>
                    Unwatch
                  </span>
                </div>
              </div>

              <div class="select-menu-item js-navigation-item " role="menuitem" tabindex="0">
                <span class="select-menu-item-icon octicon octicon-check"></span>
                <div class="select-menu-item-text">
                  <input id="do_ignore" name="do" type="radio" value="ignore" />
                  <span class="select-menu-item-heading">Ignoring</span>
                  <span class="description">Never be notified.</span>
                  <span class="js-select-button-text hidden-select-button-text">
                    <span class="octicon octicon-mute"></span>
                    Stop ignoring
                  </span>
                </div>
              </div>

            </div>

          </div>
        </div>
      </div>
</form>

  </li>

  <li>
    
  <div class="js-toggler-container js-social-container starring-container ">

    <form accept-charset="UTF-8" action="/dwa012/html5-qrcode/unstar" class="js-toggler-form starred js-unstar-button" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="aZnunqZ2bLiG7XTV7koMB/Adh00kAKx/beI7XC+SNSTXWkgX2n/IiNHdsD6Z0QdcWKJY30sD7cRomg4JXmSvcw==" /></div>
      <button
        class="minibutton with-count js-toggler-target"
        aria-label="Unstar this repository" title="Unstar dwa012/html5-qrcode">
        <span class="octicon octicon-star"></span>
        Unstar
      </button>
        <a class="social-count js-social-count" href="/dwa012/html5-qrcode/stargazers">
          153
        </a>
</form>
    <form accept-charset="UTF-8" action="/dwa012/html5-qrcode/star" class="js-toggler-form unstarred js-star-button" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="63SdrxTh+xI/kIpUPqz6QmMv9HpAFRYx69JLCaKNFZDe6dyA8BSVdSiPFSnC2jaE8WePKlbD96q8v6bqz4tR+Q==" /></div>
      <button
        class="minibutton with-count js-toggler-target"
        aria-label="Star this repository" title="Star dwa012/html5-qrcode">
        <span class="octicon octicon-star"></span>
        Star
      </button>
        <a class="social-count js-social-count" href="/dwa012/html5-qrcode/stargazers">
          153
        </a>
</form>  </div>

  </li>

        <li>
          <a href="/dwa012/html5-qrcode/fork" class="minibutton with-count js-toggler-target tooltipped-n" title="Fork your own copy of dwa012/html5-qrcode to your account" aria-label="Fork your own copy of dwa012/html5-qrcode to your account" rel="nofollow" data-method="post">
            <span class="octicon octicon-repo-forked"></span>
            Fork
          </a>
          <a href="/dwa012/html5-qrcode/network" class="social-count">53</a>
        </li>

</ul>

        <h1 itemscope itemtype="http://data-vocabulary.org/Breadcrumb" class="entry-title public">
          <span class="mega-octicon octicon-repo"></span>
          <span class="author"><a href="/dwa012" class="url fn" itemprop="url" rel="author"><span itemprop="title">dwa012</span></a></span><!--
       --><span class="path-divider">/</span><!--
       --><strong><a href="/dwa012/html5-qrcode" class="js-current-repository" data-pjax="#js-repo-pjax-container">html5-qrcode</a></strong>

          <span class="page-context-loader">
            <img alt="" height="16" src="https://assets-cdn.github.com/assets/spinners/octocat-spinner-32-e513294efa576953719e4e2de888dd9cf929b7d62ed8d05f25e731d02452ab6c.gif" width="16" />
          </span>

        </h1>
      </div><!-- /.container -->
    </div><!-- /.repohead -->

    <div class="container">
      <div class="repository-with-sidebar repo-container new-discussion-timeline  ">
        <div class="repository-sidebar clearfix">
            
<nav class="sunken-menu repo-nav js-repo-nav js-sidenav-container-pjax js-octicon-loaders"
     role="navigation"
     data-pjax="#js-repo-pjax-container"
     data-issue-count-url="/dwa012/html5-qrcode/issues/counts">
  <ul class="sunken-menu-group">
    <li class="tooltipped tooltipped-w" aria-label="Code">
      <a href="/dwa012/html5-qrcode" aria-label="Code" class="selected js-selected-navigation-item sunken-menu-item" data-hotkey="g c" data-selected-links="repo_source repo_downloads repo_commits repo_releases repo_tags repo_branches /dwa012/html5-qrcode">
        <span class="octicon octicon-code"></span> <span class="full-word">Code</span>
        <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/assets/spinners/octocat-spinner-32-e513294efa576953719e4e2de888dd9cf929b7d62ed8d05f25e731d02452ab6c.gif" width="16" />
</a>    </li>

      <li class="tooltipped tooltipped-w" aria-label="Issues">
        <a href="/dwa012/html5-qrcode/issues" aria-label="Issues" class="js-selected-navigation-item sunken-menu-item" data-hotkey="g i" data-selected-links="repo_issues repo_labels repo_milestones /dwa012/html5-qrcode/issues">
          <span class="octicon octicon-issue-opened"></span> <span class="full-word">Issues</span>
          <span class="js-issue-replace-counter"></span>
          <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/assets/spinners/octocat-spinner-32-e513294efa576953719e4e2de888dd9cf929b7d62ed8d05f25e731d02452ab6c.gif" width="16" />
</a>      </li>

    <li class="tooltipped tooltipped-w" aria-label="Pull Requests">
      <a href="/dwa012/html5-qrcode/pulls" aria-label="Pull Requests" class="js-selected-navigation-item sunken-menu-item" data-hotkey="g p" data-selected-links="repo_pulls /dwa012/html5-qrcode/pulls">
          <span class="octicon octicon-git-pull-request"></span> <span class="full-word">Pull Requests</span>
          <span class="js-pull-replace-counter"></span>
          <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/assets/spinners/octocat-spinner-32-e513294efa576953719e4e2de888dd9cf929b7d62ed8d05f25e731d02452ab6c.gif" width="16" />
</a>    </li>


      <li class="tooltipped tooltipped-w" aria-label="Wiki">
        <a href="/dwa012/html5-qrcode/wiki" aria-label="Wiki" class="js-selected-navigation-item sunken-menu-item" data-hotkey="g w" data-selected-links="repo_wiki /dwa012/html5-qrcode/wiki">
          <span class="octicon octicon-book"></span> <span class="full-word">Wiki</span>
          <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/assets/spinners/octocat-spinner-32-e513294efa576953719e4e2de888dd9cf929b7d62ed8d05f25e731d02452ab6c.gif" width="16" />
</a>      </li>
  </ul>
  <div class="sunken-menu-separator"></div>
  <ul class="sunken-menu-group">

    <li class="tooltipped tooltipped-w" aria-label="Pulse">
      <a href="/dwa012/html5-qrcode/pulse" aria-label="Pulse" class="js-selected-navigation-item sunken-menu-item" data-selected-links="pulse /dwa012/html5-qrcode/pulse">
        <span class="octicon octicon-pulse"></span> <span class="full-word">Pulse</span>
        <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/assets/spinners/octocat-spinner-32-e513294efa576953719e4e2de888dd9cf929b7d62ed8d05f25e731d02452ab6c.gif" width="16" />
</a>    </li>

    <li class="tooltipped tooltipped-w" aria-label="Graphs">
      <a href="/dwa012/html5-qrcode/graphs" aria-label="Graphs" class="js-selected-navigation-item sunken-menu-item" data-selected-links="repo_graphs repo_contributors /dwa012/html5-qrcode/graphs">
        <span class="octicon octicon-graph"></span> <span class="full-word">Graphs</span>
        <img alt="" class="mini-loader" height="16" src="https://assets-cdn.github.com/assets/spinners/octocat-spinner-32-e513294efa576953719e4e2de888dd9cf929b7d62ed8d05f25e731d02452ab6c.gif" width="16" />
</a>    </li>
  </ul>


</nav>

              <div class="only-with-full-nav">
                  
<div class="clone-url open"
  data-protocol-type="http"
  data-url="/users/set_protocol?protocol_selector=http&amp;protocol_type=clone">
  <h3><span class="text-emphasized">HTTPS</span> clone URL</h3>
  <div class="input-group js-zeroclipboard-container">
    <input type="text" class="input-mini input-monospace js-url-field js-zeroclipboard-target"
           value="https://github.com/dwa012/html5-qrcode.git" readonly="readonly">
    <span class="input-group-button">
      <button aria-label="Copy to clipboard" class="js-zeroclipboard minibutton zeroclipboard-button" data-copied-hint="Copied!" type="button"><span class="octicon octicon-clippy"></span></button>
    </span>
  </div>
</div>

  
<div class="clone-url "
  data-protocol-type="ssh"
  data-url="/users/set_protocol?protocol_selector=ssh&amp;protocol_type=clone">
  <h3><span class="text-emphasized">SSH</span> clone URL</h3>
  <div class="input-group js-zeroclipboard-container">
    <input type="text" class="input-mini input-monospace js-url-field js-zeroclipboard-target"
           value="git@github.com:dwa012/html5-qrcode.git" readonly="readonly">
    <span class="input-group-button">
      <button aria-label="Copy to clipboard" class="js-zeroclipboard minibutton zeroclipboard-button" data-copied-hint="Copied!" type="button"><span class="octicon octicon-clippy"></span></button>
    </span>
  </div>
</div>

  
<div class="clone-url "
  data-protocol-type="subversion"
  data-url="/users/set_protocol?protocol_selector=subversion&amp;protocol_type=clone">
  <h3><span class="text-emphasized">Subversion</span> checkout URL</h3>
  <div class="input-group js-zeroclipboard-container">
    <input type="text" class="input-mini input-monospace js-url-field js-zeroclipboard-target"
           value="https://github.com/dwa012/html5-qrcode" readonly="readonly">
    <span class="input-group-button">
      <button aria-label="Copy to clipboard" class="js-zeroclipboard minibutton zeroclipboard-button" data-copied-hint="Copied!" type="button"><span class="octicon octicon-clippy"></span></button>
    </span>
  </div>
</div>



<p class="clone-options">You can clone with
  <a href="#" class="js-clone-selector" data-protocol="http">HTTPS</a>, <a href="#" class="js-clone-selector" data-protocol="ssh">SSH</a>, or <a href="#" class="js-clone-selector" data-protocol="subversion">Subversion</a>.
  <a href="https://help.github.com/articles/which-remote-url-should-i-use" class="help tooltipped tooltipped-n" aria-label="Get help on which URL is right for you.">
    <span class="octicon octicon-question"></span>
  </a>
</p>


  <a href="http://windows.github.com" class="minibutton sidebar-button" title="Save dwa012/html5-qrcode to your computer and use it in GitHub Desktop." aria-label="Save dwa012/html5-qrcode to your computer and use it in GitHub Desktop.">
    <span class="octicon octicon-device-desktop"></span>
    Clone in Desktop
  </a>

                <a href="/dwa012/html5-qrcode/archive/master.zip"
                   class="minibutton sidebar-button"
                   aria-label="Download the contents of dwa012/html5-qrcode as a zip file"
                   title="Download the contents of dwa012/html5-qrcode as a zip file"
                   rel="nofollow">
                  <span class="octicon octicon-cloud-download"></span>
                  Download ZIP
                </a>
              </div>
        </div><!-- /.repository-sidebar -->

        <div id="js-repo-pjax-container" class="repository-content context-loader-container" data-pjax-container>
          

<a href="/dwa012/html5-qrcode/blob/f0b192c28da9f00affcdf08bee9d13b0d852fc4d/lib/jsqrcode-combined.min.js" class="hidden js-permalink-shortcut" data-hotkey="y">Permalink</a>

<!-- blob contrib key: blob_contributors:v21:4475f54a9daad593c747c614473ab181 -->

<div class="file-navigation js-zeroclipboard-container">
  
<div class="select-menu js-menu-container js-select-menu left">
  <span class="minibutton select-menu-button js-menu-target css-truncate" data-hotkey="w"
    data-master-branch="master"
    data-ref="master"
    title="master"
    role="button" aria-label="Switch branches or tags" tabindex="0" aria-haspopup="true">
    <span class="octicon octicon-git-branch"></span>
    <i>branch:</i>
    <span class="js-select-button css-truncate-target">master</span>
  </span>

  <div class="select-menu-modal-holder js-menu-content js-navigation-container" data-pjax aria-hidden="true">

    <div class="select-menu-modal">
      <div class="select-menu-header">
        <span class="select-menu-title">Switch branches/tags</span>
        <span class="octicon octicon-x js-menu-close" role="button" aria-label="Close"></span>
      </div>

      <div class="select-menu-filters">
        <div class="select-menu-text-filter">
          <input type="text" aria-label="Filter branches/tags" id="context-commitish-filter-field" class="js-filterable-field js-navigation-enable" placeholder="Filter branches/tags">
        </div>
        <div class="select-menu-tabs">
          <ul>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="branches" data-filter-placeholder="Filter branches/tags" class="js-select-menu-tab">Branches</a>
            </li>
            <li class="select-menu-tab">
              <a href="#" data-tab-filter="tags" data-filter-placeholder="Find a tagâ¦" class="js-select-menu-tab">Tags</a>
            </li>
          </ul>
        </div>
      </div>

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="branches">

        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


            <a class="select-menu-item js-navigation-item js-navigation-open "
               href="/dwa012/html5-qrcode/blob/gh-pages/lib/jsqrcode-combined.min.js"
               data-name="gh-pages"
               data-skip-pjax="true"
               rel="nofollow">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <span class="select-menu-item-text css-truncate-target" title="gh-pages">
                gh-pages
              </span>
            </a>
            <a class="select-menu-item js-navigation-item js-navigation-open selected"
               href="/dwa012/html5-qrcode/blob/master/lib/jsqrcode-combined.min.js"
               data-name="master"
               data-skip-pjax="true"
               rel="nofollow">
              <span class="select-menu-item-icon octicon octicon-check"></span>
              <span class="select-menu-item-text css-truncate-target" title="master">
                master
              </span>
            </a>
        </div>

          <div class="select-menu-no-results">Nothing to show</div>
      </div>

      <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket" data-tab-filter="tags">
        <div data-filterable-for="context-commitish-filter-field" data-filterable-type="substring">


        </div>

        <div class="select-menu-no-results">Nothing to show</div>
      </div>

    </div>
  </div>
</div>

  <div class="button-group right">
    <a href="/dwa012/html5-qrcode/find/master"
          class="js-show-file-finder minibutton empty-icon tooltipped tooltipped-s"
          data-pjax
          data-hotkey="t"
          aria-label="Quickly jump between files">
      <span class="octicon octicon-list-unordered"></span>
    </a>
    <button aria-label="Copy file path to clipboard" class="js-zeroclipboard minibutton zeroclipboard-button" data-copied-hint="Copied!" type="button"><span class="octicon octicon-clippy"></span></button>
  </div>

  <div class="breadcrumb js-zeroclipboard-target">
    <span class='repo-root js-repo-root'><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/dwa012/html5-qrcode" class="" data-branch="master" data-direction="back" data-pjax="true" itemscope="url"><span itemprop="title">html5-qrcode</span></a></span></span><span class="separator">/</span><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/dwa012/html5-qrcode/tree/master/lib" class="" data-branch="master" data-direction="back" data-pjax="true" itemscope="url"><span itemprop="title">lib</span></a></span><span class="separator">/</span><strong class="final-path">jsqrcode-combined.min.js</strong>
  </div>
</div>


  <div class="commit file-history-tease">
    <div class="file-history-tease-header">
        <img alt="Daniel Ward" class="avatar" data-user="241679" height="24" src="https://avatars0.githubusercontent.com/u/241679?v=3&amp;s=48" width="24" />
        <span class="author"><a href="/dwa012" rel="author">dwa012</a></span>
        <time datetime="2013-04-24T01:13:23Z" is="relative-time">Apr 23, 2013</time>
        <div class="commit-title">
            <a href="/dwa012/html5-qrcode/commit/f915e21536c237461494ad8b4c8459ced0931315" class="message" data-pjax="true" title="inital commit">inital commit</a>
        </div>
    </div>

    <div class="participation">
      <p class="quickstat">
        <a href="#blob_contributors_box" rel="facebox">
          <strong>1</strong>
           contributor
        </a>
      </p>
      
    </div>
    <div id="blob_contributors_box" style="display:none">
      <h2 class="facebox-header">Users who have contributed to this file</h2>
      <ul class="facebox-user-list">
          <li class="facebox-user-list-item">
            <img alt="Daniel Ward" data-user="241679" height="24" src="https://avatars0.githubusercontent.com/u/241679?v=3&amp;s=48" width="24" />
            <a href="/dwa012">dwa012</a>
          </li>
      </ul>
    </div>
  </div>

<div class="file">
  <div class="file-header">
    <div class="file-actions">
      <div class="button-group">
        <a href="/dwa012/html5-qrcode/raw/master/lib/jsqrcode-combined.min.js" class="minibutton " id="raw-url">Raw</a>
          <a href="/dwa012/html5-qrcode/blame/master/lib/jsqrcode-combined.min.js" class="minibutton js-update-url-with-hash">Blame</a>
        <a href="/dwa012/html5-qrcode/commits/master/lib/jsqrcode-combined.min.js" class="minibutton " rel="nofollow">History</a>
      </div><!-- /.button-group -->

        <a class="octicon-button tooltipped tooltipped-nw"
           href="http://windows.github.com" aria-label="Open this file in GitHub for Windows">
            <span class="octicon octicon-device-desktop"></span>
        </a>

            <form accept-charset="UTF-8" action="/dwa012/html5-qrcode/edit/master/lib/jsqrcode-combined.min.js" aria-label="Clicking this button will fork this project so you can edit the file" class="tooltipped tooltipped-s inline-form edit-file-form" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="GuQjNwrMKXAWGnhvaFcFFIr/5MdvWeluOBb6z4ZqWW+LvVT1UvtcsqYD3cmzioRs3iSlPnjJq3pFBDmm/e2Ejg==" /></div>
              <button class="web-edit-button"
                      type="submit"
                      data-hotkey="e"
                      data-disable-with>
                <span class="octicon octicon-pencil"></span>
              </button>
</form>
          <form accept-charset="UTF-8" action="/dwa012/html5-qrcode/delete/master/lib/jsqrcode-combined.min.js" aria-label="Fork this project and delete file" class="tooltipped tooltipped-s inline-form delete-file-form" method="post"><div style="margin:0;padding:0;display:inline"><input name="utf8" type="hidden" value="&#x2713;" /><input name="authenticity_token" type="hidden" value="HgX/sFcGSx+HTq2+crBWMepjNMQY7Fgs/1hBCjhHhkH2G7A0Zf9weBdlI4Li1rLLBGgpo03FWTw9UBvjLqDIWg==" /></div>
            <button class="web-edit-button"
                    type="submit"
                    data-disable-with>
              <span class="octicon octicon-trashcan "></span>
            </button>
</form>      </a>
    </div><!-- /.actions -->
    <div class="file-info">
        92 lines (92 sloc)
        <span class="file-info-divider"></span>
      46.716 kb
    </div>
  </div>
  
  <div class="blob-wrapper data type-javascript">
      <table class="highlight tab-size-8 js-file-line-container">
      <tr>
        <td id="L1" class="blob-num js-line-number" data-line-number="1"></td>
        <td id="LC1" class="blob-code js-file-line">GridSampler<span class="pl-k">=</span>{<span class="pl-en">checkAndNudgePoints</span>:<span class="pl-st">function</span>(<span class="pl-vpf">d</span>,<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(<span class="pl-s">var</span> c<span class="pl-k">=</span>qrcode.<span class="pl-sc">width</span>,b<span class="pl-k">=</span>qrcode.<span class="pl-sc">height</span>,e<span class="pl-k">=!</span><span class="pl-c1">0</span>,g<span class="pl-k">=</span><span class="pl-c1">0</span>;g<span class="pl-k">&lt;</span>a.Length<span class="pl-k">&amp;&amp;</span>e;g<span class="pl-k">+=</span><span class="pl-c1">2</span>){<span class="pl-s">var</span> f<span class="pl-k">=</span><span class="pl-s3">Math</span>.<span class="pl-s3">floor</span>(a[g]),h<span class="pl-k">=</span><span class="pl-s3">Math</span>.<span class="pl-s3">floor</span>(a[g<span class="pl-k">+</span><span class="pl-c1">1</span>]);<span class="pl-k">if</span>(<span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">&gt;</span>f<span class="pl-k">||</span>f<span class="pl-k">&gt;</span>c<span class="pl-k">||-</span><span class="pl-c1">1</span><span class="pl-k">&gt;</span>h<span class="pl-k">||</span>h<span class="pl-k">&gt;</span>b)<span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>Error.checkAndNudgePoints <span class="pl-pds">&quot;</span></span>;e<span class="pl-k">=!</span><span class="pl-c1">1</span>;<span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">==</span>f<span class="pl-k">?</span>(a[g]<span class="pl-k">=</span><span class="pl-c1">0</span>,e<span class="pl-k">=!</span><span class="pl-c1">0</span>)<span class="pl-k">:</span>f<span class="pl-k">==</span>c<span class="pl-k">&amp;&amp;</span>(a[g]<span class="pl-k">=</span>c<span class="pl-k">-</span><span class="pl-c1">1</span>,e<span class="pl-k">=!</span><span class="pl-c1">0</span>);<span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">==</span>h<span class="pl-k">?</span>(a[g<span class="pl-k">+</span><span class="pl-c1">1</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>,e<span class="pl-k">=!</span><span class="pl-c1">0</span>)<span class="pl-k">:</span>h<span class="pl-k">==</span>b<span class="pl-k">&amp;&amp;</span>(a[g<span class="pl-k">+</span><span class="pl-c1">1</span>]<span class="pl-k">=</span>b<span class="pl-k">-</span><span class="pl-c1">1</span>,e<span class="pl-k">=!</span><span class="pl-c1">0</span>)}e<span class="pl-k">=!</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(g<span class="pl-k">=</span>a.Length<span class="pl-k">-</span><span class="pl-c1">2</span>;<span class="pl-c1">0</span><span class="pl-k">&lt;=</span>g<span class="pl-k">&amp;&amp;</span>e;g<span class="pl-k">-=</span><span class="pl-c1">2</span>){f<span class="pl-k">=</span><span class="pl-s3">Math</span>.<span class="pl-s3">floor</span>(a[g]);h<span class="pl-k">=</span><span class="pl-s3">Math</span>.<span class="pl-s3">floor</span>(a[g<span class="pl-k">+</span><span class="pl-c1">1</span>]);<span class="pl-k">if</span>(<span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">&gt;</span>f<span class="pl-k">||</span>f<span class="pl-k">&gt;</span>c<span class="pl-k">||-</span><span class="pl-c1">1</span><span class="pl-k">&gt;</span>h<span class="pl-k">||</span>h<span class="pl-k">&gt;</span>b)<span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>Error.checkAndNudgePoints <span class="pl-pds">&quot;</span></span>;e<span class="pl-k">=!</span><span class="pl-c1">1</span>;<span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">==</span>f<span class="pl-k">?</span>(a[g]<span class="pl-k">=</span><span class="pl-c1">0</span>,e<span class="pl-k">=!</span><span class="pl-c1">0</span>)<span class="pl-k">:</span>f<span class="pl-k">==</span>c<span class="pl-k">&amp;&amp;</span>(a[g]<span class="pl-k">=</span>c<span class="pl-k">-</span><span class="pl-c1">1</span>,e<span class="pl-k">=!</span><span class="pl-c1">0</span>);<span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">==</span>h<span class="pl-k">?</span>(a[g<span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L2" class="blob-num js-line-number" data-line-number="2"></td>
        <td id="LC2" class="blob-code js-file-line"><span class="pl-c1">1</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>,e<span class="pl-k">=!</span><span class="pl-c1">0</span>)<span class="pl-k">:</span>h<span class="pl-k">==</span>b<span class="pl-k">&amp;&amp;</span>(a[g<span class="pl-k">+</span><span class="pl-c1">1</span>]<span class="pl-k">=</span>b<span class="pl-k">-</span><span class="pl-c1">1</span>,e<span class="pl-k">=!</span><span class="pl-c1">0</span>)}},<span class="pl-en">sampleGrid3</span>:<span class="pl-st">function</span>(<span class="pl-vpf">d</span>,<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>){<span class="pl-k">for</span>(<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">BitMatrix</span>(a),e<span class="pl-k">=</span><span class="pl-s3">Array</span>(a<span class="pl-k">&lt;&lt;</span><span class="pl-c1">1</span>),g<span class="pl-k">=</span><span class="pl-c1">0</span>;g<span class="pl-k">&lt;</span>a;g<span class="pl-k">++</span>){<span class="pl-k">for</span>(<span class="pl-s">var</span> f<span class="pl-k">=</span>e.<span class="pl-sc">length</span>,h<span class="pl-k">=</span>g<span class="pl-k">+</span><span class="pl-c1">0.5</span>,j<span class="pl-k">=</span><span class="pl-c1">0</span>;j<span class="pl-k">&lt;</span>f;j<span class="pl-k">+=</span><span class="pl-c1">2</span>)e[j]<span class="pl-k">=</span>(j<span class="pl-k">&gt;&gt;</span><span class="pl-c1">1</span>)<span class="pl-k">+</span><span class="pl-c1">0.5</span>,e[j<span class="pl-k">+</span><span class="pl-c1">1</span>]<span class="pl-k">=</span>h;c.transformPoints1(e);GridSampler.checkAndNudgePoints(d,e);<span class="pl-k">try</span>{<span class="pl-k">for</span>(j<span class="pl-k">=</span><span class="pl-c1">0</span>;j<span class="pl-k">&lt;</span>f;j<span class="pl-k">+=</span><span class="pl-c1">2</span>){<span class="pl-s">var</span> k<span class="pl-k">=</span><span class="pl-c1">4</span><span class="pl-k">*</span><span class="pl-s3">Math</span>.<span class="pl-s3">floor</span>(e[j])<span class="pl-k">+</span><span class="pl-c1">4</span><span class="pl-k">*</span><span class="pl-s3">Math</span>.<span class="pl-s3">floor</span>(e[j<span class="pl-k">+</span><span class="pl-c1">1</span>])<span class="pl-k">*</span>qrcode.<span class="pl-sc">width</span>,n<span class="pl-k">=</span>d[<span class="pl-s3">Math</span>.<span class="pl-s3">floor</span>(e[j])<span class="pl-k">+</span>qrcode.<span class="pl-sc">width</span><span class="pl-k">*</span><span class="pl-s3">Math</span>.<span class="pl-s3">floor</span>(e[j<span class="pl-k">+</span><span class="pl-c1">1</span>])];qrcode.imagedata.<span class="pl-sc">data</span>[k]<span class="pl-k">=</span>n<span class="pl-k">?</span><span class="pl-c1">255</span><span class="pl-k">:</span><span class="pl-c1">0</span>;qrcode.imagedata.<span class="pl-sc">data</span>[k<span class="pl-k">+</span><span class="pl-c1">1</span>]<span class="pl-k">=</span>n<span class="pl-k">?</span><span class="pl-c1">255</span><span class="pl-k">:</span><span class="pl-c1">0</span>;qrcode.imagedata.<span class="pl-sc">data</span>[k<span class="pl-k">+</span><span class="pl-c1">2</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;qrcode.imagedata.<span class="pl-sc">data</span>[k<span class="pl-k">+</span><span class="pl-c1">3</span>]<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L3" class="blob-num js-line-number" data-line-number="3"></td>
        <td id="LC3" class="blob-code js-file-line"><span class="pl-c1">255</span>;n<span class="pl-k">&amp;&amp;</span>b.set_Renamed(j<span class="pl-k">&gt;&gt;</span><span class="pl-c1">1</span>,g)}}<span class="pl-k">catch</span>(l){<span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>Error.checkAndNudgePoints<span class="pl-pds">&quot;</span></span>;}}<span class="pl-k">return</span> b},<span class="pl-en">sampleGridx</span>:<span class="pl-st">function</span>(<span class="pl-vpf">d</span>,<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">e</span>,<span class="pl-vpf">g</span>,<span class="pl-vpf">f</span>,<span class="pl-vpf">h</span>,<span class="pl-vpf">j</span>,<span class="pl-vpf">k</span>,<span class="pl-vpf">n</span>,<span class="pl-vpf">l</span>,<span class="pl-vpf">s</span>,<span class="pl-vpf">r</span>,<span class="pl-vpf">m</span>,<span class="pl-vpf">q</span>,<span class="pl-vpf">x</span>,<span class="pl-vpf">y</span>){c<span class="pl-k">=</span>PerspectiveTransform.quadrilateralToQuadrilateral(c,b,e,g,f,h,j,k,n,l,s,r,m,q,x,y);<span class="pl-k">return</span> GridSampler.sampleGrid3(d,a,c)}};<span class="pl-st">function</span> <span class="pl-en">ECB</span>(<span class="pl-vpf">d</span>,<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.count<span class="pl-k">=</span>d;<span class="pl-v">this</span>.dataCodewords<span class="pl-k">=</span>a;<span class="pl-v">this</span>.__defineGetter__(<span class="pl-s1"><span class="pl-pds">&quot;</span>Count<span class="pl-pds">&quot;</span></span>,<span class="pl-st">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.count});<span class="pl-v">this</span>.__defineGetter__(<span class="pl-s1"><span class="pl-pds">&quot;</span>DataCodewords<span class="pl-pds">&quot;</span></span>,<span class="pl-st">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.dataCodewords})}</td>
      </tr>
      <tr>
        <td id="L4" class="blob-num js-line-number" data-line-number="4"></td>
        <td id="LC4" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">ECBlocks</span>(<span class="pl-vpf">d</span>,<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>){<span class="pl-v">this</span>.ecCodewordsPerBlock<span class="pl-k">=</span>d;<span class="pl-v">this</span>.ecBlocks<span class="pl-k">=</span>c<span class="pl-k">?</span>[a,c]<span class="pl-k">:</span><span class="pl-s3">Array</span>(a);<span class="pl-v">this</span>.__defineGetter__(<span class="pl-s1"><span class="pl-pds">&quot;</span>ECCodewordsPerBlock<span class="pl-pds">&quot;</span></span>,<span class="pl-st">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.ecCodewordsPerBlock});<span class="pl-v">this</span>.__defineGetter__(<span class="pl-s1"><span class="pl-pds">&quot;</span>TotalECCodewords<span class="pl-pds">&quot;</span></span>,<span class="pl-st">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.ecCodewordsPerBlock<span class="pl-k">*</span><span class="pl-v">this</span>.NumBlocks});<span class="pl-v">this</span>.__defineGetter__(<span class="pl-s1"><span class="pl-pds">&quot;</span>NumBlocks<span class="pl-pds">&quot;</span></span>,<span class="pl-st">function</span>(){<span class="pl-k">for</span>(<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-c1">0</span>,e<span class="pl-k">=</span><span class="pl-c1">0</span>;e<span class="pl-k">&lt;</span><span class="pl-v">this</span>.ecBlocks.<span class="pl-sc">length</span>;e<span class="pl-k">++</span>)b<span class="pl-k">+=</span><span class="pl-v">this</span>.ecBlocks[e].<span class="pl-sc">length</span>;<span class="pl-k">return</span> b});<span class="pl-s3">this</span>.<span class="pl-en">getECBlocks</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.ecBlocks}}</td>
      </tr>
      <tr>
        <td id="L5" class="blob-num js-line-number" data-line-number="5"></td>
        <td id="LC5" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">Version</span>(<span class="pl-vpf">d</span>,<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">e</span>,<span class="pl-vpf">g</span>){<span class="pl-v">this</span>.versionNumber<span class="pl-k">=</span>d;<span class="pl-v">this</span>.alignmentPatternCenters<span class="pl-k">=</span>a;<span class="pl-v">this</span>.ecBlocks<span class="pl-k">=</span>[c,b,e,g];d<span class="pl-k">=</span><span class="pl-c1">0</span>;a<span class="pl-k">=</span>c.ECCodewordsPerBlock;c<span class="pl-k">=</span>c.getECBlocks();<span class="pl-k">for</span>(b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span>c.<span class="pl-sc">length</span>;b<span class="pl-k">++</span>)e<span class="pl-k">=</span>c[b],d<span class="pl-k">+=</span>e.Count<span class="pl-k">*</span>(e.DataCodewords<span class="pl-k">+</span>a);<span class="pl-v">this</span>.totalCodewords<span class="pl-k">=</span>d;<span class="pl-v">this</span>.__defineGetter__(<span class="pl-s1"><span class="pl-pds">&quot;</span>VersionNumber<span class="pl-pds">&quot;</span></span>,<span class="pl-st">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.versionNumber});<span class="pl-v">this</span>.__defineGetter__(<span class="pl-s1"><span class="pl-pds">&quot;</span>AlignmentPatternCenters<span class="pl-pds">&quot;</span></span>,<span class="pl-st">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.alignmentPatternCenters});<span class="pl-v">this</span>.__defineGetter__(<span class="pl-s1"><span class="pl-pds">&quot;</span>TotalCodewords<span class="pl-pds">&quot;</span></span>,<span class="pl-st">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.totalCodewords});<span class="pl-v">this</span>.__defineGetter__(<span class="pl-s1"><span class="pl-pds">&quot;</span>DimensionForVersion<span class="pl-pds">&quot;</span></span>,</td>
      </tr>
      <tr>
        <td id="L6" class="blob-num js-line-number" data-line-number="6"></td>
        <td id="LC6" class="blob-code js-file-line"><span class="pl-st">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">17</span><span class="pl-k">+</span><span class="pl-c1">4</span><span class="pl-k">*</span><span class="pl-v">this</span>.versionNumber});<span class="pl-s3">this</span>.<span class="pl-en">buildFunctionPattern</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.DimensionForVersion,e<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">BitMatrix</span>(b);e.setRegion(<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">9</span>,<span class="pl-c1">9</span>);e.setRegion(b<span class="pl-k">-</span><span class="pl-c1">8</span>,<span class="pl-c1">0</span>,<span class="pl-c1">8</span>,<span class="pl-c1">9</span>);e.setRegion(<span class="pl-c1">0</span>,b<span class="pl-k">-</span><span class="pl-c1">8</span>,<span class="pl-c1">9</span>,<span class="pl-c1">8</span>);<span class="pl-k">for</span>(<span class="pl-s">var</span> c<span class="pl-k">=</span><span class="pl-v">this</span>.alignmentPatternCenters.<span class="pl-sc">length</span>,a<span class="pl-k">=</span><span class="pl-c1">0</span>;a<span class="pl-k">&lt;</span>c;a<span class="pl-k">++</span>)<span class="pl-k">for</span>(<span class="pl-s">var</span> g<span class="pl-k">=</span><span class="pl-v">this</span>.alignmentPatternCenters[a]<span class="pl-k">-</span><span class="pl-c1">2</span>,d<span class="pl-k">=</span><span class="pl-c1">0</span>;d<span class="pl-k">&lt;</span>c;d<span class="pl-k">++</span>)<span class="pl-c1">0</span><span class="pl-k">==</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-c1">0</span><span class="pl-k">==</span>d<span class="pl-k">||</span>d<span class="pl-k">==</span>c<span class="pl-k">-</span><span class="pl-c1">1</span>)<span class="pl-k">||</span>a<span class="pl-k">==</span>c<span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">0</span><span class="pl-k">==</span>d<span class="pl-k">||</span>e.setRegion(<span class="pl-v">this</span>.alignmentPatternCenters[d]<span class="pl-k">-</span><span class="pl-c1">2</span>,g,<span class="pl-c1">5</span>,<span class="pl-c1">5</span>);e.setRegion(<span class="pl-c1">6</span>,<span class="pl-c1">9</span>,<span class="pl-c1">1</span>,b<span class="pl-k">-</span><span class="pl-c1">17</span>);e.setRegion(<span class="pl-c1">9</span>,<span class="pl-c1">6</span>,b<span class="pl-k">-</span><span class="pl-c1">17</span>,<span class="pl-c1">1</span>);<span class="pl-c1">6</span><span class="pl-k">&lt;</span><span class="pl-v">this</span>.versionNumber<span class="pl-k">&amp;&amp;</span>(e.setRegion(b<span class="pl-k">-</span><span class="pl-c1">11</span>,<span class="pl-c1">0</span>,<span class="pl-c1">3</span>,<span class="pl-c1">6</span>),e.setRegion(<span class="pl-c1">0</span>,</td>
      </tr>
      <tr>
        <td id="L7" class="blob-num js-line-number" data-line-number="7"></td>
        <td id="LC7" class="blob-code js-file-line">b<span class="pl-k">-</span><span class="pl-c1">11</span>,<span class="pl-c1">6</span>,<span class="pl-c1">3</span>));<span class="pl-k">return</span> e};<span class="pl-s3">this</span>.<span class="pl-en">getECBlocksForLevel</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">b</span>){<span class="pl-k">return</span> <span class="pl-v">this</span>.ecBlocks[b.ordinal()]}}Version.VERSION_DECODE_INFO<span class="pl-k">=</span>[<span class="pl-c1">31892</span>,<span class="pl-c1">34236</span>,<span class="pl-c1">39577</span>,<span class="pl-c1">42195</span>,<span class="pl-c1">48118</span>,<span class="pl-c1">51042</span>,<span class="pl-c1">55367</span>,<span class="pl-c1">58893</span>,<span class="pl-c1">63784</span>,<span class="pl-c1">68472</span>,<span class="pl-c1">70749</span>,<span class="pl-c1">76311</span>,<span class="pl-c1">79154</span>,<span class="pl-c1">84390</span>,<span class="pl-c1">87683</span>,<span class="pl-c1">92361</span>,<span class="pl-c1">96236</span>,<span class="pl-c1">102084</span>,<span class="pl-c1">102881</span>,<span class="pl-c1">110507</span>,<span class="pl-c1">110734</span>,<span class="pl-c1">117786</span>,<span class="pl-c1">119615</span>,<span class="pl-c1">126325</span>,<span class="pl-c1">127568</span>,<span class="pl-c1">133589</span>,<span class="pl-c1">136944</span>,<span class="pl-c1">141498</span>,<span class="pl-c1">145311</span>,<span class="pl-c1">150283</span>,<span class="pl-c1">152622</span>,<span class="pl-c1">158308</span>,<span class="pl-c1">161089</span>,<span class="pl-c1">167017</span>];Version.VERSIONS<span class="pl-k">=</span>buildVersions();<span class="pl-s3">Version</span>.<span class="pl-en">getVersionForNumber</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">d</span>){<span class="pl-k">if</span>(<span class="pl-c1">1</span><span class="pl-k">&gt;</span>d<span class="pl-k">||</span><span class="pl-c1">40</span><span class="pl-k">&lt;</span>d)<span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>ArgumentException<span class="pl-pds">&quot;</span></span>;<span class="pl-k">return</span> Version.VERSIONS[d<span class="pl-k">-</span><span class="pl-c1">1</span>]};</td>
      </tr>
      <tr>
        <td id="L8" class="blob-num js-line-number" data-line-number="8"></td>
        <td id="LC8" class="blob-code js-file-line"><span class="pl-s3">Version</span>.<span class="pl-en">getProvisionalVersionForDimension</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">d</span>){<span class="pl-k">if</span>(<span class="pl-c1">1</span><span class="pl-k">!=</span>d<span class="pl-k">%</span><span class="pl-c1">4</span>)<span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>Error getProvisionalVersionForDimension<span class="pl-pds">&quot;</span></span>;<span class="pl-k">try</span>{<span class="pl-k">return</span> Version.getVersionForNumber(d<span class="pl-k">-</span><span class="pl-c1">17</span><span class="pl-k">&gt;&gt;</span><span class="pl-c1">2</span>)}<span class="pl-k">catch</span>(a){<span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>Error getVersionForNumber<span class="pl-pds">&quot;</span></span>;}};</td>
      </tr>
      <tr>
        <td id="L9" class="blob-num js-line-number" data-line-number="9"></td>
        <td id="LC9" class="blob-code js-file-line"><span class="pl-s3">Version</span>.<span class="pl-en">decodeVersionInformation</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">d</span>){<span class="pl-k">for</span>(<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-c1">4294967295</span>,c<span class="pl-k">=</span><span class="pl-c1">0</span>,b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span>Version.VERSION_DECODE_INFO.<span class="pl-sc">length</span>;b<span class="pl-k">++</span>){<span class="pl-s">var</span> e<span class="pl-k">=</span>Version.VERSION_DECODE_INFO[b];<span class="pl-k">if</span>(e<span class="pl-k">==</span>d)<span class="pl-k">return</span> <span class="pl-v">this</span>.getVersionForNumber(b<span class="pl-k">+</span><span class="pl-c1">7</span>);e<span class="pl-k">=</span>FormatInformation.numBitsDiffering(d,e);e<span class="pl-k">&lt;</span>a<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span>b<span class="pl-k">+</span><span class="pl-c1">7</span>,a<span class="pl-k">=</span>e)}<span class="pl-k">return</span> <span class="pl-c1">3</span><span class="pl-k">&gt;=</span>a<span class="pl-k">?</span><span class="pl-v">this</span>.getVersionForNumber(c)<span class="pl-k">:</span><span class="pl-c1">null</span>};</td>
      </tr>
      <tr>
        <td id="L10" class="blob-num js-line-number" data-line-number="10"></td>
        <td id="LC10" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">buildVersions</span>(){<span class="pl-k">return</span>[<span class="pl-k">new</span> <span class="pl-en">Version</span>(<span class="pl-c1">1</span>,[],<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">7</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">1</span>,<span class="pl-c1">19</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">10</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">1</span>,<span class="pl-c1">16</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">13</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">1</span>,<span class="pl-c1">13</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">17</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">1</span>,<span class="pl-c1">9</span>))),<span class="pl-k">new</span> <span class="pl-en">Version</span>(<span class="pl-c1">2</span>,[<span class="pl-c1">6</span>,<span class="pl-c1">18</span>],<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">10</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">1</span>,<span class="pl-c1">34</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">16</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">1</span>,<span class="pl-c1">28</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">22</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">1</span>,<span class="pl-c1">22</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">28</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">1</span>,<span class="pl-c1">16</span>))),<span class="pl-k">new</span> <span class="pl-en">Version</span>(<span class="pl-c1">3</span>,[<span class="pl-c1">6</span>,<span class="pl-c1">22</span>],<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">15</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">1</span>,<span class="pl-c1">55</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">26</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">1</span>,<span class="pl-c1">44</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">18</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">2</span>,<span class="pl-c1">17</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">22</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">2</span>,<span class="pl-c1">13</span>))),<span class="pl-k">new</span> <span class="pl-en">Version</span>(<span class="pl-c1">4</span>,[<span class="pl-c1">6</span>,<span class="pl-c1">26</span>],<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">20</span>,</td>
      </tr>
      <tr>
        <td id="L11" class="blob-num js-line-number" data-line-number="11"></td>
        <td id="LC11" class="blob-code js-file-line"><span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">1</span>,<span class="pl-c1">80</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">18</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">2</span>,<span class="pl-c1">32</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">26</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">2</span>,<span class="pl-c1">24</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">16</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">4</span>,<span class="pl-c1">9</span>))),<span class="pl-k">new</span> <span class="pl-en">Version</span>(<span class="pl-c1">5</span>,[<span class="pl-c1">6</span>,<span class="pl-c1">30</span>],<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">26</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">1</span>,<span class="pl-c1">108</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">24</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">2</span>,<span class="pl-c1">43</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">18</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">2</span>,<span class="pl-c1">15</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">2</span>,<span class="pl-c1">16</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">22</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">2</span>,<span class="pl-c1">11</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">2</span>,<span class="pl-c1">12</span>))),<span class="pl-k">new</span> <span class="pl-en">Version</span>(<span class="pl-c1">6</span>,[<span class="pl-c1">6</span>,<span class="pl-c1">34</span>],<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">18</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">2</span>,<span class="pl-c1">68</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">16</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">4</span>,<span class="pl-c1">27</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">24</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">4</span>,<span class="pl-c1">19</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">28</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">4</span>,<span class="pl-c1">15</span>))),<span class="pl-k">new</span> <span class="pl-en">Version</span>(<span class="pl-c1">7</span>,[<span class="pl-c1">6</span>,<span class="pl-c1">22</span>,<span class="pl-c1">38</span>],<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">20</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">2</span>,<span class="pl-c1">78</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">18</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">4</span>,</td>
      </tr>
      <tr>
        <td id="L12" class="blob-num js-line-number" data-line-number="12"></td>
        <td id="LC12" class="blob-code js-file-line"><span class="pl-c1">31</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">18</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">2</span>,<span class="pl-c1">14</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">4</span>,<span class="pl-c1">15</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">26</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">4</span>,<span class="pl-c1">13</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">1</span>,<span class="pl-c1">14</span>))),<span class="pl-k">new</span> <span class="pl-en">Version</span>(<span class="pl-c1">8</span>,[<span class="pl-c1">6</span>,<span class="pl-c1">24</span>,<span class="pl-c1">42</span>],<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">24</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">2</span>,<span class="pl-c1">97</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">22</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">2</span>,<span class="pl-c1">38</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">2</span>,<span class="pl-c1">39</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">22</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">4</span>,<span class="pl-c1">18</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">2</span>,<span class="pl-c1">19</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">26</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">4</span>,<span class="pl-c1">14</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">2</span>,<span class="pl-c1">15</span>))),<span class="pl-k">new</span> <span class="pl-en">Version</span>(<span class="pl-c1">9</span>,[<span class="pl-c1">6</span>,<span class="pl-c1">26</span>,<span class="pl-c1">46</span>],<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">2</span>,<span class="pl-c1">116</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">22</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">3</span>,<span class="pl-c1">36</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">2</span>,<span class="pl-c1">37</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">20</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">4</span>,<span class="pl-c1">16</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">4</span>,<span class="pl-c1">17</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">24</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">4</span>,<span class="pl-c1">12</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">4</span>,<span class="pl-c1">13</span>))),<span class="pl-k">new</span> <span class="pl-en">Version</span>(<span class="pl-c1">10</span>,[<span class="pl-c1">6</span>,<span class="pl-c1">28</span>,<span class="pl-c1">50</span>],</td>
      </tr>
      <tr>
        <td id="L13" class="blob-num js-line-number" data-line-number="13"></td>
        <td id="LC13" class="blob-code js-file-line"><span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">18</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">2</span>,<span class="pl-c1">68</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">2</span>,<span class="pl-c1">69</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">26</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">4</span>,<span class="pl-c1">43</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">1</span>,<span class="pl-c1">44</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">24</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">6</span>,<span class="pl-c1">19</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">2</span>,<span class="pl-c1">20</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">28</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">6</span>,<span class="pl-c1">15</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">2</span>,<span class="pl-c1">16</span>))),<span class="pl-k">new</span> <span class="pl-en">Version</span>(<span class="pl-c1">11</span>,[<span class="pl-c1">6</span>,<span class="pl-c1">30</span>,<span class="pl-c1">54</span>],<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">20</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">4</span>,<span class="pl-c1">81</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">1</span>,<span class="pl-c1">50</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">4</span>,<span class="pl-c1">51</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">28</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">4</span>,<span class="pl-c1">22</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">4</span>,<span class="pl-c1">23</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">24</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">3</span>,<span class="pl-c1">12</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">8</span>,<span class="pl-c1">13</span>))),<span class="pl-k">new</span> <span class="pl-en">Version</span>(<span class="pl-c1">12</span>,[<span class="pl-c1">6</span>,<span class="pl-c1">32</span>,<span class="pl-c1">58</span>],<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">24</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">2</span>,<span class="pl-c1">92</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">2</span>,<span class="pl-c1">93</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">22</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">6</span>,<span class="pl-c1">36</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">2</span>,<span class="pl-c1">37</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">26</span>,</td>
      </tr>
      <tr>
        <td id="L14" class="blob-num js-line-number" data-line-number="14"></td>
        <td id="LC14" class="blob-code js-file-line"><span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">4</span>,<span class="pl-c1">20</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">6</span>,<span class="pl-c1">21</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">28</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">7</span>,<span class="pl-c1">14</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">4</span>,<span class="pl-c1">15</span>))),<span class="pl-k">new</span> <span class="pl-en">Version</span>(<span class="pl-c1">13</span>,[<span class="pl-c1">6</span>,<span class="pl-c1">34</span>,<span class="pl-c1">62</span>],<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">26</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">4</span>,<span class="pl-c1">107</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">22</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">8</span>,<span class="pl-c1">37</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">1</span>,<span class="pl-c1">38</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">24</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">8</span>,<span class="pl-c1">20</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">4</span>,<span class="pl-c1">21</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">22</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">12</span>,<span class="pl-c1">11</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">4</span>,<span class="pl-c1">12</span>))),<span class="pl-k">new</span> <span class="pl-en">Version</span>(<span class="pl-c1">14</span>,[<span class="pl-c1">6</span>,<span class="pl-c1">26</span>,<span class="pl-c1">46</span>,<span class="pl-c1">66</span>],<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">3</span>,<span class="pl-c1">115</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">1</span>,<span class="pl-c1">116</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">24</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">4</span>,<span class="pl-c1">40</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">5</span>,<span class="pl-c1">41</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">20</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">11</span>,<span class="pl-c1">16</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">5</span>,<span class="pl-c1">17</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">24</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">11</span>,<span class="pl-c1">12</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">5</span>,<span class="pl-c1">13</span>))),<span class="pl-k">new</span> <span class="pl-en">Version</span>(<span class="pl-c1">15</span>,[<span class="pl-c1">6</span>,<span class="pl-c1">26</span>,</td>
      </tr>
      <tr>
        <td id="L15" class="blob-num js-line-number" data-line-number="15"></td>
        <td id="LC15" class="blob-code js-file-line"><span class="pl-c1">48</span>,<span class="pl-c1">70</span>],<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">22</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">5</span>,<span class="pl-c1">87</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">1</span>,<span class="pl-c1">88</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">24</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">5</span>,<span class="pl-c1">41</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">5</span>,<span class="pl-c1">42</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">5</span>,<span class="pl-c1">24</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">7</span>,<span class="pl-c1">25</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">24</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">11</span>,<span class="pl-c1">12</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">7</span>,<span class="pl-c1">13</span>))),<span class="pl-k">new</span> <span class="pl-en">Version</span>(<span class="pl-c1">16</span>,[<span class="pl-c1">6</span>,<span class="pl-c1">26</span>,<span class="pl-c1">50</span>,<span class="pl-c1">74</span>],<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">24</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">5</span>,<span class="pl-c1">98</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">1</span>,<span class="pl-c1">99</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">28</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">7</span>,<span class="pl-c1">45</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">3</span>,<span class="pl-c1">46</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">24</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">15</span>,<span class="pl-c1">19</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">2</span>,<span class="pl-c1">20</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">3</span>,<span class="pl-c1">15</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">13</span>,<span class="pl-c1">16</span>))),<span class="pl-k">new</span> <span class="pl-en">Version</span>(<span class="pl-c1">17</span>,[<span class="pl-c1">6</span>,<span class="pl-c1">30</span>,<span class="pl-c1">54</span>,<span class="pl-c1">78</span>],<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">28</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">1</span>,<span class="pl-c1">107</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">5</span>,<span class="pl-c1">108</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">28</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">10</span>,</td>
      </tr>
      <tr>
        <td id="L16" class="blob-num js-line-number" data-line-number="16"></td>
        <td id="LC16" class="blob-code js-file-line"><span class="pl-c1">46</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">1</span>,<span class="pl-c1">47</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">28</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">1</span>,<span class="pl-c1">22</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">15</span>,<span class="pl-c1">23</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">28</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">2</span>,<span class="pl-c1">14</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">17</span>,<span class="pl-c1">15</span>))),<span class="pl-k">new</span> <span class="pl-en">Version</span>(<span class="pl-c1">18</span>,[<span class="pl-c1">6</span>,<span class="pl-c1">30</span>,<span class="pl-c1">56</span>,<span class="pl-c1">82</span>],<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">5</span>,<span class="pl-c1">120</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">1</span>,<span class="pl-c1">121</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">26</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">9</span>,<span class="pl-c1">43</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">4</span>,<span class="pl-c1">44</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">28</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">17</span>,<span class="pl-c1">22</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">1</span>,<span class="pl-c1">23</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">28</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">2</span>,<span class="pl-c1">14</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">19</span>,<span class="pl-c1">15</span>))),<span class="pl-k">new</span> <span class="pl-en">Version</span>(<span class="pl-c1">19</span>,[<span class="pl-c1">6</span>,<span class="pl-c1">30</span>,<span class="pl-c1">58</span>,<span class="pl-c1">86</span>],<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">28</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">3</span>,<span class="pl-c1">113</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">4</span>,<span class="pl-c1">114</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">26</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">3</span>,<span class="pl-c1">44</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">11</span>,<span class="pl-c1">45</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">26</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">17</span>,<span class="pl-c1">21</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">4</span>,<span class="pl-c1">22</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">26</span>,</td>
      </tr>
      <tr>
        <td id="L17" class="blob-num js-line-number" data-line-number="17"></td>
        <td id="LC17" class="blob-code js-file-line"><span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">9</span>,<span class="pl-c1">13</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">16</span>,<span class="pl-c1">14</span>))),<span class="pl-k">new</span> <span class="pl-en">Version</span>(<span class="pl-c1">20</span>,[<span class="pl-c1">6</span>,<span class="pl-c1">34</span>,<span class="pl-c1">62</span>,<span class="pl-c1">90</span>],<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">28</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">3</span>,<span class="pl-c1">107</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">5</span>,<span class="pl-c1">108</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">26</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">3</span>,<span class="pl-c1">41</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">13</span>,<span class="pl-c1">42</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">15</span>,<span class="pl-c1">24</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">5</span>,<span class="pl-c1">25</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">28</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">15</span>,<span class="pl-c1">15</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">10</span>,<span class="pl-c1">16</span>))),<span class="pl-k">new</span> <span class="pl-en">Version</span>(<span class="pl-c1">21</span>,[<span class="pl-c1">6</span>,<span class="pl-c1">28</span>,<span class="pl-c1">50</span>,<span class="pl-c1">72</span>,<span class="pl-c1">94</span>],<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">28</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">4</span>,<span class="pl-c1">116</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">4</span>,<span class="pl-c1">117</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">26</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">17</span>,<span class="pl-c1">42</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">28</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">17</span>,<span class="pl-c1">22</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">6</span>,<span class="pl-c1">23</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">19</span>,<span class="pl-c1">16</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">6</span>,<span class="pl-c1">17</span>))),<span class="pl-k">new</span> <span class="pl-en">Version</span>(<span class="pl-c1">22</span>,[<span class="pl-c1">6</span>,<span class="pl-c1">26</span>,<span class="pl-c1">50</span>,<span class="pl-c1">74</span>,<span class="pl-c1">98</span>],<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">28</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">2</span>,</td>
      </tr>
      <tr>
        <td id="L18" class="blob-num js-line-number" data-line-number="18"></td>
        <td id="LC18" class="blob-code js-file-line"><span class="pl-c1">111</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">7</span>,<span class="pl-c1">112</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">28</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">17</span>,<span class="pl-c1">46</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">7</span>,<span class="pl-c1">24</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">16</span>,<span class="pl-c1">25</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">24</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">34</span>,<span class="pl-c1">13</span>))),<span class="pl-k">new</span> <span class="pl-en">Version</span>(<span class="pl-c1">23</span>,[<span class="pl-c1">6</span>,<span class="pl-c1">30</span>,<span class="pl-c1">54</span>,<span class="pl-c1">74</span>,<span class="pl-c1">102</span>],<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">4</span>,<span class="pl-c1">121</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">5</span>,<span class="pl-c1">122</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">28</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">4</span>,<span class="pl-c1">47</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">14</span>,<span class="pl-c1">48</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">11</span>,<span class="pl-c1">24</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">14</span>,<span class="pl-c1">25</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">16</span>,<span class="pl-c1">15</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">14</span>,<span class="pl-c1">16</span>))),<span class="pl-k">new</span> <span class="pl-en">Version</span>(<span class="pl-c1">24</span>,[<span class="pl-c1">6</span>,<span class="pl-c1">28</span>,<span class="pl-c1">54</span>,<span class="pl-c1">80</span>,<span class="pl-c1">106</span>],<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">6</span>,<span class="pl-c1">117</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">4</span>,<span class="pl-c1">118</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">28</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">6</span>,<span class="pl-c1">45</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">14</span>,<span class="pl-c1">46</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">11</span>,</td>
      </tr>
      <tr>
        <td id="L19" class="blob-num js-line-number" data-line-number="19"></td>
        <td id="LC19" class="blob-code js-file-line"><span class="pl-c1">24</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">16</span>,<span class="pl-c1">25</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">30</span>,<span class="pl-c1">16</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">2</span>,<span class="pl-c1">17</span>))),<span class="pl-k">new</span> <span class="pl-en">Version</span>(<span class="pl-c1">25</span>,[<span class="pl-c1">6</span>,<span class="pl-c1">32</span>,<span class="pl-c1">58</span>,<span class="pl-c1">84</span>,<span class="pl-c1">110</span>],<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">26</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">8</span>,<span class="pl-c1">106</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">4</span>,<span class="pl-c1">107</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">28</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">8</span>,<span class="pl-c1">47</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">13</span>,<span class="pl-c1">48</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">7</span>,<span class="pl-c1">24</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">22</span>,<span class="pl-c1">25</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">22</span>,<span class="pl-c1">15</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">13</span>,<span class="pl-c1">16</span>))),<span class="pl-k">new</span> <span class="pl-en">Version</span>(<span class="pl-c1">26</span>,[<span class="pl-c1">6</span>,<span class="pl-c1">30</span>,<span class="pl-c1">58</span>,<span class="pl-c1">86</span>,<span class="pl-c1">114</span>],<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">28</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">10</span>,<span class="pl-c1">114</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">2</span>,<span class="pl-c1">115</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">28</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">19</span>,<span class="pl-c1">46</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">4</span>,<span class="pl-c1">47</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">28</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">28</span>,<span class="pl-c1">22</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">6</span>,<span class="pl-c1">23</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">33</span>,<span class="pl-c1">16</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">4</span>,<span class="pl-c1">17</span>))),</td>
      </tr>
      <tr>
        <td id="L20" class="blob-num js-line-number" data-line-number="20"></td>
        <td id="LC20" class="blob-code js-file-line"><span class="pl-k">new</span> <span class="pl-en">Version</span>(<span class="pl-c1">27</span>,[<span class="pl-c1">6</span>,<span class="pl-c1">34</span>,<span class="pl-c1">62</span>,<span class="pl-c1">90</span>,<span class="pl-c1">118</span>],<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">8</span>,<span class="pl-c1">122</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">4</span>,<span class="pl-c1">123</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">28</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">22</span>,<span class="pl-c1">45</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">3</span>,<span class="pl-c1">46</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">8</span>,<span class="pl-c1">23</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">26</span>,<span class="pl-c1">24</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">12</span>,<span class="pl-c1">15</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">28</span>,<span class="pl-c1">16</span>))),<span class="pl-k">new</span> <span class="pl-en">Version</span>(<span class="pl-c1">28</span>,[<span class="pl-c1">6</span>,<span class="pl-c1">26</span>,<span class="pl-c1">50</span>,<span class="pl-c1">74</span>,<span class="pl-c1">98</span>,<span class="pl-c1">122</span>],<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">3</span>,<span class="pl-c1">117</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">10</span>,<span class="pl-c1">118</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">28</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">3</span>,<span class="pl-c1">45</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">23</span>,<span class="pl-c1">46</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">4</span>,<span class="pl-c1">24</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">31</span>,<span class="pl-c1">25</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">11</span>,<span class="pl-c1">15</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">31</span>,<span class="pl-c1">16</span>))),<span class="pl-k">new</span> <span class="pl-en">Version</span>(<span class="pl-c1">29</span>,[<span class="pl-c1">6</span>,<span class="pl-c1">30</span>,<span class="pl-c1">54</span>,<span class="pl-c1">78</span>,<span class="pl-c1">102</span>,<span class="pl-c1">126</span>],<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">7</span>,</td>
      </tr>
      <tr>
        <td id="L21" class="blob-num js-line-number" data-line-number="21"></td>
        <td id="LC21" class="blob-code js-file-line"><span class="pl-c1">116</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">7</span>,<span class="pl-c1">117</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">28</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">21</span>,<span class="pl-c1">45</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">7</span>,<span class="pl-c1">46</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">1</span>,<span class="pl-c1">23</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">37</span>,<span class="pl-c1">24</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">19</span>,<span class="pl-c1">15</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">26</span>,<span class="pl-c1">16</span>))),<span class="pl-k">new</span> <span class="pl-en">Version</span>(<span class="pl-c1">30</span>,[<span class="pl-c1">6</span>,<span class="pl-c1">26</span>,<span class="pl-c1">52</span>,<span class="pl-c1">78</span>,<span class="pl-c1">104</span>,<span class="pl-c1">130</span>],<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">5</span>,<span class="pl-c1">115</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">10</span>,<span class="pl-c1">116</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">28</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">19</span>,<span class="pl-c1">47</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">10</span>,<span class="pl-c1">48</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">15</span>,<span class="pl-c1">24</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">25</span>,<span class="pl-c1">25</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">23</span>,<span class="pl-c1">15</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">25</span>,<span class="pl-c1">16</span>))),<span class="pl-k">new</span> <span class="pl-en">Version</span>(<span class="pl-c1">31</span>,[<span class="pl-c1">6</span>,<span class="pl-c1">30</span>,<span class="pl-c1">56</span>,<span class="pl-c1">82</span>,<span class="pl-c1">108</span>,<span class="pl-c1">134</span>],<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">13</span>,<span class="pl-c1">115</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">3</span>,<span class="pl-c1">116</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">28</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">2</span>,<span class="pl-c1">46</span>),</td>
      </tr>
      <tr>
        <td id="L22" class="blob-num js-line-number" data-line-number="22"></td>
        <td id="LC22" class="blob-code js-file-line"><span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">29</span>,<span class="pl-c1">47</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">42</span>,<span class="pl-c1">24</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">1</span>,<span class="pl-c1">25</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">23</span>,<span class="pl-c1">15</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">28</span>,<span class="pl-c1">16</span>))),<span class="pl-k">new</span> <span class="pl-en">Version</span>(<span class="pl-c1">32</span>,[<span class="pl-c1">6</span>,<span class="pl-c1">34</span>,<span class="pl-c1">60</span>,<span class="pl-c1">86</span>,<span class="pl-c1">112</span>,<span class="pl-c1">138</span>],<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">17</span>,<span class="pl-c1">115</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">28</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">10</span>,<span class="pl-c1">46</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">23</span>,<span class="pl-c1">47</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">10</span>,<span class="pl-c1">24</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">35</span>,<span class="pl-c1">25</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">19</span>,<span class="pl-c1">15</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">35</span>,<span class="pl-c1">16</span>))),<span class="pl-k">new</span> <span class="pl-en">Version</span>(<span class="pl-c1">33</span>,[<span class="pl-c1">6</span>,<span class="pl-c1">30</span>,<span class="pl-c1">58</span>,<span class="pl-c1">86</span>,<span class="pl-c1">114</span>,<span class="pl-c1">142</span>],<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">17</span>,<span class="pl-c1">115</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">1</span>,<span class="pl-c1">116</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">28</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">14</span>,<span class="pl-c1">46</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">21</span>,<span class="pl-c1">47</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">29</span>,<span class="pl-c1">24</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">19</span>,<span class="pl-c1">25</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,</td>
      </tr>
      <tr>
        <td id="L23" class="blob-num js-line-number" data-line-number="23"></td>
        <td id="LC23" class="blob-code js-file-line"><span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">11</span>,<span class="pl-c1">15</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">46</span>,<span class="pl-c1">16</span>))),<span class="pl-k">new</span> <span class="pl-en">Version</span>(<span class="pl-c1">34</span>,[<span class="pl-c1">6</span>,<span class="pl-c1">34</span>,<span class="pl-c1">62</span>,<span class="pl-c1">90</span>,<span class="pl-c1">118</span>,<span class="pl-c1">146</span>],<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">13</span>,<span class="pl-c1">115</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">6</span>,<span class="pl-c1">116</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">28</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">14</span>,<span class="pl-c1">46</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">23</span>,<span class="pl-c1">47</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">44</span>,<span class="pl-c1">24</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">7</span>,<span class="pl-c1">25</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">59</span>,<span class="pl-c1">16</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">1</span>,<span class="pl-c1">17</span>))),<span class="pl-k">new</span> <span class="pl-en">Version</span>(<span class="pl-c1">35</span>,[<span class="pl-c1">6</span>,<span class="pl-c1">30</span>,<span class="pl-c1">54</span>,<span class="pl-c1">78</span>,<span class="pl-c1">102</span>,<span class="pl-c1">126</span>,<span class="pl-c1">150</span>],<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">12</span>,<span class="pl-c1">121</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">7</span>,<span class="pl-c1">122</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">28</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">12</span>,<span class="pl-c1">47</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">26</span>,<span class="pl-c1">48</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">39</span>,<span class="pl-c1">24</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">14</span>,<span class="pl-c1">25</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">22</span>,<span class="pl-c1">15</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">41</span>,<span class="pl-c1">16</span>))),<span class="pl-k">new</span> <span class="pl-en">Version</span>(<span class="pl-c1">36</span>,</td>
      </tr>
      <tr>
        <td id="L24" class="blob-num js-line-number" data-line-number="24"></td>
        <td id="LC24" class="blob-code js-file-line">[<span class="pl-c1">6</span>,<span class="pl-c1">24</span>,<span class="pl-c1">50</span>,<span class="pl-c1">76</span>,<span class="pl-c1">102</span>,<span class="pl-c1">128</span>,<span class="pl-c1">154</span>],<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">6</span>,<span class="pl-c1">121</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">14</span>,<span class="pl-c1">122</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">28</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">6</span>,<span class="pl-c1">47</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">34</span>,<span class="pl-c1">48</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">46</span>,<span class="pl-c1">24</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">10</span>,<span class="pl-c1">25</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">2</span>,<span class="pl-c1">15</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">64</span>,<span class="pl-c1">16</span>))),<span class="pl-k">new</span> <span class="pl-en">Version</span>(<span class="pl-c1">37</span>,[<span class="pl-c1">6</span>,<span class="pl-c1">28</span>,<span class="pl-c1">54</span>,<span class="pl-c1">80</span>,<span class="pl-c1">106</span>,<span class="pl-c1">132</span>,<span class="pl-c1">158</span>],<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">17</span>,<span class="pl-c1">122</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">4</span>,<span class="pl-c1">123</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">28</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">29</span>,<span class="pl-c1">46</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">14</span>,<span class="pl-c1">47</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">49</span>,<span class="pl-c1">24</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">10</span>,<span class="pl-c1">25</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">24</span>,<span class="pl-c1">15</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">46</span>,<span class="pl-c1">16</span>))),<span class="pl-k">new</span> <span class="pl-en">Version</span>(<span class="pl-c1">38</span>,[<span class="pl-c1">6</span>,<span class="pl-c1">32</span>,<span class="pl-c1">58</span>,<span class="pl-c1">84</span>,<span class="pl-c1">110</span>,<span class="pl-c1">136</span>,<span class="pl-c1">162</span>],<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">4</span>,</td>
      </tr>
      <tr>
        <td id="L25" class="blob-num js-line-number" data-line-number="25"></td>
        <td id="LC25" class="blob-code js-file-line"><span class="pl-c1">122</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">18</span>,<span class="pl-c1">123</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">28</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">13</span>,<span class="pl-c1">46</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">32</span>,<span class="pl-c1">47</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">48</span>,<span class="pl-c1">24</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">14</span>,<span class="pl-c1">25</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">42</span>,<span class="pl-c1">15</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">32</span>,<span class="pl-c1">16</span>))),<span class="pl-k">new</span> <span class="pl-en">Version</span>(<span class="pl-c1">39</span>,[<span class="pl-c1">6</span>,<span class="pl-c1">26</span>,<span class="pl-c1">54</span>,<span class="pl-c1">82</span>,<span class="pl-c1">110</span>,<span class="pl-c1">138</span>,<span class="pl-c1">166</span>],<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">20</span>,<span class="pl-c1">117</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">4</span>,<span class="pl-c1">118</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">28</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">40</span>,<span class="pl-c1">47</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">7</span>,<span class="pl-c1">48</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">43</span>,<span class="pl-c1">24</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">22</span>,<span class="pl-c1">25</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">10</span>,<span class="pl-c1">15</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">67</span>,<span class="pl-c1">16</span>))),<span class="pl-k">new</span> <span class="pl-en">Version</span>(<span class="pl-c1">40</span>,[<span class="pl-c1">6</span>,<span class="pl-c1">30</span>,<span class="pl-c1">58</span>,<span class="pl-c1">86</span>,<span class="pl-c1">114</span>,<span class="pl-c1">142</span>,<span class="pl-c1">170</span>],<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">19</span>,<span class="pl-c1">118</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">6</span>,<span class="pl-c1">119</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">28</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">18</span>,</td>
      </tr>
      <tr>
        <td id="L26" class="blob-num js-line-number" data-line-number="26"></td>
        <td id="LC26" class="blob-code js-file-line"><span class="pl-c1">47</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">31</span>,<span class="pl-c1">48</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">34</span>,<span class="pl-c1">24</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">34</span>,<span class="pl-c1">25</span>)),<span class="pl-k">new</span> <span class="pl-en">ECBlocks</span>(<span class="pl-c1">30</span>,<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">20</span>,<span class="pl-c1">15</span>),<span class="pl-k">new</span> <span class="pl-en">ECB</span>(<span class="pl-c1">61</span>,<span class="pl-c1">16</span>)))]};<span class="pl-st">function</span> <span class="pl-en">PerspectiveTransform</span>(<span class="pl-vpf">d</span>,<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">e</span>,<span class="pl-vpf">g</span>,<span class="pl-vpf">f</span>,<span class="pl-vpf">h</span>,<span class="pl-vpf">j</span>){<span class="pl-v">this</span>.a11<span class="pl-k">=</span>d;<span class="pl-v">this</span>.a12<span class="pl-k">=</span>b;<span class="pl-v">this</span>.a13<span class="pl-k">=</span>f;<span class="pl-v">this</span>.a21<span class="pl-k">=</span>a;<span class="pl-v">this</span>.a22<span class="pl-k">=</span>e;<span class="pl-v">this</span>.a23<span class="pl-k">=</span>h;<span class="pl-v">this</span>.a31<span class="pl-k">=</span>c;<span class="pl-v">this</span>.a32<span class="pl-k">=</span>g;<span class="pl-v">this</span>.a33<span class="pl-k">=</span>j;<span class="pl-s3">this</span>.<span class="pl-en">transformPoints1</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">b</span>){<span class="pl-k">for</span>(<span class="pl-s">var</span> e<span class="pl-k">=</span>b.<span class="pl-sc">length</span>,c<span class="pl-k">=</span><span class="pl-v">this</span>.a11,a<span class="pl-k">=</span><span class="pl-v">this</span>.a12,g<span class="pl-k">=</span><span class="pl-v">this</span>.a13,d<span class="pl-k">=</span><span class="pl-v">this</span>.a21,f<span class="pl-k">=</span><span class="pl-v">this</span>.a22,h<span class="pl-k">=</span><span class="pl-v">this</span>.a23,j<span class="pl-k">=</span><span class="pl-v">this</span>.a31,z<span class="pl-k">=</span><span class="pl-v">this</span>.a32,A<span class="pl-k">=</span><span class="pl-v">this</span>.a33,t<span class="pl-k">=</span><span class="pl-c1">0</span>;t<span class="pl-k">&lt;</span>e;t<span class="pl-k">+=</span><span class="pl-c1">2</span>){<span class="pl-s">var</span> u<span class="pl-k">=</span>b[t],v<span class="pl-k">=</span>b[t<span class="pl-k">+</span><span class="pl-c1">1</span>],w<span class="pl-k">=</span>g<span class="pl-k">*</span>u<span class="pl-k">+</span>h<span class="pl-k">*</span>v<span class="pl-k">+</span>A;b[t]<span class="pl-k">=</span>(c<span class="pl-k">*</span>u<span class="pl-k">+</span>d<span class="pl-k">*</span>v<span class="pl-k">+</span>j)/w;b[t<span class="pl-k">+</span><span class="pl-c1">1</span>]<span class="pl-k">=</span>(a<span class="pl-k">*</span>u<span class="pl-k">+</span>f<span class="pl-k">*</span>v<span class="pl-k">+</span>z)/w}};<span class="pl-s3">this</span>.<span class="pl-en">transformPoints2</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">b</span>,<span class="pl-vpf">e</span>){<span class="pl-k">for</span>(<span class="pl-s">var</span> c<span class="pl-k">=</span>b.<span class="pl-sc">length</span>,a<span class="pl-k">=</span><span class="pl-c1">0</span>;a<span class="pl-k">&lt;</span>c;a<span class="pl-k">++</span>){<span class="pl-s">var</span> g<span class="pl-k">=</span>b[a],d<span class="pl-k">=</span>e[a],f<span class="pl-k">=</span><span class="pl-v">this</span>.a13<span class="pl-k">*</span>g<span class="pl-k">+</span><span class="pl-v">this</span>.a23<span class="pl-k">*</span>d<span class="pl-k">+</span><span class="pl-v">this</span>.a33;</td>
      </tr>
      <tr>
        <td id="L27" class="blob-num js-line-number" data-line-number="27"></td>
        <td id="LC27" class="blob-code js-file-line">b[a]<span class="pl-k">=</span>(<span class="pl-v">this</span>.a11<span class="pl-k">*</span>g<span class="pl-k">+</span><span class="pl-v">this</span>.a21<span class="pl-k">*</span>d<span class="pl-k">+</span><span class="pl-v">this</span>.a31)/f;e[a]<span class="pl-k">=</span>(<span class="pl-v">this</span>.a12<span class="pl-k">*</span>g<span class="pl-k">+</span><span class="pl-v">this</span>.a22<span class="pl-k">*</span>d<span class="pl-k">+</span><span class="pl-v">this</span>.a32)/f}};<span class="pl-s3">this</span>.<span class="pl-en">buildAdjoint</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">PerspectiveTransform</span>(<span class="pl-v">this</span>.a22<span class="pl-k">*</span><span class="pl-v">this</span>.a33<span class="pl-k">-</span><span class="pl-v">this</span>.a23<span class="pl-k">*</span><span class="pl-v">this</span>.a32,<span class="pl-v">this</span>.a23<span class="pl-k">*</span><span class="pl-v">this</span>.a31<span class="pl-k">-</span><span class="pl-v">this</span>.a21<span class="pl-k">*</span><span class="pl-v">this</span>.a33,<span class="pl-v">this</span>.a21<span class="pl-k">*</span><span class="pl-v">this</span>.a32<span class="pl-k">-</span><span class="pl-v">this</span>.a22<span class="pl-k">*</span><span class="pl-v">this</span>.a31,<span class="pl-v">this</span>.a13<span class="pl-k">*</span><span class="pl-v">this</span>.a32<span class="pl-k">-</span><span class="pl-v">this</span>.a12<span class="pl-k">*</span><span class="pl-v">this</span>.a33,<span class="pl-v">this</span>.a11<span class="pl-k">*</span><span class="pl-v">this</span>.a33<span class="pl-k">-</span><span class="pl-v">this</span>.a13<span class="pl-k">*</span><span class="pl-v">this</span>.a31,<span class="pl-v">this</span>.a12<span class="pl-k">*</span><span class="pl-v">this</span>.a31<span class="pl-k">-</span><span class="pl-v">this</span>.a11<span class="pl-k">*</span><span class="pl-v">this</span>.a32,<span class="pl-v">this</span>.a12<span class="pl-k">*</span><span class="pl-v">this</span>.a23<span class="pl-k">-</span><span class="pl-v">this</span>.a13<span class="pl-k">*</span><span class="pl-v">this</span>.a22,<span class="pl-v">this</span>.a13<span class="pl-k">*</span><span class="pl-v">this</span>.a21<span class="pl-k">-</span><span class="pl-v">this</span>.a11<span class="pl-k">*</span><span class="pl-v">this</span>.a23,<span class="pl-v">this</span>.a11<span class="pl-k">*</span><span class="pl-v">this</span>.a22<span class="pl-k">-</span><span class="pl-v">this</span>.a12<span class="pl-k">*</span><span class="pl-v">this</span>.a21)};<span class="pl-s3">this</span>.<span class="pl-en">times</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">b</span>){<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">PerspectiveTransform</span>(<span class="pl-v">this</span>.a11<span class="pl-k">*</span></td>
      </tr>
      <tr>
        <td id="L28" class="blob-num js-line-number" data-line-number="28"></td>
        <td id="LC28" class="blob-code js-file-line">b.a11<span class="pl-k">+</span><span class="pl-v">this</span>.a21<span class="pl-k">*</span>b.a12<span class="pl-k">+</span><span class="pl-v">this</span>.a31<span class="pl-k">*</span>b.a13,<span class="pl-v">this</span>.a11<span class="pl-k">*</span>b.a21<span class="pl-k">+</span><span class="pl-v">this</span>.a21<span class="pl-k">*</span>b.a22<span class="pl-k">+</span><span class="pl-v">this</span>.a31<span class="pl-k">*</span>b.a23,<span class="pl-v">this</span>.a11<span class="pl-k">*</span>b.a31<span class="pl-k">+</span><span class="pl-v">this</span>.a21<span class="pl-k">*</span>b.a32<span class="pl-k">+</span><span class="pl-v">this</span>.a31<span class="pl-k">*</span>b.a33,<span class="pl-v">this</span>.a12<span class="pl-k">*</span>b.a11<span class="pl-k">+</span><span class="pl-v">this</span>.a22<span class="pl-k">*</span>b.a12<span class="pl-k">+</span><span class="pl-v">this</span>.a32<span class="pl-k">*</span>b.a13,<span class="pl-v">this</span>.a12<span class="pl-k">*</span>b.a21<span class="pl-k">+</span><span class="pl-v">this</span>.a22<span class="pl-k">*</span>b.a22<span class="pl-k">+</span><span class="pl-v">this</span>.a32<span class="pl-k">*</span>b.a23,<span class="pl-v">this</span>.a12<span class="pl-k">*</span>b.a31<span class="pl-k">+</span><span class="pl-v">this</span>.a22<span class="pl-k">*</span>b.a32<span class="pl-k">+</span><span class="pl-v">this</span>.a32<span class="pl-k">*</span>b.a33,<span class="pl-v">this</span>.a13<span class="pl-k">*</span>b.a11<span class="pl-k">+</span><span class="pl-v">this</span>.a23<span class="pl-k">*</span>b.a12<span class="pl-k">+</span><span class="pl-v">this</span>.a33<span class="pl-k">*</span>b.a13,<span class="pl-v">this</span>.a13<span class="pl-k">*</span>b.a21<span class="pl-k">+</span><span class="pl-v">this</span>.a23<span class="pl-k">*</span>b.a22<span class="pl-k">+</span><span class="pl-v">this</span>.a33<span class="pl-k">*</span>b.a23,<span class="pl-v">this</span>.a13<span class="pl-k">*</span>b.a31<span class="pl-k">+</span><span class="pl-v">this</span>.a23<span class="pl-k">*</span>b.a32<span class="pl-k">+</span><span class="pl-v">this</span>.a33<span class="pl-k">*</span>b.a33)}}</td>
      </tr>
      <tr>
        <td id="L29" class="blob-num js-line-number" data-line-number="29"></td>
        <td id="LC29" class="blob-code js-file-line"><span class="pl-s3">PerspectiveTransform</span>.<span class="pl-en">quadrilateralToQuadrilateral</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">d</span>,<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">e</span>,<span class="pl-vpf">g</span>,<span class="pl-vpf">f</span>,<span class="pl-vpf">h</span>,<span class="pl-vpf">j</span>,<span class="pl-vpf">k</span>,<span class="pl-vpf">n</span>,<span class="pl-vpf">l</span>,<span class="pl-vpf">s</span>,<span class="pl-vpf">r</span>,<span class="pl-vpf">m</span>,<span class="pl-vpf">q</span>){d<span class="pl-k">=</span><span class="pl-v">this</span>.quadrilateralToSquare(d,a,c,b,e,g,f,h);<span class="pl-k">return</span> <span class="pl-v">this</span>.squareToQuadrilateral(j,k,n,l,s,r,m,q).times(d)};</td>
      </tr>
      <tr>
        <td id="L30" class="blob-num js-line-number" data-line-number="30"></td>
        <td id="LC30" class="blob-code js-file-line"><span class="pl-s3">PerspectiveTransform</span>.<span class="pl-en">squareToQuadrilateral</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">d</span>,<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">e</span>,<span class="pl-vpf">g</span>,<span class="pl-vpf">f</span>,<span class="pl-vpf">h</span>){dy2<span class="pl-k">=</span>h<span class="pl-k">-</span>g;dy3<span class="pl-k">=</span>a<span class="pl-k">-</span>b<span class="pl-k">+</span>g<span class="pl-k">-</span>h;<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">==</span>dy2<span class="pl-k">&amp;&amp;</span><span class="pl-c1">0</span><span class="pl-k">==</span>dy3)<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">PerspectiveTransform</span>(c<span class="pl-k">-</span>d,e<span class="pl-k">-</span>c,d,b<span class="pl-k">-</span>a,g<span class="pl-k">-</span>b,a,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">1</span>);dx1<span class="pl-k">=</span>c<span class="pl-k">-</span>e;dx2<span class="pl-k">=</span>f<span class="pl-k">-</span>e;dx3<span class="pl-k">=</span>d<span class="pl-k">-</span>c<span class="pl-k">+</span>e<span class="pl-k">-</span>f;dy1<span class="pl-k">=</span>b<span class="pl-k">-</span>g;denominator<span class="pl-k">=</span>dx1<span class="pl-k">*</span>dy2<span class="pl-k">-</span>dx2<span class="pl-k">*</span>dy1;a13<span class="pl-k">=</span>(dx3<span class="pl-k">*</span>dy2<span class="pl-k">-</span>dx2<span class="pl-k">*</span>dy3)/denominator;a23<span class="pl-k">=</span>(dx1<span class="pl-k">*</span>dy3<span class="pl-k">-</span>dx3<span class="pl-k">*</span>dy1)/denominator;<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">PerspectiveTransform</span>(c<span class="pl-k">-</span>d<span class="pl-k">+</span>a13<span class="pl-k">*</span>c,f<span class="pl-k">-</span>d<span class="pl-k">+</span>a23<span class="pl-k">*</span>f,d,b<span class="pl-k">-</span>a<span class="pl-k">+</span>a13<span class="pl-k">*</span>b,h<span class="pl-k">-</span>a<span class="pl-k">+</span>a23<span class="pl-k">*</span>h,a,a13,a23,<span class="pl-c1">1</span>)};</td>
      </tr>
      <tr>
        <td id="L31" class="blob-num js-line-number" data-line-number="31"></td>
        <td id="LC31" class="blob-code js-file-line"><span class="pl-s3">PerspectiveTransform</span>.<span class="pl-en">quadrilateralToSquare</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">d</span>,<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">e</span>,<span class="pl-vpf">g</span>,<span class="pl-vpf">f</span>,<span class="pl-vpf">h</span>){<span class="pl-k">return</span> <span class="pl-v">this</span>.squareToQuadrilateral(d,a,c,b,e,g,f,h).buildAdjoint()};<span class="pl-st">function</span> <span class="pl-en">DetectorResult</span>(<span class="pl-vpf">d</span>,<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.bits<span class="pl-k">=</span>d;<span class="pl-v">this</span>.points<span class="pl-k">=</span>a}</td>
      </tr>
      <tr>
        <td id="L32" class="blob-num js-line-number" data-line-number="32"></td>
        <td id="LC32" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">Detector</span>(<span class="pl-vpf">d</span>){<span class="pl-v">this</span>.image<span class="pl-k">=</span>d;<span class="pl-v">this</span>.resultPointCallback<span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-s3">this</span>.<span class="pl-en">sizeOfBlackWhiteBlackRun</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">e</span>){<span class="pl-s">var</span> g<span class="pl-k">=</span><span class="pl-s3">Math</span>.<span class="pl-s3">abs</span>(e<span class="pl-k">-</span>c)<span class="pl-k">&gt;</span><span class="pl-s3">Math</span>.<span class="pl-s3">abs</span>(b<span class="pl-k">-</span>a);<span class="pl-k">if</span>(g){<span class="pl-s">var</span> d<span class="pl-k">=</span>a;a<span class="pl-k">=</span>c;c<span class="pl-k">=</span>d;d<span class="pl-k">=</span>b;b<span class="pl-k">=</span>e;e<span class="pl-k">=</span>d}<span class="pl-k">for</span>(<span class="pl-s">var</span> h<span class="pl-k">=</span><span class="pl-s3">Math</span>.<span class="pl-s3">abs</span>(b<span class="pl-k">-</span>a),j<span class="pl-k">=</span><span class="pl-s3">Math</span>.<span class="pl-s3">abs</span>(e<span class="pl-k">-</span>c),k<span class="pl-k">=-</span>h<span class="pl-k">&gt;&gt;</span><span class="pl-c1">1</span>,n<span class="pl-k">=</span>c<span class="pl-k">&lt;</span>e<span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">:-</span><span class="pl-c1">1</span>,l<span class="pl-k">=</span>a<span class="pl-k">&lt;</span>b<span class="pl-k">?</span><span class="pl-c1">1</span><span class="pl-k">:-</span><span class="pl-c1">1</span>,s<span class="pl-k">=</span><span class="pl-c1">0</span>,r<span class="pl-k">=</span>a,d<span class="pl-k">=</span>c;r<span class="pl-k">!=</span>b;r<span class="pl-k">+=</span>l){<span class="pl-s">var</span> m<span class="pl-k">=</span>g<span class="pl-k">?</span>d<span class="pl-k">:</span>r,q<span class="pl-k">=</span>g<span class="pl-k">?</span>r<span class="pl-k">:</span>d;<span class="pl-c1">1</span><span class="pl-k">==</span>s<span class="pl-k">?</span><span class="pl-v">this</span>.image[m<span class="pl-k">+</span>q<span class="pl-k">*</span>qrcode.<span class="pl-sc">width</span>]<span class="pl-k">&amp;&amp;</span>s<span class="pl-k">++:</span><span class="pl-v">this</span>.image[m<span class="pl-k">+</span>q<span class="pl-k">*</span>qrcode.<span class="pl-sc">width</span>]<span class="pl-k">||</span>s<span class="pl-k">++</span>;<span class="pl-k">if</span>(<span class="pl-c1">3</span><span class="pl-k">==</span>s)<span class="pl-k">return</span> e<span class="pl-k">=</span>r<span class="pl-k">-</span>a,c<span class="pl-k">=</span>d<span class="pl-k">-</span>c,<span class="pl-s3">Math</span>.<span class="pl-s3">sqrt</span>(e<span class="pl-k">*</span>e<span class="pl-k">+</span>c<span class="pl-k">*</span>c);k<span class="pl-k">+=</span>j;<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">&lt;</span>k){<span class="pl-k">if</span>(d<span class="pl-k">==</span>e)<span class="pl-k">break</span>;d<span class="pl-k">+=</span>n;k<span class="pl-k">-=</span>h}}a<span class="pl-k">=</span>b<span class="pl-k">-</span>a;c<span class="pl-k">=</span>e<span class="pl-k">-</span>c;<span class="pl-k">return</span> <span class="pl-s3">Math</span>.<span class="pl-s3">sqrt</span>(a<span class="pl-k">*</span>a<span class="pl-k">+</span>c<span class="pl-k">*</span>c)};<span class="pl-v">this</span>.sizeOfBlackWhiteBlackRunBothWays<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L33" class="blob-num js-line-number" data-line-number="33"></td>
        <td id="LC33" class="blob-code js-file-line"><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">e</span>){<span class="pl-s">var</span> g<span class="pl-k">=</span><span class="pl-v">this</span>.sizeOfBlackWhiteBlackRun(a,c,b,e),d<span class="pl-k">=</span><span class="pl-c1">1</span>;b<span class="pl-k">=</span>a<span class="pl-k">-</span>(b<span class="pl-k">-</span>a);<span class="pl-c1">0</span><span class="pl-k">&gt;</span>b<span class="pl-k">?</span>(d<span class="pl-k">=</span>a/(a<span class="pl-k">-</span>b),b<span class="pl-k">=</span><span class="pl-c1">0</span>)<span class="pl-k">:</span>b<span class="pl-k">&gt;=</span>qrcode.<span class="pl-sc">width</span><span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span>(qrcode.<span class="pl-sc">width</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">-</span>a)/(b<span class="pl-k">-</span>a),b<span class="pl-k">=</span>qrcode.<span class="pl-sc">width</span><span class="pl-k">-</span><span class="pl-c1">1</span>);e<span class="pl-k">=</span><span class="pl-s3">Math</span>.<span class="pl-s3">floor</span>(c<span class="pl-k">-</span>(e<span class="pl-k">-</span>c)<span class="pl-k">*</span>d);d<span class="pl-k">=</span><span class="pl-c1">1</span>;<span class="pl-c1">0</span><span class="pl-k">&gt;</span>e<span class="pl-k">?</span>(d<span class="pl-k">=</span>c/(c<span class="pl-k">-</span>e),e<span class="pl-k">=</span><span class="pl-c1">0</span>)<span class="pl-k">:</span>e<span class="pl-k">&gt;=</span>qrcode.<span class="pl-sc">height</span><span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span>(qrcode.<span class="pl-sc">height</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">-</span>c)/(e<span class="pl-k">-</span>c),e<span class="pl-k">=</span>qrcode.<span class="pl-sc">height</span><span class="pl-k">-</span><span class="pl-c1">1</span>);b<span class="pl-k">=</span><span class="pl-s3">Math</span>.<span class="pl-s3">floor</span>(a<span class="pl-k">+</span>(b<span class="pl-k">-</span>a)<span class="pl-k">*</span>d);g<span class="pl-k">+=</span><span class="pl-v">this</span>.sizeOfBlackWhiteBlackRun(a,c,b,e);<span class="pl-k">return</span> g<span class="pl-k">-</span><span class="pl-c1">1</span>};<span class="pl-s3">this</span>.<span class="pl-en">calculateModuleSizeOneWay</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>){<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.sizeOfBlackWhiteBlackRunBothWays(<span class="pl-s3">Math</span>.<span class="pl-s3">floor</span>(a.X),<span class="pl-s3">Math</span>.<span class="pl-s3">floor</span>(a.Y),<span class="pl-s3">Math</span>.<span class="pl-s3">floor</span>(c.X),<span class="pl-s3">Math</span>.<span class="pl-s3">floor</span>(c.Y)),</td>
      </tr>
      <tr>
        <td id="L34" class="blob-num js-line-number" data-line-number="34"></td>
        <td id="LC34" class="blob-code js-file-line">e<span class="pl-k">=</span><span class="pl-v">this</span>.sizeOfBlackWhiteBlackRunBothWays(<span class="pl-s3">Math</span>.<span class="pl-s3">floor</span>(c.X),<span class="pl-s3">Math</span>.<span class="pl-s3">floor</span>(c.Y),<span class="pl-s3">Math</span>.<span class="pl-s3">floor</span>(a.X),<span class="pl-s3">Math</span>.<span class="pl-s3">floor</span>(a.Y));<span class="pl-k">return</span> <span class="pl-s3">isNaN</span>(b)<span class="pl-k">?</span>e/<span class="pl-c1">7</span><span class="pl-k">:</span><span class="pl-s3">isNaN</span>(e)<span class="pl-k">?</span>b/<span class="pl-c1">7</span><span class="pl-k">:</span>(b<span class="pl-k">+</span>e)/<span class="pl-c1">14</span>};<span class="pl-s3">this</span>.<span class="pl-en">calculateModuleSize</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>){<span class="pl-k">return</span>(<span class="pl-v">this</span>.calculateModuleSizeOneWay(a,c)<span class="pl-k">+</span><span class="pl-v">this</span>.calculateModuleSizeOneWay(a,b))/<span class="pl-c1">2</span>};<span class="pl-s3">this</span>.<span class="pl-en">distance</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>){xDiff<span class="pl-k">=</span>a.X<span class="pl-k">-</span>c.X;yDiff<span class="pl-k">=</span>a.Y<span class="pl-k">-</span>c.Y;<span class="pl-k">return</span> <span class="pl-s3">Math</span>.<span class="pl-s3">sqrt</span>(xDiff<span class="pl-k">*</span>xDiff<span class="pl-k">+</span>yDiff<span class="pl-k">*</span>yDiff)};<span class="pl-s3">this</span>.<span class="pl-en">computeDimension</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">e</span>){c<span class="pl-k">=</span><span class="pl-s3">Math</span>.<span class="pl-s3">round</span>(<span class="pl-v">this</span>.distance(a,c)/e);a<span class="pl-k">=</span><span class="pl-s3">Math</span>.<span class="pl-s3">round</span>(<span class="pl-v">this</span>.distance(a,b)/e);a<span class="pl-k">=</span>(c<span class="pl-k">+</span>a<span class="pl-k">&gt;&gt;</span><span class="pl-c1">1</span>)<span class="pl-k">+</span><span class="pl-c1">7</span>;<span class="pl-k">switch</span>(a<span class="pl-k">&amp;</span></td>
      </tr>
      <tr>
        <td id="L35" class="blob-num js-line-number" data-line-number="35"></td>
        <td id="LC35" class="blob-code js-file-line"><span class="pl-c1">3</span>){<span class="pl-k">case</span> <span class="pl-c1">0</span><span class="pl-k">:</span>a<span class="pl-k">++</span>;<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>a<span class="pl-k">--</span>;<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">3</span><span class="pl-k">:</span><span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>Error<span class="pl-pds">&quot;</span></span>;}<span class="pl-k">return</span> a};<span class="pl-s3">this</span>.<span class="pl-en">findAlignmentInRegion</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">e</span>){<span class="pl-s">var</span> g<span class="pl-k">=</span><span class="pl-s3">Math</span>.<span class="pl-s3">floor</span>(e<span class="pl-k">*</span>a);e<span class="pl-k">=</span><span class="pl-s3">Math</span>.<span class="pl-s3">max</span>(<span class="pl-c1">0</span>,c<span class="pl-k">-</span>g);c<span class="pl-k">=</span><span class="pl-s3">Math</span>.<span class="pl-s3">min</span>(qrcode.<span class="pl-sc">width</span><span class="pl-k">-</span><span class="pl-c1">1</span>,c<span class="pl-k">+</span>g);<span class="pl-k">if</span>(c<span class="pl-k">-</span>e<span class="pl-k">&lt;</span><span class="pl-c1">3</span><span class="pl-k">*</span>a)<span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>Error<span class="pl-pds">&quot;</span></span>;<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-s3">Math</span>.<span class="pl-s3">max</span>(<span class="pl-c1">0</span>,b<span class="pl-k">-</span>g);b<span class="pl-k">=</span><span class="pl-s3">Math</span>.<span class="pl-s3">min</span>(qrcode.<span class="pl-sc">height</span><span class="pl-k">-</span><span class="pl-c1">1</span>,b<span class="pl-k">+</span>g);<span class="pl-k">return</span>(<span class="pl-k">new</span> <span class="pl-en">AlignmentPatternFinder</span>(<span class="pl-v">this</span>.image,e,d,c<span class="pl-k">-</span>e,b<span class="pl-k">-</span>d,a,<span class="pl-v">this</span>.resultPointCallback)).<span class="pl-s3">find</span>()};<span class="pl-s3">this</span>.<span class="pl-en">createTransform</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">e</span>,<span class="pl-vpf">d</span>){d<span class="pl-k">-=</span><span class="pl-c1">3.5</span>;<span class="pl-s">var</span> f,h,j;<span class="pl-c1">null</span><span class="pl-k">!=</span>e<span class="pl-k">?</span>(f<span class="pl-k">=</span>e.X,e<span class="pl-k">=</span>e.Y,h<span class="pl-k">=</span>j<span class="pl-k">=</span>d<span class="pl-k">-</span><span class="pl-c1">3</span>)<span class="pl-k">:</span>(f<span class="pl-k">=</span>c.X<span class="pl-k">-</span>a.X<span class="pl-k">+</span>b.X,e<span class="pl-k">=</span>c.Y<span class="pl-k">-</span>a.Y<span class="pl-k">+</span>b.Y,h<span class="pl-k">=</span>j<span class="pl-k">=</span>d);<span class="pl-k">return</span> PerspectiveTransform.quadrilateralToQuadrilateral(<span class="pl-c1">3.5</span>,</td>
      </tr>
      <tr>
        <td id="L36" class="blob-num js-line-number" data-line-number="36"></td>
        <td id="LC36" class="blob-code js-file-line"><span class="pl-c1">3.5</span>,d,<span class="pl-c1">3.5</span>,h,j,<span class="pl-c1">3.5</span>,d,a.X,a.Y,c.X,c.Y,f,e,b.X,b.Y)};<span class="pl-s3">this</span>.<span class="pl-en">sampleGrid</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>){<span class="pl-k">return</span> GridSampler.sampleGrid3(a,b,c)};<span class="pl-s3">this</span>.<span class="pl-en">processFinderPatternInfo</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.TopLeft,b<span class="pl-k">=</span>a.TopRight;a<span class="pl-k">=</span>a.BottomLeft;<span class="pl-s">var</span> e<span class="pl-k">=</span><span class="pl-v">this</span>.calculateModuleSize(c,b,a);<span class="pl-k">if</span>(<span class="pl-c1">1</span><span class="pl-k">&gt;</span>e)<span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>Error<span class="pl-pds">&quot;</span></span>;<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-v">this</span>.computeDimension(c,b,a,e),f<span class="pl-k">=</span>Version.getProvisionalVersionForDimension(d),h<span class="pl-k">=</span>f.DimensionForVersion<span class="pl-k">-</span><span class="pl-c1">7</span>,j<span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">&lt;</span>f.AlignmentPatternCenters.<span class="pl-sc">length</span>){h<span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">-</span><span class="pl-c1">3</span>/h;f<span class="pl-k">=</span><span class="pl-s3">Math</span>.<span class="pl-s3">floor</span>(c.X<span class="pl-k">+</span>h<span class="pl-k">*</span>(b.X<span class="pl-k">-</span>c.X<span class="pl-k">+</span>a.X<span class="pl-k">-</span>c.X));<span class="pl-k">for</span>(h<span class="pl-k">=</span><span class="pl-s3">Math</span>.<span class="pl-s3">floor</span>(c.Y<span class="pl-k">+</span>h<span class="pl-k">*</span>(b.Y<span class="pl-k">-</span>c.Y<span class="pl-k">+</span>a.Y<span class="pl-k">-</span></td>
      </tr>
      <tr>
        <td id="L37" class="blob-num js-line-number" data-line-number="37"></td>
        <td id="LC37" class="blob-code js-file-line">c.Y));;){j<span class="pl-k">=</span><span class="pl-v">this</span>.findAlignmentInRegion(e,f,h,<span class="pl-c1">4</span>);<span class="pl-k">break</span>}}e<span class="pl-k">=</span><span class="pl-v">this</span>.createTransform(c,b,a,j,d);d<span class="pl-k">=</span><span class="pl-v">this</span>.sampleGrid(<span class="pl-v">this</span>.image,e,d);<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">DetectorResult</span>(d,<span class="pl-c1">null</span><span class="pl-k">==</span>j<span class="pl-k">?</span>[a,c,b]<span class="pl-k">:</span>[a,c,b,j])};<span class="pl-s3">this</span>.<span class="pl-en">detect</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-s">var</span> a<span class="pl-k">=</span>(<span class="pl-k">new</span> <span class="pl-en">FinderPatternFinder</span>).findFinderPattern(<span class="pl-v">this</span>.image);<span class="pl-k">return</span> <span class="pl-v">this</span>.processFinderPatternInfo(a)}};<span class="pl-s">var</span> FORMAT_INFO_MASK_QR<span class="pl-k">=</span><span class="pl-c1">21522</span>,FORMAT_INFO_DECODE_LOOKUP<span class="pl-k">=</span>[[<span class="pl-c1">21522</span>,<span class="pl-c1">0</span>],[<span class="pl-c1">20773</span>,<span class="pl-c1">1</span>],[<span class="pl-c1">24188</span>,<span class="pl-c1">2</span>],[<span class="pl-c1">23371</span>,<span class="pl-c1">3</span>],[<span class="pl-c1">17913</span>,<span class="pl-c1">4</span>],[<span class="pl-c1">16590</span>,<span class="pl-c1">5</span>],[<span class="pl-c1">20375</span>,<span class="pl-c1">6</span>],[<span class="pl-c1">19104</span>,<span class="pl-c1">7</span>],[<span class="pl-c1">30660</span>,<span class="pl-c1">8</span>],[<span class="pl-c1">29427</span>,<span class="pl-c1">9</span>],[<span class="pl-c1">32170</span>,<span class="pl-c1">10</span>],[<span class="pl-c1">30877</span>,<span class="pl-c1">11</span>],[<span class="pl-c1">26159</span>,<span class="pl-c1">12</span>],[<span class="pl-c1">25368</span>,<span class="pl-c1">13</span>],[<span class="pl-c1">27713</span>,<span class="pl-c1">14</span>],[<span class="pl-c1">26998</span>,<span class="pl-c1">15</span>],[<span class="pl-c1">5769</span>,<span class="pl-c1">16</span>],[<span class="pl-c1">5054</span>,<span class="pl-c1">17</span>],[<span class="pl-c1">7399</span>,<span class="pl-c1">18</span>],[<span class="pl-c1">6608</span>,<span class="pl-c1">19</span>],[<span class="pl-c1">1890</span>,<span class="pl-c1">20</span>],[<span class="pl-c1">597</span>,<span class="pl-c1">21</span>],[<span class="pl-c1">3340</span>,<span class="pl-c1">22</span>],[<span class="pl-c1">2107</span>,<span class="pl-c1">23</span>],[<span class="pl-c1">13663</span>,<span class="pl-c1">24</span>],[<span class="pl-c1">12392</span>,<span class="pl-c1">25</span>],[<span class="pl-c1">16177</span>,<span class="pl-c1">26</span>],[<span class="pl-c1">14854</span>,<span class="pl-c1">27</span>],[<span class="pl-c1">9396</span>,<span class="pl-c1">28</span>],[<span class="pl-c1">8579</span>,<span class="pl-c1">29</span>],[<span class="pl-c1">11994</span>,<span class="pl-c1">30</span>],[<span class="pl-c1">11245</span>,<span class="pl-c1">31</span>]],BITS_SET_IN_HALF_BYTE<span class="pl-k">=</span>[<span class="pl-c1">0</span>,<span class="pl-c1">1</span>,<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">2</span>,<span class="pl-c1">3</span>,<span class="pl-c1">1</span>,<span class="pl-c1">2</span>,<span class="pl-c1">2</span>,<span class="pl-c1">3</span>,<span class="pl-c1">2</span>,<span class="pl-c1">3</span>,<span class="pl-c1">3</span>,<span class="pl-c1">4</span>];</td>
      </tr>
      <tr>
        <td id="L38" class="blob-num js-line-number" data-line-number="38"></td>
        <td id="LC38" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">FormatInformation</span>(<span class="pl-vpf">d</span>){<span class="pl-v">this</span>.errorCorrectionLevel<span class="pl-k">=</span>ErrorCorrectionLevel.forBits(d<span class="pl-k">&gt;&gt;</span><span class="pl-c1">3</span><span class="pl-k">&amp;</span><span class="pl-c1">3</span>);<span class="pl-v">this</span>.dataMask<span class="pl-k">=</span>d<span class="pl-k">&amp;</span><span class="pl-c1">7</span>;<span class="pl-v">this</span>.__defineGetter__(<span class="pl-s1"><span class="pl-pds">&quot;</span>ErrorCorrectionLevel<span class="pl-pds">&quot;</span></span>,<span class="pl-st">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.errorCorrectionLevel});<span class="pl-v">this</span>.__defineGetter__(<span class="pl-s1"><span class="pl-pds">&quot;</span>DataMask<span class="pl-pds">&quot;</span></span>,<span class="pl-st">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.dataMask});<span class="pl-s3">this</span>.<span class="pl-en">GetHashCode</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.errorCorrectionLevel.ordinal()<span class="pl-k">&lt;&lt;</span><span class="pl-c1">3</span>|dataMask};<span class="pl-s3">this</span>.<span class="pl-en">Equals</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-k">return</span> <span class="pl-v">this</span>.errorCorrectionLevel<span class="pl-k">==</span>a.errorCorrectionLevel<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.dataMask<span class="pl-k">==</span>a.dataMask}}</td>
      </tr>
      <tr>
        <td id="L39" class="blob-num js-line-number" data-line-number="39"></td>
        <td id="LC39" class="blob-code js-file-line"><span class="pl-s3">FormatInformation</span>.<span class="pl-en">numBitsDiffering</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">d</span>,<span class="pl-vpf">a</span>){d<span class="pl-k">^=</span>a;<span class="pl-k">return</span> BITS_SET_IN_HALF_BYTE[d<span class="pl-k">&amp;</span><span class="pl-c1">15</span>]<span class="pl-k">+</span>BITS_SET_IN_HALF_BYTE[URShift(d,<span class="pl-c1">4</span>)<span class="pl-k">&amp;</span><span class="pl-c1">15</span>]<span class="pl-k">+</span>BITS_SET_IN_HALF_BYTE[URShift(d,<span class="pl-c1">8</span>)<span class="pl-k">&amp;</span><span class="pl-c1">15</span>]<span class="pl-k">+</span>BITS_SET_IN_HALF_BYTE[URShift(d,<span class="pl-c1">12</span>)<span class="pl-k">&amp;</span><span class="pl-c1">15</span>]<span class="pl-k">+</span>BITS_SET_IN_HALF_BYTE[URShift(d,<span class="pl-c1">16</span>)<span class="pl-k">&amp;</span><span class="pl-c1">15</span>]<span class="pl-k">+</span>BITS_SET_IN_HALF_BYTE[URShift(d,<span class="pl-c1">20</span>)<span class="pl-k">&amp;</span><span class="pl-c1">15</span>]<span class="pl-k">+</span>BITS_SET_IN_HALF_BYTE[URShift(d,<span class="pl-c1">24</span>)<span class="pl-k">&amp;</span><span class="pl-c1">15</span>]<span class="pl-k">+</span>BITS_SET_IN_HALF_BYTE[URShift(d,<span class="pl-c1">28</span>)<span class="pl-k">&amp;</span><span class="pl-c1">15</span>]};</td>
      </tr>
      <tr>
        <td id="L40" class="blob-num js-line-number" data-line-number="40"></td>
        <td id="LC40" class="blob-code js-file-line"><span class="pl-s3">FormatInformation</span>.<span class="pl-en">decodeFormatInformation</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">d</span>){<span class="pl-s">var</span> a<span class="pl-k">=</span>FormatInformation.doDecodeFormatInformation(d);<span class="pl-k">return</span> <span class="pl-c1">null</span><span class="pl-k">!=</span>a<span class="pl-k">?</span>a<span class="pl-k">:</span>FormatInformation.doDecodeFormatInformation(d<span class="pl-k">^</span>FORMAT_INFO_MASK_QR)};<span class="pl-s3">FormatInformation</span>.<span class="pl-en">doDecodeFormatInformation</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">d</span>){<span class="pl-k">for</span>(<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-c1">4294967295</span>,c<span class="pl-k">=</span><span class="pl-c1">0</span>,b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span>FORMAT_INFO_DECODE_LOOKUP.<span class="pl-sc">length</span>;b<span class="pl-k">++</span>){<span class="pl-s">var</span> e<span class="pl-k">=</span>FORMAT_INFO_DECODE_LOOKUP[b],g<span class="pl-k">=</span>e[<span class="pl-c1">0</span>];<span class="pl-k">if</span>(g<span class="pl-k">==</span>d)<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">FormatInformation</span>(e[<span class="pl-c1">1</span>]);g<span class="pl-k">=</span><span class="pl-v">this</span>.numBitsDiffering(d,g);g<span class="pl-k">&lt;</span>a<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span>e[<span class="pl-c1">1</span>],a<span class="pl-k">=</span>g)}<span class="pl-k">return</span> <span class="pl-c1">3</span><span class="pl-k">&gt;=</span>a<span class="pl-k">?</span><span class="pl-k">new</span> <span class="pl-en">FormatInformation</span>(c)<span class="pl-k">:</span><span class="pl-c1">null</span>};<span class="pl-st">function</span> <span class="pl-en">ErrorCorrectionLevel</span>(<span class="pl-vpf">d</span>,<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>){<span class="pl-v">this</span>.ordinal_Renamed_Field<span class="pl-k">=</span>d;<span class="pl-v">this</span>.bits<span class="pl-k">=</span>a;<span class="pl-v">this</span>.<span class="pl-sc">name</span><span class="pl-k">=</span>c;<span class="pl-v">this</span>.__defineGetter__(<span class="pl-s1"><span class="pl-pds">&quot;</span>Bits<span class="pl-pds">&quot;</span></span>,<span class="pl-st">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.bits});<span class="pl-v">this</span>.__defineGetter__(<span class="pl-s1"><span class="pl-pds">&quot;</span>Name<span class="pl-pds">&quot;</span></span>,<span class="pl-st">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-sc">name</span>});<span class="pl-s3">this</span>.<span class="pl-en">ordinal</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.ordinal_Renamed_Field}}<span class="pl-s3">ErrorCorrectionLevel</span>.<span class="pl-en">forBits</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">d</span>){<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">&gt;</span>d<span class="pl-k">||</span>d<span class="pl-k">&gt;=</span>FOR_BITS.Length)<span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>ArgumentException<span class="pl-pds">&quot;</span></span>;<span class="pl-k">return</span> FOR_BITS[d]};</td>
      </tr>
      <tr>
        <td id="L41" class="blob-num js-line-number" data-line-number="41"></td>
        <td id="LC41" class="blob-code js-file-line"><span class="pl-s">var</span> L<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">ErrorCorrectionLevel</span>(<span class="pl-c1">0</span>,<span class="pl-c1">1</span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>L<span class="pl-pds">&quot;</span></span>),M<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">ErrorCorrectionLevel</span>(<span class="pl-c1">1</span>,<span class="pl-c1">0</span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>M<span class="pl-pds">&quot;</span></span>),Q<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">ErrorCorrectionLevel</span>(<span class="pl-c1">2</span>,<span class="pl-c1">3</span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>Q<span class="pl-pds">&quot;</span></span>),H<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">ErrorCorrectionLevel</span>(<span class="pl-c1">3</span>,<span class="pl-c1">2</span>,<span class="pl-s1"><span class="pl-pds">&quot;</span>H<span class="pl-pds">&quot;</span></span>),FOR_BITS<span class="pl-k">=</span>[M,L,H,Q];<span class="pl-st">function</span> <span class="pl-en">BitMatrix</span>(<span class="pl-vpf">d</span>,<span class="pl-vpf">a</span>){a<span class="pl-k">||</span>(a<span class="pl-k">=</span>d);<span class="pl-k">if</span>(<span class="pl-c1">1</span><span class="pl-k">&gt;</span>d<span class="pl-k">||</span><span class="pl-c1">1</span><span class="pl-k">&gt;</span>a)<span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>Both dimensions must be greater than 0<span class="pl-pds">&quot;</span></span>;<span class="pl-v">this</span>.<span class="pl-sc">width</span><span class="pl-k">=</span>d;<span class="pl-v">this</span>.<span class="pl-sc">height</span><span class="pl-k">=</span>a;<span class="pl-s">var</span> c<span class="pl-k">=</span>d<span class="pl-k">&gt;&gt;</span><span class="pl-c1">5</span>;<span class="pl-c1">0</span><span class="pl-k">!=</span>(d<span class="pl-k">&amp;</span><span class="pl-c1">31</span>)<span class="pl-k">&amp;&amp;</span>c<span class="pl-k">++</span>;<span class="pl-v">this</span>.rowSize<span class="pl-k">=</span>c;<span class="pl-v">this</span>.bits<span class="pl-k">=</span><span class="pl-s3">Array</span>(c<span class="pl-k">*</span>a);<span class="pl-k">for</span>(c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span><span class="pl-v">this</span>.bits.<span class="pl-sc">length</span>;c<span class="pl-k">++</span>)<span class="pl-v">this</span>.bits[c]<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.__defineGetter__(<span class="pl-s1"><span class="pl-pds">&quot;</span>Width<span class="pl-pds">&quot;</span></span>,<span class="pl-st">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-sc">width</span>});<span class="pl-v">this</span>.__defineGetter__(<span class="pl-s1"><span class="pl-pds">&quot;</span>Height<span class="pl-pds">&quot;</span></span>,<span class="pl-st">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-sc">height</span>});<span class="pl-v">this</span>.__defineGetter__(<span class="pl-s1"><span class="pl-pds">&quot;</span>Dimension<span class="pl-pds">&quot;</span></span>,<span class="pl-st">function</span>(){<span class="pl-k">if</span>(<span class="pl-v">this</span>.<span class="pl-sc">width</span><span class="pl-k">!=</span><span class="pl-v">this</span>.<span class="pl-sc">height</span>)<span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>Can&#39;t call getDimension() on a non-square matrix<span class="pl-pds">&quot;</span></span>;<span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-sc">width</span>});<span class="pl-v">this</span>.get_Renamed<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L42" class="blob-num js-line-number" data-line-number="42"></td>
        <td id="LC42" class="blob-code js-file-line"><span class="pl-st">function</span>(<span class="pl-vpf">b</span>,<span class="pl-vpf">e</span>){<span class="pl-k">return</span> <span class="pl-c1">0</span><span class="pl-k">!=</span>(URShift(<span class="pl-v">this</span>.bits[e<span class="pl-k">*</span><span class="pl-v">this</span>.rowSize<span class="pl-k">+</span>(b<span class="pl-k">&gt;&gt;</span><span class="pl-c1">5</span>)],b<span class="pl-k">&amp;</span><span class="pl-c1">31</span>)<span class="pl-k">&amp;</span><span class="pl-c1">1</span>)};<span class="pl-s3">this</span>.<span class="pl-en">set_Renamed</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">b</span>,<span class="pl-vpf">e</span>){<span class="pl-v">this</span>.bits[e<span class="pl-k">*</span><span class="pl-v">this</span>.rowSize<span class="pl-k">+</span>(b<span class="pl-k">&gt;&gt;</span><span class="pl-c1">5</span>)]|<span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">&lt;&lt;</span>(b<span class="pl-k">&amp;</span><span class="pl-c1">31</span>)};<span class="pl-s3">this</span>.<span class="pl-en">flip</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">b</span>,<span class="pl-vpf">e</span>){<span class="pl-v">this</span>.bits[e<span class="pl-k">*</span><span class="pl-v">this</span>.rowSize<span class="pl-k">+</span>(b<span class="pl-k">&gt;&gt;</span><span class="pl-c1">5</span>)]<span class="pl-k">^=</span><span class="pl-c1">1</span><span class="pl-k">&lt;&lt;</span>(b<span class="pl-k">&amp;</span><span class="pl-c1">31</span>)};<span class="pl-s3">this</span>.<span class="pl-en">clear</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">for</span>(<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.bits.<span class="pl-sc">length</span>,e<span class="pl-k">=</span><span class="pl-c1">0</span>;e<span class="pl-k">&lt;</span>b;e<span class="pl-k">++</span>)<span class="pl-v">this</span>.bits[e]<span class="pl-k">=</span><span class="pl-c1">0</span>};<span class="pl-s3">this</span>.<span class="pl-en">setRegion</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">b</span>,<span class="pl-vpf">e</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">a</span>){<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">&gt;</span>e<span class="pl-k">||</span><span class="pl-c1">0</span><span class="pl-k">&gt;</span>b)<span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>Left and top must be nonnegative<span class="pl-pds">&quot;</span></span>;<span class="pl-k">if</span>(<span class="pl-c1">1</span><span class="pl-k">&gt;</span>a<span class="pl-k">||</span><span class="pl-c1">1</span><span class="pl-k">&gt;</span>c)<span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>Height and width must be at least 1<span class="pl-pds">&quot;</span></span>;c<span class="pl-k">=</span>b<span class="pl-k">+</span>c;a<span class="pl-k">=</span>e<span class="pl-k">+</span>a;<span class="pl-k">if</span>(a<span class="pl-k">&gt;</span><span class="pl-v">this</span>.<span class="pl-sc">height</span><span class="pl-k">||</span>c<span class="pl-k">&gt;</span><span class="pl-v">this</span>.<span class="pl-sc">width</span>)<span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>The region must fit inside the matrix<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L43" class="blob-num js-line-number" data-line-number="43"></td>
        <td id="LC43" class="blob-code js-file-line"><span class="pl-k">for</span>(;e<span class="pl-k">&lt;</span>a;e<span class="pl-k">++</span>)<span class="pl-k">for</span>(<span class="pl-s">var</span> d<span class="pl-k">=</span>e<span class="pl-k">*</span><span class="pl-v">this</span>.rowSize,j<span class="pl-k">=</span>b;j<span class="pl-k">&lt;</span>c;j<span class="pl-k">++</span>)<span class="pl-v">this</span>.bits[d<span class="pl-k">+</span>(j<span class="pl-k">&gt;&gt;</span><span class="pl-c1">5</span>)]|<span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">&lt;&lt;</span>(j<span class="pl-k">&amp;</span><span class="pl-c1">31</span>)}};<span class="pl-st">function</span> <span class="pl-en">DataBlock</span>(<span class="pl-vpf">d</span>,<span class="pl-vpf">a</span>){<span class="pl-v">this</span>.numDataCodewords<span class="pl-k">=</span>d;<span class="pl-v">this</span>.codewords<span class="pl-k">=</span>a;<span class="pl-v">this</span>.__defineGetter__(<span class="pl-s1"><span class="pl-pds">&quot;</span>NumDataCodewords<span class="pl-pds">&quot;</span></span>,<span class="pl-st">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.numDataCodewords});<span class="pl-v">this</span>.__defineGetter__(<span class="pl-s1"><span class="pl-pds">&quot;</span>Codewords<span class="pl-pds">&quot;</span></span>,<span class="pl-st">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.codewords})}</td>
      </tr>
      <tr>
        <td id="L44" class="blob-num js-line-number" data-line-number="44"></td>
        <td id="LC44" class="blob-code js-file-line"><span class="pl-s3">DataBlock</span>.<span class="pl-en">getDataBlocks</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">d</span>,<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>){<span class="pl-k">if</span>(d.<span class="pl-sc">length</span><span class="pl-k">!=</span>a.TotalCodewords)<span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>ArgumentException<span class="pl-pds">&quot;</span></span>;<span class="pl-s">var</span> b<span class="pl-k">=</span>a.getECBlocksForLevel(c);c<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-s">var</span> e<span class="pl-k">=</span>b.getECBlocks();<span class="pl-k">for</span>(a<span class="pl-k">=</span><span class="pl-c1">0</span>;a<span class="pl-k">&lt;</span>e.<span class="pl-sc">length</span>;a<span class="pl-k">++</span>)c<span class="pl-k">+=</span>e[a].Count;c<span class="pl-k">=</span><span class="pl-s3">Array</span>(c);<span class="pl-k">for</span>(<span class="pl-s">var</span> g<span class="pl-k">=</span><span class="pl-c1">0</span>,f<span class="pl-k">=</span><span class="pl-c1">0</span>;f<span class="pl-k">&lt;</span>e.<span class="pl-sc">length</span>;f<span class="pl-k">++</span>){<span class="pl-s">var</span> h<span class="pl-k">=</span>e[f];<span class="pl-k">for</span>(a<span class="pl-k">=</span><span class="pl-c1">0</span>;a<span class="pl-k">&lt;</span>h.Count;a<span class="pl-k">++</span>){<span class="pl-s">var</span> j<span class="pl-k">=</span>h.DataCodewords,k<span class="pl-k">=</span>b.ECCodewordsPerBlock<span class="pl-k">+</span>j;c[g<span class="pl-k">++</span>]<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">DataBlock</span>(j,<span class="pl-s3">Array</span>(k))}}a<span class="pl-k">=</span>c[<span class="pl-c1">0</span>].codewords.<span class="pl-sc">length</span>;<span class="pl-k">for</span>(e<span class="pl-k">=</span>c.<span class="pl-sc">length</span><span class="pl-k">-</span><span class="pl-c1">1</span>;<span class="pl-c1">0</span><span class="pl-k">&lt;=</span>e<span class="pl-k">&amp;&amp;</span>c[e].codewords.<span class="pl-sc">length</span><span class="pl-k">!=</span>a;)e<span class="pl-k">--</span>;e<span class="pl-k">++</span>;b<span class="pl-k">=</span>a<span class="pl-k">-</span>b.ECCodewordsPerBlock;<span class="pl-k">for</span>(a<span class="pl-k">=</span>h<span class="pl-k">=</span><span class="pl-c1">0</span>;a<span class="pl-k">&lt;</span>b;a<span class="pl-k">++</span>)<span class="pl-k">for</span>(f<span class="pl-k">=</span><span class="pl-c1">0</span>;f<span class="pl-k">&lt;</span>g;f<span class="pl-k">++</span>)c[f].codewords[a]<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L45" class="blob-num js-line-number" data-line-number="45"></td>
        <td id="LC45" class="blob-code js-file-line">d[h<span class="pl-k">++</span>];<span class="pl-k">for</span>(f<span class="pl-k">=</span>e;f<span class="pl-k">&lt;</span>g;f<span class="pl-k">++</span>)c[f].codewords[b]<span class="pl-k">=</span>d[h<span class="pl-k">++</span>];j<span class="pl-k">=</span>c[<span class="pl-c1">0</span>].codewords.<span class="pl-sc">length</span>;<span class="pl-k">for</span>(a<span class="pl-k">=</span>b;a<span class="pl-k">&lt;</span>j;a<span class="pl-k">++</span>)<span class="pl-k">for</span>(f<span class="pl-k">=</span><span class="pl-c1">0</span>;f<span class="pl-k">&lt;</span>g;f<span class="pl-k">++</span>)c[f].codewords[f<span class="pl-k">&lt;</span>e<span class="pl-k">?</span>a<span class="pl-k">:</span>a<span class="pl-k">+</span><span class="pl-c1">1</span>]<span class="pl-k">=</span>d[h<span class="pl-k">++</span>];<span class="pl-k">return</span> c};<span class="pl-st">function</span> <span class="pl-en">BitMatrixParser</span>(<span class="pl-vpf">d</span>){<span class="pl-s">var</span> a<span class="pl-k">=</span>d.Dimension;<span class="pl-k">if</span>(<span class="pl-c1">21</span><span class="pl-k">&gt;</span>a<span class="pl-k">||</span><span class="pl-c1">1</span><span class="pl-k">!=</span>(a<span class="pl-k">&amp;</span><span class="pl-c1">3</span>))<span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>Error BitMatrixParser<span class="pl-pds">&quot;</span></span>;<span class="pl-v">this</span>.bitMatrix<span class="pl-k">=</span>d;<span class="pl-v">this</span>.parsedFormatInfo<span class="pl-k">=</span><span class="pl-v">this</span>.parsedVersion<span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-s3">this</span>.<span class="pl-en">copyBit</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">e</span>){<span class="pl-k">return</span> <span class="pl-v">this</span>.bitMatrix.get_Renamed(c,b)<span class="pl-k">?</span>e<span class="pl-k">&lt;&lt;</span><span class="pl-c1">1</span>|<span class="pl-c1">1</span><span class="pl-k">:</span>e<span class="pl-k">&lt;&lt;</span><span class="pl-c1">1</span>};<span class="pl-s3">this</span>.<span class="pl-en">readFormatInformation</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!=</span><span class="pl-v">this</span>.parsedFormatInfo)<span class="pl-k">return</span> <span class="pl-v">this</span>.parsedFormatInfo;<span class="pl-k">for</span>(<span class="pl-s">var</span> c<span class="pl-k">=</span><span class="pl-c1">0</span>,b<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">6</span><span class="pl-k">&gt;</span>b;b<span class="pl-k">++</span>)c<span class="pl-k">=</span><span class="pl-v">this</span>.copyBit(b,<span class="pl-c1">8</span>,c);c<span class="pl-k">=</span><span class="pl-v">this</span>.copyBit(<span class="pl-c1">7</span>,<span class="pl-c1">8</span>,c);c<span class="pl-k">=</span><span class="pl-v">this</span>.copyBit(<span class="pl-c1">8</span>,<span class="pl-c1">8</span>,c);c<span class="pl-k">=</span><span class="pl-v">this</span>.copyBit(<span class="pl-c1">8</span>,<span class="pl-c1">7</span>,c);<span class="pl-k">for</span>(b<span class="pl-k">=</span><span class="pl-c1">5</span>;<span class="pl-c1">0</span><span class="pl-k">&lt;=</span>b;b<span class="pl-k">--</span>)c<span class="pl-k">=</span><span class="pl-v">this</span>.copyBit(<span class="pl-c1">8</span>,b,c);<span class="pl-v">this</span>.parsedFormatInfo<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L46" class="blob-num js-line-number" data-line-number="46"></td>
        <td id="LC46" class="blob-code js-file-line">FormatInformation.decodeFormatInformation(c);<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!=</span><span class="pl-v">this</span>.parsedFormatInfo)<span class="pl-k">return</span> <span class="pl-v">this</span>.parsedFormatInfo;<span class="pl-k">for</span>(<span class="pl-s">var</span> e<span class="pl-k">=</span><span class="pl-v">this</span>.bitMatrix.Dimension,c<span class="pl-k">=</span><span class="pl-c1">0</span>,a<span class="pl-k">=</span>e<span class="pl-k">-</span><span class="pl-c1">8</span>,b<span class="pl-k">=</span>e<span class="pl-k">-</span><span class="pl-c1">1</span>;b<span class="pl-k">&gt;=</span>a;b<span class="pl-k">--</span>)c<span class="pl-k">=</span><span class="pl-v">this</span>.copyBit(b,<span class="pl-c1">8</span>,c);<span class="pl-k">for</span>(b<span class="pl-k">=</span>e<span class="pl-k">-</span><span class="pl-c1">7</span>;b<span class="pl-k">&lt;</span>e;b<span class="pl-k">++</span>)c<span class="pl-k">=</span><span class="pl-v">this</span>.copyBit(<span class="pl-c1">8</span>,b,c);<span class="pl-v">this</span>.parsedFormatInfo<span class="pl-k">=</span>FormatInformation.decodeFormatInformation(c);<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!=</span><span class="pl-v">this</span>.parsedFormatInfo)<span class="pl-k">return</span> <span class="pl-v">this</span>.parsedFormatInfo;<span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>Error readFormatInformation<span class="pl-pds">&quot;</span></span>;};<span class="pl-s3">this</span>.<span class="pl-en">readVersion</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!=</span><span class="pl-v">this</span>.parsedVersion)<span class="pl-k">return</span> <span class="pl-v">this</span>.parsedVersion;<span class="pl-s">var</span> c<span class="pl-k">=</span><span class="pl-v">this</span>.bitMatrix.Dimension,</td>
      </tr>
      <tr>
        <td id="L47" class="blob-num js-line-number" data-line-number="47"></td>
        <td id="LC47" class="blob-code js-file-line">b<span class="pl-k">=</span>c<span class="pl-k">-</span><span class="pl-c1">17</span><span class="pl-k">&gt;&gt;</span><span class="pl-c1">2</span>;<span class="pl-k">if</span>(<span class="pl-c1">6</span><span class="pl-k">&gt;=</span>b)<span class="pl-k">return</span> Version.getVersionForNumber(b);<span class="pl-k">for</span>(<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-c1">0</span>,e<span class="pl-k">=</span>c<span class="pl-k">-</span><span class="pl-c1">11</span>,a<span class="pl-k">=</span><span class="pl-c1">5</span>;<span class="pl-c1">0</span><span class="pl-k">&lt;=</span>a;a<span class="pl-k">--</span>)<span class="pl-k">for</span>(<span class="pl-s">var</span> d<span class="pl-k">=</span>c<span class="pl-k">-</span><span class="pl-c1">9</span>;d<span class="pl-k">&gt;=</span>e;d<span class="pl-k">--</span>)b<span class="pl-k">=</span><span class="pl-v">this</span>.copyBit(d,a,b);<span class="pl-v">this</span>.parsedVersion<span class="pl-k">=</span>Version.decodeVersionInformation(b);<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!=</span><span class="pl-v">this</span>.parsedVersion<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.parsedVersion.DimensionForVersion<span class="pl-k">==</span>c)<span class="pl-k">return</span> <span class="pl-v">this</span>.parsedVersion;b<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(d<span class="pl-k">=</span><span class="pl-c1">5</span>;<span class="pl-c1">0</span><span class="pl-k">&lt;=</span>d;d<span class="pl-k">--</span>)<span class="pl-k">for</span>(a<span class="pl-k">=</span>c<span class="pl-k">-</span><span class="pl-c1">9</span>;a<span class="pl-k">&gt;=</span>e;a<span class="pl-k">--</span>)b<span class="pl-k">=</span><span class="pl-v">this</span>.copyBit(d,a,b);<span class="pl-v">this</span>.parsedVersion<span class="pl-k">=</span>Version.decodeVersionInformation(b);<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">!=</span><span class="pl-v">this</span>.parsedVersion<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.parsedVersion.DimensionForVersion<span class="pl-k">==</span>c)<span class="pl-k">return</span> <span class="pl-v">this</span>.parsedVersion;<span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>Error readVersion<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L48" class="blob-num js-line-number" data-line-number="48"></td>
        <td id="LC48" class="blob-code js-file-line">};<span class="pl-s3">this</span>.<span class="pl-en">readCodewords</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-s">var</span> c<span class="pl-k">=</span><span class="pl-v">this</span>.readFormatInformation(),b<span class="pl-k">=</span><span class="pl-v">this</span>.readVersion(),e<span class="pl-k">=</span>DataMask.forReference(c.DataMask),c<span class="pl-k">=</span><span class="pl-v">this</span>.bitMatrix.Dimension;e.unmaskBitMatrix(<span class="pl-v">this</span>.bitMatrix,c);<span class="pl-k">for</span>(<span class="pl-s">var</span> e<span class="pl-k">=</span>b.buildFunctionPattern(),a<span class="pl-k">=!</span><span class="pl-c1">0</span>,d<span class="pl-k">=</span><span class="pl-s3">Array</span>(b.TotalCodewords),h<span class="pl-k">=</span><span class="pl-c1">0</span>,j<span class="pl-k">=</span><span class="pl-c1">0</span>,k<span class="pl-k">=</span><span class="pl-c1">0</span>,n<span class="pl-k">=</span>c<span class="pl-k">-</span><span class="pl-c1">1</span>;<span class="pl-c1">0</span><span class="pl-k">&lt;</span>n;n<span class="pl-k">-=</span><span class="pl-c1">2</span>){<span class="pl-c1">6</span><span class="pl-k">==</span>n<span class="pl-k">&amp;&amp;</span>n<span class="pl-k">--</span>;<span class="pl-k">for</span>(<span class="pl-s">var</span> l<span class="pl-k">=</span><span class="pl-c1">0</span>;l<span class="pl-k">&lt;</span>c;l<span class="pl-k">++</span>)<span class="pl-k">for</span>(<span class="pl-s">var</span> s<span class="pl-k">=</span>a<span class="pl-k">?</span>c<span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">-</span>l<span class="pl-k">:</span>l,r<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">2</span><span class="pl-k">&gt;</span>r;r<span class="pl-k">++</span>)e.get_Renamed(n<span class="pl-k">-</span>r,s)<span class="pl-k">||</span>(k<span class="pl-k">++</span>,j<span class="pl-k">&lt;&lt;=</span><span class="pl-c1">1</span>,<span class="pl-v">this</span>.bitMatrix.get_Renamed(n<span class="pl-k">-</span>r,s)<span class="pl-k">&amp;&amp;</span>(j|<span class="pl-k">=</span><span class="pl-c1">1</span>),<span class="pl-c1">8</span><span class="pl-k">==</span>k<span class="pl-k">&amp;&amp;</span>(d[h<span class="pl-k">++</span>]<span class="pl-k">=</span>j,j<span class="pl-k">=</span>k<span class="pl-k">=</span><span class="pl-c1">0</span>));a<span class="pl-k">^=</span><span class="pl-c1">1</span>}<span class="pl-k">if</span>(h<span class="pl-k">!=</span>b.TotalCodewords)<span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>Error readCodewords<span class="pl-pds">&quot;</span></span>;<span class="pl-k">return</span> d}}</td>
      </tr>
      <tr>
        <td id="L49" class="blob-num js-line-number" data-line-number="49"></td>
        <td id="LC49" class="blob-code js-file-line">;DataMask<span class="pl-k">=</span>{<span class="pl-en">forReference</span>:<span class="pl-st">function</span>(<span class="pl-vpf">d</span>){<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">&gt;</span>d<span class="pl-k">||</span><span class="pl-c1">7</span><span class="pl-k">&lt;</span>d)<span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>System.ArgumentException<span class="pl-pds">&quot;</span></span>;<span class="pl-k">return</span> DataMask.DATA_MASKS[d]}};<span class="pl-st">function</span> <span class="pl-en">DataMask000</span>(){<span class="pl-s3">this</span>.<span class="pl-en">unmaskBitMatrix</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">d</span>,<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(<span class="pl-s">var</span> c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span>a;c<span class="pl-k">++</span>)<span class="pl-k">for</span>(<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span>a;b<span class="pl-k">++</span>)<span class="pl-v">this</span>.isMasked(c,b)<span class="pl-k">&amp;&amp;</span>d.flip(b,c)};<span class="pl-s3">this</span>.<span class="pl-en">isMasked</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">d</span>,<span class="pl-vpf">a</span>){<span class="pl-k">return</span> <span class="pl-c1">0</span><span class="pl-k">==</span>(d<span class="pl-k">+</span>a<span class="pl-k">&amp;</span><span class="pl-c1">1</span>)}}<span class="pl-st">function</span> <span class="pl-en">DataMask001</span>(){<span class="pl-s3">this</span>.<span class="pl-en">unmaskBitMatrix</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">d</span>,<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(<span class="pl-s">var</span> c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span>a;c<span class="pl-k">++</span>)<span class="pl-k">for</span>(<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span>a;b<span class="pl-k">++</span>)<span class="pl-v">this</span>.isMasked(c,b)<span class="pl-k">&amp;&amp;</span>d.flip(b,c)};<span class="pl-s3">this</span>.<span class="pl-en">isMasked</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">d</span>){<span class="pl-k">return</span> <span class="pl-c1">0</span><span class="pl-k">==</span>(d<span class="pl-k">&amp;</span><span class="pl-c1">1</span>)}}</td>
      </tr>
      <tr>
        <td id="L50" class="blob-num js-line-number" data-line-number="50"></td>
        <td id="LC50" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">DataMask010</span>(){<span class="pl-s3">this</span>.<span class="pl-en">unmaskBitMatrix</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">d</span>,<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(<span class="pl-s">var</span> c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span>a;c<span class="pl-k">++</span>)<span class="pl-k">for</span>(<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span>a;b<span class="pl-k">++</span>)<span class="pl-v">this</span>.isMasked(c,b)<span class="pl-k">&amp;&amp;</span>d.flip(b,c)};<span class="pl-s3">this</span>.<span class="pl-en">isMasked</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">d</span>,<span class="pl-vpf">a</span>){<span class="pl-k">return</span> <span class="pl-c1">0</span><span class="pl-k">==</span>a<span class="pl-k">%</span><span class="pl-c1">3</span>}}<span class="pl-st">function</span> <span class="pl-en">DataMask011</span>(){<span class="pl-s3">this</span>.<span class="pl-en">unmaskBitMatrix</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">d</span>,<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(<span class="pl-s">var</span> c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span>a;c<span class="pl-k">++</span>)<span class="pl-k">for</span>(<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span>a;b<span class="pl-k">++</span>)<span class="pl-v">this</span>.isMasked(c,b)<span class="pl-k">&amp;&amp;</span>d.flip(b,c)};<span class="pl-s3">this</span>.<span class="pl-en">isMasked</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">d</span>,<span class="pl-vpf">a</span>){<span class="pl-k">return</span> <span class="pl-c1">0</span><span class="pl-k">==</span>(d<span class="pl-k">+</span>a)<span class="pl-k">%</span><span class="pl-c1">3</span>}}</td>
      </tr>
      <tr>
        <td id="L51" class="blob-num js-line-number" data-line-number="51"></td>
        <td id="LC51" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">DataMask100</span>(){<span class="pl-s3">this</span>.<span class="pl-en">unmaskBitMatrix</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">d</span>,<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(<span class="pl-s">var</span> c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span>a;c<span class="pl-k">++</span>)<span class="pl-k">for</span>(<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span>a;b<span class="pl-k">++</span>)<span class="pl-v">this</span>.isMasked(c,b)<span class="pl-k">&amp;&amp;</span>d.flip(b,c)};<span class="pl-s3">this</span>.<span class="pl-en">isMasked</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">d</span>,<span class="pl-vpf">a</span>){<span class="pl-k">return</span> <span class="pl-c1">0</span><span class="pl-k">==</span>(URShift(d,<span class="pl-c1">1</span>)<span class="pl-k">+</span>a/<span class="pl-c1">3</span><span class="pl-k">&amp;</span><span class="pl-c1">1</span>)}}<span class="pl-st">function</span> <span class="pl-en">DataMask101</span>(){<span class="pl-s3">this</span>.<span class="pl-en">unmaskBitMatrix</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">d</span>,<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(<span class="pl-s">var</span> c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span>a;c<span class="pl-k">++</span>)<span class="pl-k">for</span>(<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span>a;b<span class="pl-k">++</span>)<span class="pl-v">this</span>.isMasked(c,b)<span class="pl-k">&amp;&amp;</span>d.flip(b,c)};<span class="pl-s3">this</span>.<span class="pl-en">isMasked</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">d</span>,<span class="pl-vpf">a</span>){<span class="pl-s">var</span> c<span class="pl-k">=</span>d<span class="pl-k">*</span>a;<span class="pl-k">return</span> <span class="pl-c1">0</span><span class="pl-k">==</span>(c<span class="pl-k">&amp;</span><span class="pl-c1">1</span>)<span class="pl-k">+</span>c<span class="pl-k">%</span><span class="pl-c1">3</span>}}</td>
      </tr>
      <tr>
        <td id="L52" class="blob-num js-line-number" data-line-number="52"></td>
        <td id="LC52" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">DataMask110</span>(){<span class="pl-s3">this</span>.<span class="pl-en">unmaskBitMatrix</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">d</span>,<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(<span class="pl-s">var</span> c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span>a;c<span class="pl-k">++</span>)<span class="pl-k">for</span>(<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span>a;b<span class="pl-k">++</span>)<span class="pl-v">this</span>.isMasked(c,b)<span class="pl-k">&amp;&amp;</span>d.flip(b,c)};<span class="pl-s3">this</span>.<span class="pl-en">isMasked</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">d</span>,<span class="pl-vpf">a</span>){<span class="pl-s">var</span> c<span class="pl-k">=</span>d<span class="pl-k">*</span>a;<span class="pl-k">return</span> <span class="pl-c1">0</span><span class="pl-k">==</span>((c<span class="pl-k">&amp;</span><span class="pl-c1">1</span>)<span class="pl-k">+</span>c<span class="pl-k">%</span><span class="pl-c1">3</span><span class="pl-k">&amp;</span><span class="pl-c1">1</span>)}}<span class="pl-st">function</span> <span class="pl-en">DataMask111</span>(){<span class="pl-s3">this</span>.<span class="pl-en">unmaskBitMatrix</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">d</span>,<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(<span class="pl-s">var</span> c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span>a;c<span class="pl-k">++</span>)<span class="pl-k">for</span>(<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span>a;b<span class="pl-k">++</span>)<span class="pl-v">this</span>.isMasked(c,b)<span class="pl-k">&amp;&amp;</span>d.flip(b,c)};<span class="pl-s3">this</span>.<span class="pl-en">isMasked</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">d</span>,<span class="pl-vpf">a</span>){<span class="pl-k">return</span> <span class="pl-c1">0</span><span class="pl-k">==</span>((d<span class="pl-k">+</span>a<span class="pl-k">&amp;</span><span class="pl-c1">1</span>)<span class="pl-k">+</span>d<span class="pl-k">*</span>a<span class="pl-k">%</span><span class="pl-c1">3</span><span class="pl-k">&amp;</span><span class="pl-c1">1</span>)}}</td>
      </tr>
      <tr>
        <td id="L53" class="blob-num js-line-number" data-line-number="53"></td>
        <td id="LC53" class="blob-code js-file-line">DataMask.DATA_MASKS<span class="pl-k">=</span>[<span class="pl-k">new</span> <span class="pl-en">DataMask000</span>,<span class="pl-k">new</span> <span class="pl-en">DataMask001</span>,<span class="pl-k">new</span> <span class="pl-en">DataMask010</span>,<span class="pl-k">new</span> <span class="pl-en">DataMask011</span>,<span class="pl-k">new</span> <span class="pl-en">DataMask100</span>,<span class="pl-k">new</span> <span class="pl-en">DataMask101</span>,<span class="pl-k">new</span> <span class="pl-en">DataMask110</span>,<span class="pl-k">new</span> <span class="pl-en">DataMask111</span>];<span class="pl-st">function</span> <span class="pl-en">ReedSolomonDecoder</span>(<span class="pl-vpf">d</span>){<span class="pl-v">this</span>.field<span class="pl-k">=</span>d;<span class="pl-s3">this</span>.<span class="pl-en">decode</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>){<span class="pl-k">for</span>(<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">GF256Poly</span>(<span class="pl-v">this</span>.field,a),e<span class="pl-k">=</span><span class="pl-s3">Array</span>(c),d<span class="pl-k">=</span><span class="pl-c1">0</span>;d<span class="pl-k">&lt;</span>e.<span class="pl-sc">length</span>;d<span class="pl-k">++</span>)e[d]<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(<span class="pl-s">var</span> f<span class="pl-k">=!</span><span class="pl-c1">0</span>,d<span class="pl-k">=</span><span class="pl-c1">0</span>;d<span class="pl-k">&lt;</span>c;d<span class="pl-k">++</span>){<span class="pl-s">var</span> h<span class="pl-k">=</span>b.evaluateAt(<span class="pl-v">this</span>.field.<span class="pl-s3">exp</span>(d));e[e.<span class="pl-sc">length</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">-</span>d]<span class="pl-k">=</span>h;<span class="pl-c1">0</span><span class="pl-k">!=</span>h<span class="pl-k">&amp;&amp;</span>(f<span class="pl-k">=!</span><span class="pl-c1">1</span>)}<span class="pl-k">if</span>(<span class="pl-k">!</span>f){d<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">GF256Poly</span>(<span class="pl-v">this</span>.field,e);b<span class="pl-k">=</span><span class="pl-v">this</span>.runEuclideanAlgorithm(<span class="pl-v">this</span>.field.buildMonomial(c,<span class="pl-c1">1</span>),d,c);d<span class="pl-k">=</span>b[<span class="pl-c1">1</span>];b<span class="pl-k">=</span><span class="pl-v">this</span>.findErrorLocations(b[<span class="pl-c1">0</span>]);e<span class="pl-k">=</span><span class="pl-v">this</span>.findErrorMagnitudes(d,b,<span class="pl-k">!</span><span class="pl-c1">1</span>);<span class="pl-k">for</span>(d<span class="pl-k">=</span><span class="pl-c1">0</span>;d<span class="pl-k">&lt;</span>b.<span class="pl-sc">length</span>;d<span class="pl-k">++</span>){f<span class="pl-k">=</span>a.<span class="pl-sc">length</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">-</span><span class="pl-v">this</span>.field<span class="pl-s3">.log</span>(b[d]);<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">&gt;</span>f)<span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>ReedSolomonException Bad error location<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L54" class="blob-num js-line-number" data-line-number="54"></td>
        <td id="LC54" class="blob-code js-file-line">a[f]<span class="pl-k">=</span>GF256.addOrSubtract(a[f],e[d])}}};<span class="pl-s3">this</span>.<span class="pl-en">runEuclideanAlgorithm</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>){<span class="pl-k">if</span>(a.Degree<span class="pl-k">&lt;</span>c.Degree){<span class="pl-s">var</span> e<span class="pl-k">=</span>a;a<span class="pl-k">=</span>c;c<span class="pl-k">=</span>e}<span class="pl-k">for</span>(<span class="pl-s">var</span> e<span class="pl-k">=</span><span class="pl-v">this</span>.field.One,d<span class="pl-k">=</span><span class="pl-v">this</span>.field.Zero,f<span class="pl-k">=</span><span class="pl-v">this</span>.field.Zero,h<span class="pl-k">=</span><span class="pl-v">this</span>.field.One;c.Degree<span class="pl-k">&gt;=</span><span class="pl-s3">Math</span>.<span class="pl-s3">floor</span>(b/<span class="pl-c1">2</span>);){<span class="pl-s">var</span> j<span class="pl-k">=</span>a,k<span class="pl-k">=</span>e,n<span class="pl-k">=</span>f;a<span class="pl-k">=</span>c;e<span class="pl-k">=</span>d;f<span class="pl-k">=</span>h;<span class="pl-k">if</span>(a.Zero)<span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>r_{i-1} was zero<span class="pl-pds">&quot;</span></span>;c<span class="pl-k">=</span>j;h<span class="pl-k">=</span><span class="pl-v">this</span>.field.Zero;d<span class="pl-k">=</span>a.getCoefficient(a.Degree);<span class="pl-k">for</span>(d<span class="pl-k">=</span><span class="pl-v">this</span>.field.inverse(d);c.Degree<span class="pl-k">&gt;=</span>a.Degree<span class="pl-k">&amp;&amp;!</span>c.Zero;){<span class="pl-s">var</span> j<span class="pl-k">=</span>c.Degree<span class="pl-k">-</span>a.Degree,l<span class="pl-k">=</span><span class="pl-v">this</span>.field.multiply(c.getCoefficient(c.Degree),d),h<span class="pl-k">=</span>h.addOrSubtract(<span class="pl-v">this</span>.field.buildMonomial(j,</td>
      </tr>
      <tr>
        <td id="L55" class="blob-num js-line-number" data-line-number="55"></td>
        <td id="LC55" class="blob-code js-file-line">l));c<span class="pl-k">=</span>c.addOrSubtract(a.multiplyByMonomial(j,l))}d<span class="pl-k">=</span>h.multiply1(e).addOrSubtract(k);h<span class="pl-k">=</span>h.multiply1(f).addOrSubtract(n)}b<span class="pl-k">=</span>h.getCoefficient(<span class="pl-c1">0</span>);<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">==</span>b)<span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>ReedSolomonException sigmaTilde(0) was zero<span class="pl-pds">&quot;</span></span>;b<span class="pl-k">=</span><span class="pl-v">this</span>.field.inverse(b);a<span class="pl-k">=</span>h.multiply2(b);b<span class="pl-k">=</span>c.multiply2(b);<span class="pl-k">return</span>[a,b]};<span class="pl-s3">this</span>.<span class="pl-en">findErrorLocations</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>){<span class="pl-s">var</span> c<span class="pl-k">=</span>a.Degree;<span class="pl-k">if</span>(<span class="pl-c1">1</span><span class="pl-k">==</span>c)<span class="pl-k">return</span> <span class="pl-s3">Array</span>(a.getCoefficient(<span class="pl-c1">1</span>));<span class="pl-k">for</span>(<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-s3">Array</span>(c),e<span class="pl-k">=</span><span class="pl-c1">0</span>,d<span class="pl-k">=</span><span class="pl-c1">1</span>;<span class="pl-c1">256</span><span class="pl-k">&gt;</span>d<span class="pl-k">&amp;&amp;</span>e<span class="pl-k">&lt;</span>c;d<span class="pl-k">++</span>)<span class="pl-c1">0</span><span class="pl-k">==</span>a.evaluateAt(d)<span class="pl-k">&amp;&amp;</span>(b[e]<span class="pl-k">=</span><span class="pl-v">this</span>.field.inverse(d),e<span class="pl-k">++</span>);<span class="pl-k">if</span>(e<span class="pl-k">!=</span>c)<span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>Error locator degree does not match number of roots<span class="pl-pds">&quot;</span></span>;</td>
      </tr>
      <tr>
        <td id="L56" class="blob-num js-line-number" data-line-number="56"></td>
        <td id="LC56" class="blob-code js-file-line"><span class="pl-k">return</span> b};<span class="pl-s3">this</span>.<span class="pl-en">findErrorMagnitudes</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>){<span class="pl-k">for</span>(<span class="pl-s">var</span> e<span class="pl-k">=</span>c.<span class="pl-sc">length</span>,d<span class="pl-k">=</span><span class="pl-s3">Array</span>(e),f<span class="pl-k">=</span><span class="pl-c1">0</span>;f<span class="pl-k">&lt;</span>e;f<span class="pl-k">++</span>){<span class="pl-k">for</span>(<span class="pl-s">var</span> h<span class="pl-k">=</span><span class="pl-v">this</span>.field.inverse(c[f]),j<span class="pl-k">=</span><span class="pl-c1">1</span>,k<span class="pl-k">=</span><span class="pl-c1">0</span>;k<span class="pl-k">&lt;</span>e;k<span class="pl-k">++</span>)f<span class="pl-k">!=</span>k<span class="pl-k">&amp;&amp;</span>(j<span class="pl-k">=</span><span class="pl-v">this</span>.field.multiply(j,GF256.addOrSubtract(<span class="pl-c1">1</span>,<span class="pl-v">this</span>.field.multiply(c[k],h))));d[f]<span class="pl-k">=</span><span class="pl-v">this</span>.field.multiply(a.evaluateAt(h),<span class="pl-v">this</span>.field.inverse(j));b<span class="pl-k">&amp;&amp;</span>(d[f]<span class="pl-k">=</span><span class="pl-v">this</span>.field.multiply(d[f],h))}<span class="pl-k">return</span> d}};<span class="pl-st">function</span> <span class="pl-en">GF256Poly</span>(<span class="pl-vpf">d</span>,<span class="pl-vpf">a</span>){<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">==</span>a<span class="pl-k">||</span><span class="pl-c1">0</span><span class="pl-k">==</span>a.<span class="pl-sc">length</span>)<span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>System.ArgumentException<span class="pl-pds">&quot;</span></span>;<span class="pl-v">this</span>.field<span class="pl-k">=</span>d;<span class="pl-s">var</span> c<span class="pl-k">=</span>a.<span class="pl-sc">length</span>;<span class="pl-k">if</span>(<span class="pl-c1">1</span><span class="pl-k">&lt;</span>c<span class="pl-k">&amp;&amp;</span><span class="pl-c1">0</span><span class="pl-k">==</span>a[<span class="pl-c1">0</span>]){<span class="pl-k">for</span>(<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-c1">1</span>;b<span class="pl-k">&lt;</span>c<span class="pl-k">&amp;&amp;</span><span class="pl-c1">0</span><span class="pl-k">==</span>a[b];)b<span class="pl-k">++</span>;<span class="pl-k">if</span>(b<span class="pl-k">==</span>c)<span class="pl-v">this</span>.coefficients<span class="pl-k">=</span>d.Zero.coefficients;<span class="pl-k">else</span>{<span class="pl-v">this</span>.coefficients<span class="pl-k">=</span><span class="pl-s3">Array</span>(c<span class="pl-k">-</span>b);<span class="pl-k">for</span>(c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span><span class="pl-v">this</span>.coefficients.<span class="pl-sc">length</span>;c<span class="pl-k">++</span>)<span class="pl-v">this</span>.coefficients[c]<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span><span class="pl-v">this</span>.coefficients.<span class="pl-sc">length</span>;c<span class="pl-k">++</span>)<span class="pl-v">this</span>.coefficients[c]<span class="pl-k">=</span>a[b<span class="pl-k">+</span>c]}}<span class="pl-k">else</span> <span class="pl-v">this</span>.coefficients<span class="pl-k">=</span>a;<span class="pl-v">this</span>.__defineGetter__(<span class="pl-s1"><span class="pl-pds">&quot;</span>Zero<span class="pl-pds">&quot;</span></span>,<span class="pl-st">function</span>(){<span class="pl-k">return</span> <span class="pl-c1">0</span><span class="pl-k">==</span><span class="pl-v">this</span>.coefficients[<span class="pl-c1">0</span>]});<span class="pl-v">this</span>.__defineGetter__(<span class="pl-s1"><span class="pl-pds">&quot;</span>Degree<span class="pl-pds">&quot;</span></span>,<span class="pl-st">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.coefficients.<span class="pl-sc">length</span><span class="pl-k">-</span></td>
      </tr>
      <tr>
        <td id="L57" class="blob-num js-line-number" data-line-number="57"></td>
        <td id="LC57" class="blob-code js-file-line"><span class="pl-c1">1</span>});<span class="pl-v">this</span>.__defineGetter__(<span class="pl-s1"><span class="pl-pds">&quot;</span>Coefficients<span class="pl-pds">&quot;</span></span>,<span class="pl-st">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.coefficients});<span class="pl-s3">this</span>.<span class="pl-en">getCoefficient</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">b</span>){<span class="pl-k">return</span> <span class="pl-v">this</span>.coefficients[<span class="pl-v">this</span>.coefficients.<span class="pl-sc">length</span><span class="pl-k">-</span><span class="pl-c1">1</span><span class="pl-k">-</span>b]};<span class="pl-s3">this</span>.<span class="pl-en">evaluateAt</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">b</span>){<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">==</span>b)<span class="pl-k">return</span> <span class="pl-v">this</span>.getCoefficient(<span class="pl-c1">0</span>);<span class="pl-s">var</span> c<span class="pl-k">=</span><span class="pl-v">this</span>.coefficients.<span class="pl-sc">length</span>;<span class="pl-k">if</span>(<span class="pl-c1">1</span><span class="pl-k">==</span>b){<span class="pl-k">for</span>(<span class="pl-s">var</span> a<span class="pl-k">=</span>b<span class="pl-k">=</span><span class="pl-c1">0</span>;a<span class="pl-k">&lt;</span>c;a<span class="pl-k">++</span>)b<span class="pl-k">=</span>GF256.addOrSubtract(b,<span class="pl-v">this</span>.coefficients[a]);<span class="pl-k">return</span> b}<span class="pl-k">for</span>(<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-v">this</span>.coefficients[<span class="pl-c1">0</span>],a<span class="pl-k">=</span><span class="pl-c1">1</span>;a<span class="pl-k">&lt;</span>c;a<span class="pl-k">++</span>)d<span class="pl-k">=</span>GF256.addOrSubtract(<span class="pl-v">this</span>.field.multiply(b,d),<span class="pl-v">this</span>.coefficients[a]);<span class="pl-k">return</span> d};<span class="pl-s3">this</span>.<span class="pl-en">addOrSubtract</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">b</span>){<span class="pl-k">if</span>(<span class="pl-v">this</span>.field<span class="pl-k">!=</span></td>
      </tr>
      <tr>
        <td id="L58" class="blob-num js-line-number" data-line-number="58"></td>
        <td id="LC58" class="blob-code js-file-line">b.field)<span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>GF256Polys do not have same GF256 field<span class="pl-pds">&quot;</span></span>;<span class="pl-k">if</span>(<span class="pl-v">this</span>.Zero)<span class="pl-k">return</span> b;<span class="pl-k">if</span>(b.Zero)<span class="pl-k">return</span> <span class="pl-v">this</span>;<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.coefficients;b<span class="pl-k">=</span>b.coefficients;<span class="pl-k">if</span>(a.<span class="pl-sc">length</span><span class="pl-k">&gt;</span>b.<span class="pl-sc">length</span>){<span class="pl-s">var</span> c<span class="pl-k">=</span>a,a<span class="pl-k">=</span>b;b<span class="pl-k">=</span>c}<span class="pl-k">for</span>(<span class="pl-s">var</span> c<span class="pl-k">=</span><span class="pl-s3">Array</span>(b.<span class="pl-sc">length</span>),h<span class="pl-k">=</span>b.<span class="pl-sc">length</span><span class="pl-k">-</span>a.<span class="pl-sc">length</span>,j<span class="pl-k">=</span><span class="pl-c1">0</span>;j<span class="pl-k">&lt;</span>h;j<span class="pl-k">++</span>)c[j]<span class="pl-k">=</span>b[j];<span class="pl-k">for</span>(j<span class="pl-k">=</span>h;j<span class="pl-k">&lt;</span>b.<span class="pl-sc">length</span>;j<span class="pl-k">++</span>)c[j]<span class="pl-k">=</span>GF256.addOrSubtract(a[j<span class="pl-k">-</span>h],b[j]);<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">GF256Poly</span>(d,c)};<span class="pl-s3">this</span>.<span class="pl-en">multiply1</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">b</span>){<span class="pl-k">if</span>(<span class="pl-v">this</span>.field<span class="pl-k">!=</span>b.field)<span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>GF256Polys do not have same GF256 field<span class="pl-pds">&quot;</span></span>;<span class="pl-k">if</span>(<span class="pl-v">this</span>.Zero<span class="pl-k">||</span>b.Zero)<span class="pl-k">return</span> <span class="pl-v">this</span>.field.Zero;<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.coefficients,c<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L59" class="blob-num js-line-number" data-line-number="59"></td>
        <td id="LC59" class="blob-code js-file-line">a.<span class="pl-sc">length</span>;b<span class="pl-k">=</span>b.coefficients;<span class="pl-k">for</span>(<span class="pl-s">var</span> d<span class="pl-k">=</span>b.<span class="pl-sc">length</span>,j<span class="pl-k">=</span><span class="pl-s3">Array</span>(c<span class="pl-k">+</span>d<span class="pl-k">-</span><span class="pl-c1">1</span>),k<span class="pl-k">=</span><span class="pl-c1">0</span>;k<span class="pl-k">&lt;</span>c;k<span class="pl-k">++</span>)<span class="pl-k">for</span>(<span class="pl-s">var</span> n<span class="pl-k">=</span>a[k],l<span class="pl-k">=</span><span class="pl-c1">0</span>;l<span class="pl-k">&lt;</span>d;l<span class="pl-k">++</span>)j[k<span class="pl-k">+</span>l]<span class="pl-k">=</span>GF256.addOrSubtract(j[k<span class="pl-k">+</span>l],<span class="pl-v">this</span>.field.multiply(n,b[l]));<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">GF256Poly</span>(<span class="pl-v">this</span>.field,j)};<span class="pl-s3">this</span>.<span class="pl-en">multiply2</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">b</span>){<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">==</span>b)<span class="pl-k">return</span> <span class="pl-v">this</span>.field.Zero;<span class="pl-k">if</span>(<span class="pl-c1">1</span><span class="pl-k">==</span>b)<span class="pl-k">return</span> <span class="pl-v">this</span>;<span class="pl-k">for</span>(<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.coefficients.<span class="pl-sc">length</span>,c<span class="pl-k">=</span><span class="pl-s3">Array</span>(a),d<span class="pl-k">=</span><span class="pl-c1">0</span>;d<span class="pl-k">&lt;</span>a;d<span class="pl-k">++</span>)c[d]<span class="pl-k">=</span><span class="pl-v">this</span>.field.multiply(<span class="pl-v">this</span>.coefficients[d],b);<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">GF256Poly</span>(<span class="pl-v">this</span>.field,c)};<span class="pl-s3">this</span>.<span class="pl-en">multiplyByMonomial</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">b</span>,<span class="pl-vpf">a</span>){<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">&gt;</span>b)<span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>System.ArgumentException<span class="pl-pds">&quot;</span></span>;<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">==</span></td>
      </tr>
      <tr>
        <td id="L60" class="blob-num js-line-number" data-line-number="60"></td>
        <td id="LC60" class="blob-code js-file-line">a)<span class="pl-k">return</span> <span class="pl-v">this</span>.field.Zero;<span class="pl-k">for</span>(<span class="pl-s">var</span> c<span class="pl-k">=</span><span class="pl-v">this</span>.coefficients.<span class="pl-sc">length</span>,d<span class="pl-k">=</span><span class="pl-s3">Array</span>(c<span class="pl-k">+</span>b),j<span class="pl-k">=</span><span class="pl-c1">0</span>;j<span class="pl-k">&lt;</span>d.<span class="pl-sc">length</span>;j<span class="pl-k">++</span>)d[j]<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(j<span class="pl-k">=</span><span class="pl-c1">0</span>;j<span class="pl-k">&lt;</span>c;j<span class="pl-k">++</span>)d[j]<span class="pl-k">=</span><span class="pl-v">this</span>.field.multiply(<span class="pl-v">this</span>.coefficients[j],a);<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">GF256Poly</span>(<span class="pl-v">this</span>.field,d)};<span class="pl-s3">this</span>.<span class="pl-en">divide</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">b</span>){<span class="pl-k">if</span>(<span class="pl-v">this</span>.field<span class="pl-k">!=</span>b.field)<span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>GF256Polys do not have same GF256 field<span class="pl-pds">&quot;</span></span>;<span class="pl-k">if</span>(b.Zero)<span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>Divide by 0<span class="pl-pds">&quot;</span></span>;<span class="pl-k">for</span>(<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.field.Zero,c<span class="pl-k">=</span><span class="pl-v">this</span>,d<span class="pl-k">=</span>b.getCoefficient(b.Degree),d<span class="pl-k">=</span><span class="pl-v">this</span>.field.inverse(d);c.Degree<span class="pl-k">&gt;=</span>b.Degree<span class="pl-k">&amp;&amp;!</span>c.Zero;)<span class="pl-s">var</span> j<span class="pl-k">=</span>c.Degree<span class="pl-k">-</span>b.Degree,k<span class="pl-k">=</span><span class="pl-v">this</span>.field.multiply(c.getCoefficient(c.Degree),</td>
      </tr>
      <tr>
        <td id="L61" class="blob-num js-line-number" data-line-number="61"></td>
        <td id="LC61" class="blob-code js-file-line">d),n<span class="pl-k">=</span>b.multiplyByMonomial(j,k),j<span class="pl-k">=</span><span class="pl-v">this</span>.field.buildMonomial(j,k),a<span class="pl-k">=</span>a.addOrSubtract(j),c<span class="pl-k">=</span>c.addOrSubtract(n);<span class="pl-k">return</span>[a,c]}};<span class="pl-st">function</span> <span class="pl-en">GF256</span>(<span class="pl-vpf">d</span>){<span class="pl-v">this</span>.expTable<span class="pl-k">=</span><span class="pl-s3">Array</span>(<span class="pl-c1">256</span>);<span class="pl-v">this</span>.logTable<span class="pl-k">=</span><span class="pl-s3">Array</span>(<span class="pl-c1">256</span>);<span class="pl-k">for</span>(<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-c1">1</span>,c<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">256</span><span class="pl-k">&gt;</span>c;c<span class="pl-k">++</span>)<span class="pl-v">this</span>.expTable[c]<span class="pl-k">=</span>a,a<span class="pl-k">&lt;&lt;=</span><span class="pl-c1">1</span>,<span class="pl-c1">256</span><span class="pl-k">&lt;=</span>a<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">^=</span>d);<span class="pl-k">for</span>(c<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">255</span><span class="pl-k">&gt;</span>c;c<span class="pl-k">++</span>)<span class="pl-v">this</span>.logTable[<span class="pl-v">this</span>.expTable[c]]<span class="pl-k">=</span>c;d<span class="pl-k">=</span><span class="pl-s3">Array</span>(<span class="pl-c1">1</span>);d[<span class="pl-c1">0</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.zero<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">GF256Poly</span>(<span class="pl-v">this</span>,<span class="pl-s3">Array</span>(d));d<span class="pl-k">=</span><span class="pl-s3">Array</span>(<span class="pl-c1">1</span>);d[<span class="pl-c1">0</span>]<span class="pl-k">=</span><span class="pl-c1">1</span>;<span class="pl-v">this</span>.one<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">GF256Poly</span>(<span class="pl-v">this</span>,<span class="pl-s3">Array</span>(d));<span class="pl-v">this</span>.__defineGetter__(<span class="pl-s1"><span class="pl-pds">&quot;</span>Zero<span class="pl-pds">&quot;</span></span>,<span class="pl-st">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.zero});<span class="pl-v">this</span>.__defineGetter__(<span class="pl-s1"><span class="pl-pds">&quot;</span>One<span class="pl-pds">&quot;</span></span>,<span class="pl-st">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.one});<span class="pl-s3">this</span>.<span class="pl-en">buildMonomial</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">b</span>,<span class="pl-vpf">c</span>){<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">&gt;</span>b)<span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>System.ArgumentException<span class="pl-pds">&quot;</span></span>;<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">==</span>c)<span class="pl-k">return</span> zero;</td>
      </tr>
      <tr>
        <td id="L62" class="blob-num js-line-number" data-line-number="62"></td>
        <td id="LC62" class="blob-code js-file-line"><span class="pl-k">for</span>(<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-s3">Array</span>(b<span class="pl-k">+</span><span class="pl-c1">1</span>),d<span class="pl-k">=</span><span class="pl-c1">0</span>;d<span class="pl-k">&lt;</span>a.<span class="pl-sc">length</span>;d<span class="pl-k">++</span>)a[d]<span class="pl-k">=</span><span class="pl-c1">0</span>;a[<span class="pl-c1">0</span>]<span class="pl-k">=</span>c;<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">GF256Poly</span>(<span class="pl-v">this</span>,a)};<span class="pl-s3">this</span>.<span class="pl-en">exp</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">b</span>){<span class="pl-k">return</span> <span class="pl-v">this</span>.expTable[b]};<span class="pl-s3">this</span>.<span class="pl-en">log</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">b</span>){<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">==</span>b)<span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>System.ArgumentException<span class="pl-pds">&quot;</span></span>;<span class="pl-k">return</span> <span class="pl-v">this</span>.logTable[b]};<span class="pl-s3">this</span>.<span class="pl-en">inverse</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">b</span>){<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">==</span>b)<span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>System.ArithmeticException<span class="pl-pds">&quot;</span></span>;<span class="pl-k">return</span> <span class="pl-v">this</span>.expTable[<span class="pl-c1">255</span><span class="pl-k">-</span><span class="pl-v">this</span>.logTable[b]]};<span class="pl-s3">this</span>.<span class="pl-en">multiply</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">b</span>,<span class="pl-vpf">a</span>){<span class="pl-k">return</span> <span class="pl-c1">0</span><span class="pl-k">==</span>b<span class="pl-k">||</span><span class="pl-c1">0</span><span class="pl-k">==</span>a<span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-c1">1</span><span class="pl-k">==</span>b<span class="pl-k">?</span>a<span class="pl-k">:</span><span class="pl-c1">1</span><span class="pl-k">==</span>a<span class="pl-k">?</span>b<span class="pl-k">:</span><span class="pl-v">this</span>.expTable[(<span class="pl-v">this</span>.logTable[b]<span class="pl-k">+</span><span class="pl-v">this</span>.logTable[a])<span class="pl-k">%</span><span class="pl-c1">255</span>]}}GF256.QR_CODE_FIELD<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">GF256</span>(<span class="pl-c1">285</span>);</td>
      </tr>
      <tr>
        <td id="L63" class="blob-num js-line-number" data-line-number="63"></td>
        <td id="LC63" class="blob-code js-file-line">GF256.DATA_MATRIX_FIELD<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">GF256</span>(<span class="pl-c1">301</span>);<span class="pl-s3">GF256</span>.<span class="pl-en">addOrSubtract</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">d</span>,<span class="pl-vpf">a</span>){<span class="pl-k">return</span> d<span class="pl-k">^</span>a};Decoder<span class="pl-k">=</span>{};Decoder.rsDecoder<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">ReedSolomonDecoder</span>(GF256.QR_CODE_FIELD);<span class="pl-s3">Decoder</span>.<span class="pl-en">correctErrors</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">d</span>,<span class="pl-vpf">a</span>){<span class="pl-k">for</span>(<span class="pl-s">var</span> c<span class="pl-k">=</span>d.<span class="pl-sc">length</span>,b<span class="pl-k">=</span><span class="pl-s3">Array</span>(c),e<span class="pl-k">=</span><span class="pl-c1">0</span>;e<span class="pl-k">&lt;</span>c;e<span class="pl-k">++</span>)b[e]<span class="pl-k">=</span>d[e]<span class="pl-k">&amp;</span><span class="pl-c1">255</span>;c<span class="pl-k">=</span>d.<span class="pl-sc">length</span><span class="pl-k">-</span>a;<span class="pl-k">try</span>{Decoder.rsDecoder.decode(b,c)}<span class="pl-k">catch</span>(g){<span class="pl-k">throw</span> g;}<span class="pl-k">for</span>(e<span class="pl-k">=</span><span class="pl-c1">0</span>;e<span class="pl-k">&lt;</span>a;e<span class="pl-k">++</span>)d[e]<span class="pl-k">=</span>b[e]};</td>
      </tr>
      <tr>
        <td id="L64" class="blob-num js-line-number" data-line-number="64"></td>
        <td id="LC64" class="blob-code js-file-line"><span class="pl-s3">Decoder</span>.<span class="pl-en">decode</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">d</span>){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">BitMatrixParser</span>(d);d<span class="pl-k">=</span>a.readVersion();<span class="pl-k">for</span>(<span class="pl-s">var</span> c<span class="pl-k">=</span>a.readFormatInformation().ErrorCorrectionLevel,a<span class="pl-k">=</span>a.readCodewords(),a<span class="pl-k">=</span>DataBlock.getDataBlocks(a,d,c),b<span class="pl-k">=</span><span class="pl-c1">0</span>,e<span class="pl-k">=</span><span class="pl-c1">0</span>;e<span class="pl-k">&lt;</span>a.Length;e<span class="pl-k">++</span>)b<span class="pl-k">+=</span>a[e].NumDataCodewords;<span class="pl-k">for</span>(<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-s3">Array</span>(b),g<span class="pl-k">=</span><span class="pl-c1">0</span>,f<span class="pl-k">=</span><span class="pl-c1">0</span>;f<span class="pl-k">&lt;</span>a.<span class="pl-sc">length</span>;f<span class="pl-k">++</span>){<span class="pl-s">var</span> e<span class="pl-k">=</span>a[f],h<span class="pl-k">=</span>e.Codewords,j<span class="pl-k">=</span>e.NumDataCodewords;Decoder.correctErrors(h,j);<span class="pl-k">for</span>(e<span class="pl-k">=</span><span class="pl-c1">0</span>;e<span class="pl-k">&lt;</span>j;e<span class="pl-k">++</span>)b[g<span class="pl-k">++</span>]<span class="pl-k">=</span>h[e]}<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">QRCodeDataBlockReader</span>(b,d.VersionNumber,c.Bits)};qrcode<span class="pl-k">=</span>{imagedata<span class="pl-k">:</span><span class="pl-c1">null</span>,width<span class="pl-k">:</span><span class="pl-c1">0</span>,height<span class="pl-k">:</span><span class="pl-c1">0</span>,qrCodeSymbol<span class="pl-k">:</span><span class="pl-c1">null</span>,debug<span class="pl-k">:!</span><span class="pl-c1">1</span>,sizeOfDataLengthInfo<span class="pl-k">:</span>[[<span class="pl-c1">10</span>,<span class="pl-c1">9</span>,<span class="pl-c1">8</span>,<span class="pl-c1">8</span>],[<span class="pl-c1">12</span>,<span class="pl-c1">11</span>,<span class="pl-c1">16</span>,<span class="pl-c1">10</span>],[<span class="pl-c1">14</span>,<span class="pl-c1">13</span>,<span class="pl-c1">16</span>,<span class="pl-c1">12</span>]],callback<span class="pl-k">:</span><span class="pl-c1">null</span>,<span class="pl-en">decode</span>:<span class="pl-st">function</span>(<span class="pl-vpf">d</span>){<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">==</span>arguments.<span class="pl-sc">length</span>){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-s3">document</span>.<span class="pl-s3">getElementById</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>qr-canvas<span class="pl-pds">&quot;</span></span>),c<span class="pl-k">=</span>a.getContext(<span class="pl-s1"><span class="pl-pds">&quot;</span>2d<span class="pl-pds">&quot;</span></span>);qrcode.<span class="pl-sc">width</span><span class="pl-k">=</span>a.<span class="pl-sc">width</span>;qrcode.<span class="pl-sc">height</span><span class="pl-k">=</span>a.<span class="pl-sc">height</span>;qrcode.imagedata<span class="pl-k">=</span>c.getImageData(<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,qrcode.<span class="pl-sc">width</span>,qrcode.<span class="pl-sc">height</span>);qrcode.result<span class="pl-k">=</span>qrcode.process(c);<span class="pl-c1">null</span><span class="pl-k">!=</span>qrcode.callback<span class="pl-k">&amp;&amp;</span>qrcode.callback(qrcode.result);<span class="pl-k">return</span> qrcode.result}<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">Image</span>;<span class="pl-s3">b</span>.<span class="pl-en">onload</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-s">var</span> a<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L65" class="blob-num js-line-number" data-line-number="65"></td>
        <td id="LC65" class="blob-code js-file-line"><span class="pl-s3">document</span>.<span class="pl-s3">createElement</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>canvas<span class="pl-pds">&quot;</span></span>),c<span class="pl-k">=</span>a.getContext(<span class="pl-s1"><span class="pl-pds">&quot;</span>2d<span class="pl-pds">&quot;</span></span>),d<span class="pl-k">=</span><span class="pl-s3">document</span>.<span class="pl-s3">getElementById</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span>out-canvas<span class="pl-pds">&quot;</span></span>);<span class="pl-c1">null</span><span class="pl-k">!=</span>d<span class="pl-k">&amp;&amp;</span>(d<span class="pl-k">=</span>d.getContext(<span class="pl-s1"><span class="pl-pds">&quot;</span>2d<span class="pl-pds">&quot;</span></span>),d.clearRect(<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">320</span>,<span class="pl-c1">240</span>),d.drawImage(b,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">320</span>,<span class="pl-c1">240</span>));a.<span class="pl-sc">width</span><span class="pl-k">=</span>b.<span class="pl-sc">width</span>;a.<span class="pl-sc">height</span><span class="pl-k">=</span>b.<span class="pl-sc">height</span>;c.drawImage(b,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>);qrcode.<span class="pl-sc">width</span><span class="pl-k">=</span>b.<span class="pl-sc">width</span>;qrcode.<span class="pl-sc">height</span><span class="pl-k">=</span>b.<span class="pl-sc">height</span>;<span class="pl-k">try</span>{qrcode.imagedata<span class="pl-k">=</span>c.getImageData(<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,b.<span class="pl-sc">width</span>,b.<span class="pl-sc">height</span>)}<span class="pl-k">catch</span>(h){qrcode.result<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>Cross domain image reading not supported in your browser! Save it to your computer then drag and drop the file!<span class="pl-pds">&quot;</span></span>;<span class="pl-c1">null</span><span class="pl-k">!=</span>qrcode.callback<span class="pl-k">&amp;&amp;</span>qrcode.callback(qrcode.result);</td>
      </tr>
      <tr>
        <td id="L66" class="blob-num js-line-number" data-line-number="66"></td>
        <td id="LC66" class="blob-code js-file-line"><span class="pl-k">return</span>}<span class="pl-k">try</span>{qrcode.result<span class="pl-k">=</span>qrcode.process(c)}<span class="pl-k">catch</span>(j){<span class="pl-en">console</span><span class="pl-s3">.log</span>(j),qrcode.result<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>error decoding QR Code<span class="pl-pds">&quot;</span></span>}<span class="pl-c1">null</span><span class="pl-k">!=</span>qrcode.callback<span class="pl-k">&amp;&amp;</span>qrcode.callback(qrcode.result)};b.<span class="pl-sc">src</span><span class="pl-k">=</span>d},<span class="pl-en">decode_utf8</span>:<span class="pl-st">function</span>(<span class="pl-vpf">d</span>){<span class="pl-k">return</span> decodeURIComponent(<span class="pl-s3">escape</span>(d))},<span class="pl-en">process</span>:<span class="pl-st">function</span>(<span class="pl-vpf">d</span>){<span class="pl-s">var</span> a<span class="pl-k">=</span>(<span class="pl-k">new</span> <span class="pl-en">Date</span>).<span class="pl-s3">getTime</span>(),c<span class="pl-k">=</span>qrcode.grayScaleToBitmap(qrcode.grayscale());<span class="pl-k">if</span>(qrcode.debug){<span class="pl-k">for</span>(<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span>qrcode.<span class="pl-sc">height</span>;b<span class="pl-k">++</span>)<span class="pl-k">for</span>(<span class="pl-s">var</span> e<span class="pl-k">=</span><span class="pl-c1">0</span>;e<span class="pl-k">&lt;</span>qrcode.<span class="pl-sc">width</span>;e<span class="pl-k">++</span>){<span class="pl-s">var</span> g<span class="pl-k">=</span><span class="pl-c1">4</span><span class="pl-k">*</span>e<span class="pl-k">+</span><span class="pl-c1">4</span><span class="pl-k">*</span>b<span class="pl-k">*</span>qrcode.<span class="pl-sc">width</span>;qrcode.imagedata.<span class="pl-sc">data</span>[g]<span class="pl-k">=</span><span class="pl-c1">0</span>;qrcode.imagedata.<span class="pl-sc">data</span>[g<span class="pl-k">+</span><span class="pl-c1">1</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;qrcode.imagedata.<span class="pl-sc">data</span>[g<span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L67" class="blob-num js-line-number" data-line-number="67"></td>
        <td id="LC67" class="blob-code js-file-line"><span class="pl-c1">2</span>]<span class="pl-k">=</span>c[e<span class="pl-k">+</span>b<span class="pl-k">*</span>qrcode.<span class="pl-sc">width</span>]<span class="pl-k">?</span><span class="pl-c1">255</span><span class="pl-k">:</span><span class="pl-c1">0</span>}d.putImageData(qrcode.imagedata,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>)}c<span class="pl-k">=</span>(<span class="pl-k">new</span> <span class="pl-en">Detector</span>(c)).detect();qrcode.debug<span class="pl-k">&amp;&amp;</span>d.putImageData(qrcode.imagedata,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>);c<span class="pl-k">=</span>Decoder.decode(c.bits).DataByte;d<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;<span class="pl-k">for</span>(b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span>c.<span class="pl-sc">length</span>;b<span class="pl-k">++</span>)<span class="pl-k">for</span>(e<span class="pl-k">=</span><span class="pl-c1">0</span>;e<span class="pl-k">&lt;</span>c[b].<span class="pl-sc">length</span>;e<span class="pl-k">++</span>)d<span class="pl-k">+=</span><span class="pl-s3">String</span>.<span class="pl-s3">fromCharCode</span>(c[b][e]);a<span class="pl-k">=</span>(<span class="pl-k">new</span> <span class="pl-en">Date</span>).<span class="pl-s3">getTime</span>()<span class="pl-k">-</span>a;<span class="pl-en">console</span><span class="pl-s3">.log</span>(a);<span class="pl-k">return</span> qrcode.decode_utf8(d)},<span class="pl-en">getPixel</span>:<span class="pl-st">function</span>(<span class="pl-vpf">d</span>,<span class="pl-vpf">a</span>){<span class="pl-k">if</span>(qrcode.<span class="pl-sc">width</span><span class="pl-k">&lt;</span>d)<span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>point error<span class="pl-pds">&quot;</span></span>;<span class="pl-k">if</span>(qrcode.<span class="pl-sc">height</span><span class="pl-k">&lt;</span>a)<span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>point error<span class="pl-pds">&quot;</span></span>;point<span class="pl-k">=</span><span class="pl-c1">4</span><span class="pl-k">*</span>d<span class="pl-k">+</span><span class="pl-c1">4</span><span class="pl-k">*</span>a<span class="pl-k">*</span>qrcode.<span class="pl-sc">width</span>;<span class="pl-k">return</span> p<span class="pl-k">=</span>(<span class="pl-c1">33</span><span class="pl-k">*</span>qrcode.imagedata.<span class="pl-sc">data</span>[point]<span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L68" class="blob-num js-line-number" data-line-number="68"></td>
        <td id="LC68" class="blob-code js-file-line"><span class="pl-c1">34</span><span class="pl-k">*</span>qrcode.imagedata.<span class="pl-sc">data</span>[point<span class="pl-k">+</span><span class="pl-c1">1</span>]<span class="pl-k">+</span><span class="pl-c1">33</span><span class="pl-k">*</span>qrcode.imagedata.<span class="pl-sc">data</span>[point<span class="pl-k">+</span><span class="pl-c1">2</span>])/<span class="pl-c1">100</span>},<span class="pl-en">binarize</span>:<span class="pl-st">function</span>(<span class="pl-vpf">d</span>){<span class="pl-k">for</span>(<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-s3">Array</span>(qrcode.<span class="pl-sc">width</span><span class="pl-k">*</span>qrcode.<span class="pl-sc">height</span>),c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span>qrcode.<span class="pl-sc">height</span>;c<span class="pl-k">++</span>)<span class="pl-k">for</span>(<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span>qrcode.<span class="pl-sc">width</span>;b<span class="pl-k">++</span>){<span class="pl-s">var</span> e<span class="pl-k">=</span>qrcode.getPixel(b,c);a[b<span class="pl-k">+</span>c<span class="pl-k">*</span>qrcode.<span class="pl-sc">width</span>]<span class="pl-k">=</span>e<span class="pl-k">&lt;=</span>d<span class="pl-k">?!</span><span class="pl-c1">0</span><span class="pl-k">:!</span><span class="pl-c1">1</span>}<span class="pl-k">return</span> a},<span class="pl-en">getMiddleBrightnessPerArea</span>:<span class="pl-st">function</span>(<span class="pl-vpf">d</span>){<span class="pl-k">for</span>(<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-s3">Math</span>.<span class="pl-s3">floor</span>(qrcode.<span class="pl-sc">width</span>/<span class="pl-c1">4</span>),c<span class="pl-k">=</span><span class="pl-s3">Math</span>.<span class="pl-s3">floor</span>(qrcode.<span class="pl-sc">height</span>/<span class="pl-c1">4</span>),b<span class="pl-k">=</span><span class="pl-s3">Array</span>(<span class="pl-c1">4</span>),e<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">4</span><span class="pl-k">&gt;</span>e;e<span class="pl-k">++</span>){b[e]<span class="pl-k">=</span><span class="pl-s3">Array</span>(<span class="pl-c1">4</span>);<span class="pl-k">for</span>(<span class="pl-s">var</span> g<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">4</span><span class="pl-k">&gt;</span>g;g<span class="pl-k">++</span>)b[e][g]<span class="pl-k">=</span>[<span class="pl-c1">0</span>,<span class="pl-c1">0</span>]}<span class="pl-k">for</span>(e<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">4</span><span class="pl-k">&gt;</span>e;e<span class="pl-k">++</span>)<span class="pl-k">for</span>(g<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">4</span><span class="pl-k">&gt;</span>g;g<span class="pl-k">++</span>){b[g][e][<span class="pl-c1">0</span>]<span class="pl-k">=</span><span class="pl-c1">255</span>;<span class="pl-k">for</span>(<span class="pl-s">var</span> f<span class="pl-k">=</span><span class="pl-c1">0</span>;f<span class="pl-k">&lt;</span></td>
      </tr>
      <tr>
        <td id="L69" class="blob-num js-line-number" data-line-number="69"></td>
        <td id="LC69" class="blob-code js-file-line">c;f<span class="pl-k">++</span>)<span class="pl-k">for</span>(<span class="pl-s">var</span> h<span class="pl-k">=</span><span class="pl-c1">0</span>;h<span class="pl-k">&lt;</span>a;h<span class="pl-k">++</span>){<span class="pl-s">var</span> j<span class="pl-k">=</span>d[a<span class="pl-k">*</span>g<span class="pl-k">+</span>h<span class="pl-k">+</span>(c<span class="pl-k">*</span>e<span class="pl-k">+</span>f)<span class="pl-k">*</span>qrcode.<span class="pl-sc">width</span>];j<span class="pl-k">&lt;</span>b[g][e][<span class="pl-c1">0</span>]<span class="pl-k">&amp;&amp;</span>(b[g][e][<span class="pl-c1">0</span>]<span class="pl-k">=</span>j);j<span class="pl-k">&gt;</span>b[g][e][<span class="pl-c1">1</span>]<span class="pl-k">&amp;&amp;</span>(b[g][e][<span class="pl-c1">1</span>]<span class="pl-k">=</span>j)}}d<span class="pl-k">=</span><span class="pl-s3">Array</span>(<span class="pl-c1">4</span>);<span class="pl-k">for</span>(a<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">4</span><span class="pl-k">&gt;</span>a;a<span class="pl-k">++</span>)d[a]<span class="pl-k">=</span><span class="pl-s3">Array</span>(<span class="pl-c1">4</span>);<span class="pl-k">for</span>(e<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">4</span><span class="pl-k">&gt;</span>e;e<span class="pl-k">++</span>)<span class="pl-k">for</span>(g<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">4</span><span class="pl-k">&gt;</span>g;g<span class="pl-k">++</span>)d[g][e]<span class="pl-k">=</span><span class="pl-s3">Math</span>.<span class="pl-s3">floor</span>((b[g][e][<span class="pl-c1">0</span>]<span class="pl-k">+</span>b[g][e][<span class="pl-c1">1</span>])/<span class="pl-c1">2</span>);<span class="pl-k">return</span> d},<span class="pl-en">grayScaleToBitmap</span>:<span class="pl-st">function</span>(<span class="pl-vpf">d</span>){<span class="pl-k">for</span>(<span class="pl-s">var</span> a<span class="pl-k">=</span>qrcode.getMiddleBrightnessPerArea(d),c<span class="pl-k">=</span>a.<span class="pl-sc">length</span>,b<span class="pl-k">=</span><span class="pl-s3">Math</span>.<span class="pl-s3">floor</span>(qrcode.<span class="pl-sc">width</span>/c),e<span class="pl-k">=</span><span class="pl-s3">Math</span>.<span class="pl-s3">floor</span>(qrcode.<span class="pl-sc">height</span>/c),g<span class="pl-k">=</span><span class="pl-s3">Array</span>(qrcode.<span class="pl-sc">height</span><span class="pl-k">*</span>qrcode.<span class="pl-sc">width</span>),f<span class="pl-k">=</span><span class="pl-c1">0</span>;f<span class="pl-k">&lt;</span>c;f<span class="pl-k">++</span>)<span class="pl-k">for</span>(<span class="pl-s">var</span> h<span class="pl-k">=</span><span class="pl-c1">0</span>;h<span class="pl-k">&lt;</span>c;h<span class="pl-k">++</span>)<span class="pl-k">for</span>(<span class="pl-s">var</span> j<span class="pl-k">=</span><span class="pl-c1">0</span>;j<span class="pl-k">&lt;</span>e;j<span class="pl-k">++</span>)<span class="pl-k">for</span>(<span class="pl-s">var</span> k<span class="pl-k">=</span><span class="pl-c1">0</span>;k<span class="pl-k">&lt;</span>b;k<span class="pl-k">++</span>)g[b<span class="pl-k">*</span></td>
      </tr>
      <tr>
        <td id="L70" class="blob-num js-line-number" data-line-number="70"></td>
        <td id="LC70" class="blob-code js-file-line">h<span class="pl-k">+</span>k<span class="pl-k">+</span>(e<span class="pl-k">*</span>f<span class="pl-k">+</span>j)<span class="pl-k">*</span>qrcode.<span class="pl-sc">width</span>]<span class="pl-k">=</span>d[b<span class="pl-k">*</span>h<span class="pl-k">+</span>k<span class="pl-k">+</span>(e<span class="pl-k">*</span>f<span class="pl-k">+</span>j)<span class="pl-k">*</span>qrcode.<span class="pl-sc">width</span>]<span class="pl-k">&lt;</span>a[h][f]<span class="pl-k">?!</span><span class="pl-c1">0</span><span class="pl-k">:!</span><span class="pl-c1">1</span>;<span class="pl-k">return</span> g},<span class="pl-en">grayscale</span>:<span class="pl-st">function</span>(){<span class="pl-k">for</span>(<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-s3">Array</span>(qrcode.<span class="pl-sc">width</span><span class="pl-k">*</span>qrcode.<span class="pl-sc">height</span>),a<span class="pl-k">=</span><span class="pl-c1">0</span>;a<span class="pl-k">&lt;</span>qrcode.<span class="pl-sc">height</span>;a<span class="pl-k">++</span>)<span class="pl-k">for</span>(<span class="pl-s">var</span> c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span>qrcode.<span class="pl-sc">width</span>;c<span class="pl-k">++</span>){<span class="pl-s">var</span> b<span class="pl-k">=</span>qrcode.getPixel(c,a);d[c<span class="pl-k">+</span>a<span class="pl-k">*</span>qrcode.<span class="pl-sc">width</span>]<span class="pl-k">=</span>b}<span class="pl-k">return</span> d}};<span class="pl-st">function</span> <span class="pl-en">URShift</span>(<span class="pl-vpf">d</span>,<span class="pl-vpf">a</span>){<span class="pl-k">return</span> <span class="pl-c1">0</span><span class="pl-k">&lt;=</span>d<span class="pl-k">?</span>d<span class="pl-k">&gt;&gt;</span>a<span class="pl-k">:</span>(d<span class="pl-k">&gt;&gt;</span>a)<span class="pl-k">+</span>(<span class="pl-c1">2</span><span class="pl-k">&lt;&lt;~</span>a)}<span class="pl-s3">Array</span>.<span class="pl-sc">prototype</span>.<span class="pl-en">remove</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">d</span>,<span class="pl-vpf">a</span>){<span class="pl-s">var</span> c<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-s3">slice</span>((a<span class="pl-k">||</span>d)<span class="pl-k">+</span><span class="pl-c1">1</span><span class="pl-k">||</span><span class="pl-v">this</span>.<span class="pl-sc">length</span>);<span class="pl-v">this</span>.<span class="pl-sc">length</span><span class="pl-k">=</span><span class="pl-c1">0</span><span class="pl-k">&gt;</span>d<span class="pl-k">?</span><span class="pl-v">this</span>.<span class="pl-sc">length</span><span class="pl-k">+</span>d<span class="pl-k">:</span>d;<span class="pl-k">return</span> <span class="pl-v">this</span>.push.<span class="pl-s3">apply</span>(<span class="pl-v">this</span>,c)};<span class="pl-s">var</span> MIN_SKIP<span class="pl-k">=</span><span class="pl-c1">3</span>,MAX_MODULES<span class="pl-k">=</span><span class="pl-c1">57</span>,INTEGER_MATH_SHIFT<span class="pl-k">=</span><span class="pl-c1">8</span>,CENTER_QUORUM<span class="pl-k">=</span><span class="pl-c1">2</span>;<span class="pl-s3">qrcode</span>.<span class="pl-en">orderBestPatterns</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">d</span>){<span class="pl-st">function</span> <span class="pl-en">a</span>(<span class="pl-vpf">b</span>,<span class="pl-vpf">a</span>){xDiff<span class="pl-k">=</span>b.X<span class="pl-k">-</span>a.X;yDiff<span class="pl-k">=</span>b.Y<span class="pl-k">-</span>a.Y;<span class="pl-k">return</span> <span class="pl-s3">Math</span>.<span class="pl-s3">sqrt</span>(xDiff<span class="pl-k">*</span>xDiff<span class="pl-k">+</span>yDiff<span class="pl-k">*</span>yDiff)}<span class="pl-s">var</span> c<span class="pl-k">=</span>a(d[<span class="pl-c1">0</span>],d[<span class="pl-c1">1</span>]),b<span class="pl-k">=</span>a(d[<span class="pl-c1">1</span>],d[<span class="pl-c1">2</span>]),e<span class="pl-k">=</span>a(d[<span class="pl-c1">0</span>],d[<span class="pl-c1">2</span>]);b<span class="pl-k">&gt;=</span>c<span class="pl-k">&amp;&amp;</span>b<span class="pl-k">&gt;=</span>e<span class="pl-k">?</span>(b<span class="pl-k">=</span>d[<span class="pl-c1">0</span>],c<span class="pl-k">=</span>d[<span class="pl-c1">1</span>],e<span class="pl-k">=</span>d[<span class="pl-c1">2</span>])<span class="pl-k">:</span>e<span class="pl-k">&gt;=</span>b<span class="pl-k">&amp;&amp;</span>e<span class="pl-k">&gt;=</span>c<span class="pl-k">?</span>(b<span class="pl-k">=</span>d[<span class="pl-c1">1</span>],c<span class="pl-k">=</span>d[<span class="pl-c1">0</span>],e<span class="pl-k">=</span>d[<span class="pl-c1">2</span>])<span class="pl-k">:</span>(b<span class="pl-k">=</span>d[<span class="pl-c1">2</span>],c<span class="pl-k">=</span>d[<span class="pl-c1">0</span>],e<span class="pl-k">=</span>d[<span class="pl-c1">1</span>]);<span class="pl-s">var</span> g<span class="pl-k">=</span>b.<span class="pl-sc">x</span>,f<span class="pl-k">=</span>b.<span class="pl-sc">y</span>;<span class="pl-c1">0</span><span class="pl-k">&gt;</span>(e.<span class="pl-sc">x</span><span class="pl-k">-</span>g)<span class="pl-k">*</span>(c.<span class="pl-sc">y</span><span class="pl-k">-</span>f)<span class="pl-k">-</span>(e.<span class="pl-sc">y</span><span class="pl-k">-</span>f)<span class="pl-k">*</span>(c.<span class="pl-sc">x</span><span class="pl-k">-</span>g)<span class="pl-k">&amp;&amp;</span>(g<span class="pl-k">=</span>c,c<span class="pl-k">=</span>e,e<span class="pl-k">=</span>g);d[<span class="pl-c1">0</span>]<span class="pl-k">=</span>c;d[<span class="pl-c1">1</span>]<span class="pl-k">=</span>b;d[<span class="pl-c1">2</span>]<span class="pl-k">=</span>e};</td>
      </tr>
      <tr>
        <td id="L71" class="blob-num js-line-number" data-line-number="71"></td>
        <td id="LC71" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">FinderPattern</span>(<span class="pl-vpf">d</span>,<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>){<span class="pl-v">this</span>.<span class="pl-sc">x</span><span class="pl-k">=</span>d;<span class="pl-v">this</span>.<span class="pl-sc">y</span><span class="pl-k">=</span>a;<span class="pl-v">this</span>.count<span class="pl-k">=</span><span class="pl-c1">1</span>;<span class="pl-v">this</span>.estimatedModuleSize<span class="pl-k">=</span>c;<span class="pl-v">this</span>.__defineGetter__(<span class="pl-s1"><span class="pl-pds">&quot;</span>EstimatedModuleSize<span class="pl-pds">&quot;</span></span>,<span class="pl-st">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.estimatedModuleSize});<span class="pl-v">this</span>.__defineGetter__(<span class="pl-s1"><span class="pl-pds">&quot;</span>Count<span class="pl-pds">&quot;</span></span>,<span class="pl-st">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.count});<span class="pl-v">this</span>.__defineGetter__(<span class="pl-s1"><span class="pl-pds">&quot;</span>X<span class="pl-pds">&quot;</span></span>,<span class="pl-st">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-sc">x</span>});<span class="pl-v">this</span>.__defineGetter__(<span class="pl-s1"><span class="pl-pds">&quot;</span>Y<span class="pl-pds">&quot;</span></span>,<span class="pl-st">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.<span class="pl-sc">y</span>});<span class="pl-s3">this</span>.<span class="pl-en">incrementCount</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-v">this</span>.count<span class="pl-k">++</span>};<span class="pl-s3">this</span>.<span class="pl-en">aboutEquals</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">b</span>,<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>){<span class="pl-k">return</span> <span class="pl-s3">Math</span>.<span class="pl-s3">abs</span>(a<span class="pl-k">-</span><span class="pl-v">this</span>.<span class="pl-sc">y</span>)<span class="pl-k">&lt;=</span>b<span class="pl-k">&amp;&amp;</span><span class="pl-s3">Math</span>.<span class="pl-s3">abs</span>(c<span class="pl-k">-</span><span class="pl-v">this</span>.<span class="pl-sc">x</span>)<span class="pl-k">&lt;=</span>b<span class="pl-k">?</span>(b<span class="pl-k">=</span><span class="pl-s3">Math</span>.<span class="pl-s3">abs</span>(b<span class="pl-k">-</span><span class="pl-v">this</span>.estimatedModuleSize),</td>
      </tr>
      <tr>
        <td id="L72" class="blob-num js-line-number" data-line-number="72"></td>
        <td id="LC72" class="blob-code js-file-line"><span class="pl-c1">1</span><span class="pl-k">&gt;=</span>b<span class="pl-k">||</span><span class="pl-c1">1</span><span class="pl-k">&gt;=</span>b/<span class="pl-v">this</span>.estimatedModuleSize)<span class="pl-k">:!</span><span class="pl-c1">1</span>}}<span class="pl-st">function</span> <span class="pl-en">FinderPatternInfo</span>(<span class="pl-vpf">d</span>){<span class="pl-v">this</span>.bottomLeft<span class="pl-k">=</span>d[<span class="pl-c1">0</span>];<span class="pl-v">this</span>.topLeft<span class="pl-k">=</span>d[<span class="pl-c1">1</span>];<span class="pl-v">this</span>.topRight<span class="pl-k">=</span>d[<span class="pl-c1">2</span>];<span class="pl-v">this</span>.__defineGetter__(<span class="pl-s1"><span class="pl-pds">&quot;</span>BottomLeft<span class="pl-pds">&quot;</span></span>,<span class="pl-st">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.bottomLeft});<span class="pl-v">this</span>.__defineGetter__(<span class="pl-s1"><span class="pl-pds">&quot;</span>TopLeft<span class="pl-pds">&quot;</span></span>,<span class="pl-st">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.topLeft});<span class="pl-v">this</span>.__defineGetter__(<span class="pl-s1"><span class="pl-pds">&quot;</span>TopRight<span class="pl-pds">&quot;</span></span>,<span class="pl-st">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.topRight})}</td>
      </tr>
      <tr>
        <td id="L73" class="blob-num js-line-number" data-line-number="73"></td>
        <td id="LC73" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">FinderPatternFinder</span>(){<span class="pl-v">this</span>.image<span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-v">this</span>.possibleCenters<span class="pl-k">=</span>[];<span class="pl-v">this</span>.hasSkipped<span class="pl-k">=!</span><span class="pl-c1">1</span>;<span class="pl-v">this</span>.crossCheckStateCount<span class="pl-k">=</span>[<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>];<span class="pl-v">this</span>.resultPointCallback<span class="pl-k">=</span><span class="pl-c1">null</span>;<span class="pl-v">this</span>.__defineGetter__(<span class="pl-s1"><span class="pl-pds">&quot;</span>CrossCheckStateCount<span class="pl-pds">&quot;</span></span>,<span class="pl-st">function</span>(){<span class="pl-v">this</span>.crossCheckStateCount[<span class="pl-c1">0</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.crossCheckStateCount[<span class="pl-c1">1</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.crossCheckStateCount[<span class="pl-c1">2</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.crossCheckStateCount[<span class="pl-c1">3</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.crossCheckStateCount[<span class="pl-c1">4</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">return</span> <span class="pl-v">this</span>.crossCheckStateCount});<span class="pl-s3">this</span>.<span class="pl-en">foundPatternCross</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">d</span>){<span class="pl-k">for</span>(<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-c1">0</span>,c<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">5</span><span class="pl-k">&gt;</span>c;c<span class="pl-k">++</span>){<span class="pl-s">var</span> b<span class="pl-k">=</span>d[c];<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">==</span>b)<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>;a<span class="pl-k">+=</span>b}<span class="pl-k">if</span>(<span class="pl-c1">7</span><span class="pl-k">&gt;</span></td>
      </tr>
      <tr>
        <td id="L74" class="blob-num js-line-number" data-line-number="74"></td>
        <td id="LC74" class="blob-code js-file-line">a)<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>;a<span class="pl-k">=</span><span class="pl-s3">Math</span>.<span class="pl-s3">floor</span>((a<span class="pl-k">&lt;&lt;</span>INTEGER_MATH_SHIFT)/<span class="pl-c1">7</span>);c<span class="pl-k">=</span><span class="pl-s3">Math</span>.<span class="pl-s3">floor</span>(a/<span class="pl-c1">2</span>);<span class="pl-k">return</span> <span class="pl-s3">Math</span>.<span class="pl-s3">abs</span>(a<span class="pl-k">-</span>(d[<span class="pl-c1">0</span>]<span class="pl-k">&lt;&lt;</span>INTEGER_MATH_SHIFT))<span class="pl-k">&lt;</span>c<span class="pl-k">&amp;&amp;</span><span class="pl-s3">Math</span>.<span class="pl-s3">abs</span>(a<span class="pl-k">-</span>(d[<span class="pl-c1">1</span>]<span class="pl-k">&lt;&lt;</span>INTEGER_MATH_SHIFT))<span class="pl-k">&lt;</span>c<span class="pl-k">&amp;&amp;</span><span class="pl-s3">Math</span>.<span class="pl-s3">abs</span>(<span class="pl-c1">3</span><span class="pl-k">*</span>a<span class="pl-k">-</span>(d[<span class="pl-c1">2</span>]<span class="pl-k">&lt;&lt;</span>INTEGER_MATH_SHIFT))<span class="pl-k">&lt;</span><span class="pl-c1">3</span><span class="pl-k">*</span>c<span class="pl-k">&amp;&amp;</span><span class="pl-s3">Math</span>.<span class="pl-s3">abs</span>(a<span class="pl-k">-</span>(d[<span class="pl-c1">3</span>]<span class="pl-k">&lt;&lt;</span>INTEGER_MATH_SHIFT))<span class="pl-k">&lt;</span>c<span class="pl-k">&amp;&amp;</span><span class="pl-s3">Math</span>.<span class="pl-s3">abs</span>(a<span class="pl-k">-</span>(d[<span class="pl-c1">4</span>]<span class="pl-k">&lt;&lt;</span>INTEGER_MATH_SHIFT))<span class="pl-k">&lt;</span>c};<span class="pl-s3">this</span>.<span class="pl-en">centerFromEnd</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">d</span>,<span class="pl-vpf">a</span>){<span class="pl-k">return</span> a<span class="pl-k">-</span>d[<span class="pl-c1">4</span>]<span class="pl-k">-</span>d[<span class="pl-c1">3</span>]<span class="pl-k">-</span>d[<span class="pl-c1">2</span>]/<span class="pl-c1">2</span>};<span class="pl-s3">this</span>.<span class="pl-en">crossCheckVertical</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">d</span>,<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>){<span class="pl-k">for</span>(<span class="pl-s">var</span> e<span class="pl-k">=</span><span class="pl-v">this</span>.image,g<span class="pl-k">=</span>qrcode.<span class="pl-sc">height</span>,f<span class="pl-k">=</span><span class="pl-v">this</span>.CrossCheckStateCount,h<span class="pl-k">=</span>d;<span class="pl-c1">0</span><span class="pl-k">&lt;=</span>h<span class="pl-k">&amp;&amp;</span>e[a<span class="pl-k">+</span>h<span class="pl-k">*</span>qrcode.<span class="pl-sc">width</span>];)f[<span class="pl-c1">2</span>]<span class="pl-k">++</span>,h<span class="pl-k">--</span>;<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">&gt;</span></td>
      </tr>
      <tr>
        <td id="L75" class="blob-num js-line-number" data-line-number="75"></td>
        <td id="LC75" class="blob-code js-file-line">h)<span class="pl-k">return</span> <span class="pl-c1">NaN</span>;<span class="pl-k">for</span>(;<span class="pl-c1">0</span><span class="pl-k">&lt;=</span>h<span class="pl-k">&amp;&amp;!</span>e[a<span class="pl-k">+</span>h<span class="pl-k">*</span>qrcode.<span class="pl-sc">width</span>]<span class="pl-k">&amp;&amp;</span>f[<span class="pl-c1">1</span>]<span class="pl-k">&lt;=</span>c;)f[<span class="pl-c1">1</span>]<span class="pl-k">++</span>,h<span class="pl-k">--</span>;<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">&gt;</span>h<span class="pl-k">||</span>f[<span class="pl-c1">1</span>]<span class="pl-k">&gt;</span>c)<span class="pl-k">return</span> <span class="pl-c1">NaN</span>;<span class="pl-k">for</span>(;<span class="pl-c1">0</span><span class="pl-k">&lt;=</span>h<span class="pl-k">&amp;&amp;</span>e[a<span class="pl-k">+</span>h<span class="pl-k">*</span>qrcode.<span class="pl-sc">width</span>]<span class="pl-k">&amp;&amp;</span>f[<span class="pl-c1">0</span>]<span class="pl-k">&lt;=</span>c;)f[<span class="pl-c1">0</span>]<span class="pl-k">++</span>,h<span class="pl-k">--</span>;<span class="pl-k">if</span>(f[<span class="pl-c1">0</span>]<span class="pl-k">&gt;</span>c)<span class="pl-k">return</span> <span class="pl-c1">NaN</span>;<span class="pl-k">for</span>(h<span class="pl-k">=</span>d<span class="pl-k">+</span><span class="pl-c1">1</span>;h<span class="pl-k">&lt;</span>g<span class="pl-k">&amp;&amp;</span>e[a<span class="pl-k">+</span>h<span class="pl-k">*</span>qrcode.<span class="pl-sc">width</span>];)f[<span class="pl-c1">2</span>]<span class="pl-k">++</span>,h<span class="pl-k">++</span>;<span class="pl-k">if</span>(h<span class="pl-k">==</span>g)<span class="pl-k">return</span> <span class="pl-c1">NaN</span>;<span class="pl-k">for</span>(;h<span class="pl-k">&lt;</span>g<span class="pl-k">&amp;&amp;!</span>e[a<span class="pl-k">+</span>h<span class="pl-k">*</span>qrcode.<span class="pl-sc">width</span>]<span class="pl-k">&amp;&amp;</span>f[<span class="pl-c1">3</span>]<span class="pl-k">&lt;</span>c;)f[<span class="pl-c1">3</span>]<span class="pl-k">++</span>,h<span class="pl-k">++</span>;<span class="pl-k">if</span>(h<span class="pl-k">==</span>g<span class="pl-k">||</span>f[<span class="pl-c1">3</span>]<span class="pl-k">&gt;=</span>c)<span class="pl-k">return</span> <span class="pl-c1">NaN</span>;<span class="pl-k">for</span>(;h<span class="pl-k">&lt;</span>g<span class="pl-k">&amp;&amp;</span>e[a<span class="pl-k">+</span>h<span class="pl-k">*</span>qrcode.<span class="pl-sc">width</span>]<span class="pl-k">&amp;&amp;</span>f[<span class="pl-c1">4</span>]<span class="pl-k">&lt;</span>c;)f[<span class="pl-c1">4</span>]<span class="pl-k">++</span>,h<span class="pl-k">++</span>;<span class="pl-k">return</span> f[<span class="pl-c1">4</span>]<span class="pl-k">&gt;=</span>c<span class="pl-k">||</span><span class="pl-c1">5</span><span class="pl-k">*</span><span class="pl-s3">Math</span>.<span class="pl-s3">abs</span>(f[<span class="pl-c1">0</span>]<span class="pl-k">+</span>f[<span class="pl-c1">1</span>]<span class="pl-k">+</span>f[<span class="pl-c1">2</span>]<span class="pl-k">+</span>f[<span class="pl-c1">3</span>]<span class="pl-k">+</span>f[<span class="pl-c1">4</span>]<span class="pl-k">-</span>b)<span class="pl-k">&gt;=</span><span class="pl-c1">2</span><span class="pl-k">*</span>b<span class="pl-k">?</span><span class="pl-c1">NaN</span><span class="pl-k">:</span><span class="pl-v">this</span>.foundPatternCross(f)<span class="pl-k">?</span><span class="pl-v">this</span>.centerFromEnd(f,h)<span class="pl-k">:</span><span class="pl-c1">NaN</span>};<span class="pl-v">this</span>.crossCheckHorizontal<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L76" class="blob-num js-line-number" data-line-number="76"></td>
        <td id="LC76" class="blob-code js-file-line"><span class="pl-st">function</span>(<span class="pl-vpf">d</span>,<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>){<span class="pl-k">for</span>(<span class="pl-s">var</span> e<span class="pl-k">=</span><span class="pl-v">this</span>.image,g<span class="pl-k">=</span>qrcode.<span class="pl-sc">width</span>,f<span class="pl-k">=</span><span class="pl-v">this</span>.CrossCheckStateCount,h<span class="pl-k">=</span>d;<span class="pl-c1">0</span><span class="pl-k">&lt;=</span>h<span class="pl-k">&amp;&amp;</span>e[h<span class="pl-k">+</span>a<span class="pl-k">*</span>qrcode.<span class="pl-sc">width</span>];)f[<span class="pl-c1">2</span>]<span class="pl-k">++</span>,h<span class="pl-k">--</span>;<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">&gt;</span>h)<span class="pl-k">return</span> <span class="pl-c1">NaN</span>;<span class="pl-k">for</span>(;<span class="pl-c1">0</span><span class="pl-k">&lt;=</span>h<span class="pl-k">&amp;&amp;!</span>e[h<span class="pl-k">+</span>a<span class="pl-k">*</span>qrcode.<span class="pl-sc">width</span>]<span class="pl-k">&amp;&amp;</span>f[<span class="pl-c1">1</span>]<span class="pl-k">&lt;=</span>c;)f[<span class="pl-c1">1</span>]<span class="pl-k">++</span>,h<span class="pl-k">--</span>;<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">&gt;</span>h<span class="pl-k">||</span>f[<span class="pl-c1">1</span>]<span class="pl-k">&gt;</span>c)<span class="pl-k">return</span> <span class="pl-c1">NaN</span>;<span class="pl-k">for</span>(;<span class="pl-c1">0</span><span class="pl-k">&lt;=</span>h<span class="pl-k">&amp;&amp;</span>e[h<span class="pl-k">+</span>a<span class="pl-k">*</span>qrcode.<span class="pl-sc">width</span>]<span class="pl-k">&amp;&amp;</span>f[<span class="pl-c1">0</span>]<span class="pl-k">&lt;=</span>c;)f[<span class="pl-c1">0</span>]<span class="pl-k">++</span>,h<span class="pl-k">--</span>;<span class="pl-k">if</span>(f[<span class="pl-c1">0</span>]<span class="pl-k">&gt;</span>c)<span class="pl-k">return</span> <span class="pl-c1">NaN</span>;<span class="pl-k">for</span>(h<span class="pl-k">=</span>d<span class="pl-k">+</span><span class="pl-c1">1</span>;h<span class="pl-k">&lt;</span>g<span class="pl-k">&amp;&amp;</span>e[h<span class="pl-k">+</span>a<span class="pl-k">*</span>qrcode.<span class="pl-sc">width</span>];)f[<span class="pl-c1">2</span>]<span class="pl-k">++</span>,h<span class="pl-k">++</span>;<span class="pl-k">if</span>(h<span class="pl-k">==</span>g)<span class="pl-k">return</span> <span class="pl-c1">NaN</span>;<span class="pl-k">for</span>(;h<span class="pl-k">&lt;</span>g<span class="pl-k">&amp;&amp;!</span>e[h<span class="pl-k">+</span>a<span class="pl-k">*</span>qrcode.<span class="pl-sc">width</span>]<span class="pl-k">&amp;&amp;</span>f[<span class="pl-c1">3</span>]<span class="pl-k">&lt;</span>c;)f[<span class="pl-c1">3</span>]<span class="pl-k">++</span>,h<span class="pl-k">++</span>;<span class="pl-k">if</span>(h<span class="pl-k">==</span>g<span class="pl-k">||</span>f[<span class="pl-c1">3</span>]<span class="pl-k">&gt;=</span>c)<span class="pl-k">return</span> <span class="pl-c1">NaN</span>;<span class="pl-k">for</span>(;h<span class="pl-k">&lt;</span>g<span class="pl-k">&amp;&amp;</span>e[h<span class="pl-k">+</span>a<span class="pl-k">*</span>qrcode.<span class="pl-sc">width</span>]<span class="pl-k">&amp;&amp;</span>f[<span class="pl-c1">4</span>]<span class="pl-k">&lt;</span>c;)f[<span class="pl-c1">4</span>]<span class="pl-k">++</span>,h<span class="pl-k">++</span>;<span class="pl-k">return</span> f[<span class="pl-c1">4</span>]<span class="pl-k">&gt;=</span></td>
      </tr>
      <tr>
        <td id="L77" class="blob-num js-line-number" data-line-number="77"></td>
        <td id="LC77" class="blob-code js-file-line">c<span class="pl-k">||</span><span class="pl-c1">5</span><span class="pl-k">*</span><span class="pl-s3">Math</span>.<span class="pl-s3">abs</span>(f[<span class="pl-c1">0</span>]<span class="pl-k">+</span>f[<span class="pl-c1">1</span>]<span class="pl-k">+</span>f[<span class="pl-c1">2</span>]<span class="pl-k">+</span>f[<span class="pl-c1">3</span>]<span class="pl-k">+</span>f[<span class="pl-c1">4</span>]<span class="pl-k">-</span>b)<span class="pl-k">&gt;=</span>b<span class="pl-k">?</span><span class="pl-c1">NaN</span><span class="pl-k">:</span><span class="pl-v">this</span>.foundPatternCross(f)<span class="pl-k">?</span><span class="pl-v">this</span>.centerFromEnd(f,h)<span class="pl-k">:</span><span class="pl-c1">NaN</span>};<span class="pl-s3">this</span>.<span class="pl-en">handlePossibleCenter</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">d</span>,<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>){<span class="pl-s">var</span> b<span class="pl-k">=</span>d[<span class="pl-c1">0</span>]<span class="pl-k">+</span>d[<span class="pl-c1">1</span>]<span class="pl-k">+</span>d[<span class="pl-c1">2</span>]<span class="pl-k">+</span>d[<span class="pl-c1">3</span>]<span class="pl-k">+</span>d[<span class="pl-c1">4</span>];c<span class="pl-k">=</span><span class="pl-v">this</span>.centerFromEnd(d,c);a<span class="pl-k">=</span><span class="pl-v">this</span>.crossCheckVertical(a,<span class="pl-s3">Math</span>.<span class="pl-s3">floor</span>(c),d[<span class="pl-c1">2</span>],b);<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-s3">isNaN</span>(a)<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">=</span><span class="pl-v">this</span>.crossCheckHorizontal(<span class="pl-s3">Math</span>.<span class="pl-s3">floor</span>(c),<span class="pl-s3">Math</span>.<span class="pl-s3">floor</span>(a),d[<span class="pl-c1">2</span>],b),<span class="pl-k">!</span><span class="pl-s3">isNaN</span>(c))){d<span class="pl-k">=</span>b/<span class="pl-c1">7</span>;<span class="pl-k">for</span>(<span class="pl-s">var</span> b<span class="pl-k">=!</span><span class="pl-c1">1</span>,e<span class="pl-k">=</span><span class="pl-v">this</span>.possibleCenters.<span class="pl-sc">length</span>,g<span class="pl-k">=</span><span class="pl-c1">0</span>;g<span class="pl-k">&lt;</span>e;g<span class="pl-k">++</span>){<span class="pl-s">var</span> f<span class="pl-k">=</span><span class="pl-v">this</span>.possibleCenters[g];<span class="pl-k">if</span>(f.aboutEquals(d,a,c)){f.incrementCount();b<span class="pl-k">=!</span><span class="pl-c1">0</span>;<span class="pl-k">break</span>}}b<span class="pl-k">||</span>(c<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">FinderPattern</span>(c,</td>
      </tr>
      <tr>
        <td id="L78" class="blob-num js-line-number" data-line-number="78"></td>
        <td id="LC78" class="blob-code js-file-line">a,d),<span class="pl-v">this</span>.possibleCenters.<span class="pl-s3">push</span>(c),<span class="pl-c1">null</span><span class="pl-k">!=</span><span class="pl-v">this</span>.resultPointCallback<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.resultPointCallback.foundPossibleResultPoint(c));<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">0</span>}<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>};<span class="pl-s3">this</span>.<span class="pl-en">selectBestPatterns</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-v">this</span>.possibleCenters.<span class="pl-sc">length</span>;<span class="pl-k">if</span>(<span class="pl-c1">3</span><span class="pl-k">&gt;</span>d)<span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>Couldn&#39;t find enough finder patterns<span class="pl-pds">&quot;</span></span>;<span class="pl-k">if</span>(<span class="pl-c1">3</span><span class="pl-k">&lt;</span>d){<span class="pl-k">for</span>(<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-c1">0</span>,c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span>d;c<span class="pl-k">++</span>)a<span class="pl-k">+=</span><span class="pl-v">this</span>.possibleCenters[c].EstimatedModuleSize;d<span class="pl-k">=</span>a/d;<span class="pl-k">for</span>(c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span><span class="pl-v">this</span>.possibleCenters.<span class="pl-sc">length</span><span class="pl-k">&amp;&amp;</span><span class="pl-c1">3</span><span class="pl-k">&lt;</span><span class="pl-v">this</span>.possibleCenters.<span class="pl-sc">length</span>;c<span class="pl-k">++</span>)<span class="pl-s3">Math</span>.<span class="pl-s3">abs</span>(<span class="pl-v">this</span>.possibleCenters[c].EstimatedModuleSize<span class="pl-k">-</span>d)<span class="pl-k">&gt;</span><span class="pl-c1">0.2</span><span class="pl-k">*</span>d<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.possibleCenters.<span class="pl-s3">remove</span>(c),</td>
      </tr>
      <tr>
        <td id="L79" class="blob-num js-line-number" data-line-number="79"></td>
        <td id="LC79" class="blob-code js-file-line">c<span class="pl-k">--</span>)}<span class="pl-k">return</span>[<span class="pl-v">this</span>.possibleCenters[<span class="pl-c1">0</span>],<span class="pl-v">this</span>.possibleCenters[<span class="pl-c1">1</span>],<span class="pl-v">this</span>.possibleCenters[<span class="pl-c1">2</span>]]};<span class="pl-s3">this</span>.<span class="pl-en">findRowSkip</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-v">this</span>.possibleCenters.<span class="pl-sc">length</span>;<span class="pl-k">if</span>(<span class="pl-c1">1</span><span class="pl-k">&gt;=</span>d)<span class="pl-k">return</span> <span class="pl-c1">0</span>;<span class="pl-k">for</span>(<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-c1">null</span>,c<span class="pl-k">=</span><span class="pl-c1">0</span>;c<span class="pl-k">&lt;</span>d;c<span class="pl-k">++</span>){<span class="pl-s">var</span> b<span class="pl-k">=</span><span class="pl-v">this</span>.possibleCenters[c];<span class="pl-k">if</span>(b.Count<span class="pl-k">&gt;=</span>CENTER_QUORUM)<span class="pl-k">if</span>(<span class="pl-c1">null</span><span class="pl-k">==</span>a)a<span class="pl-k">=</span>b;<span class="pl-k">else</span> <span class="pl-k">return</span> <span class="pl-v">this</span>.hasSkipped<span class="pl-k">=!</span><span class="pl-c1">0</span>,<span class="pl-s3">Math</span>.<span class="pl-s3">floor</span>((<span class="pl-s3">Math</span>.<span class="pl-s3">abs</span>(a.X<span class="pl-k">-</span>b.X)<span class="pl-k">-</span><span class="pl-s3">Math</span>.<span class="pl-s3">abs</span>(a.Y<span class="pl-k">-</span>b.Y))/<span class="pl-c1">2</span>)}<span class="pl-k">return</span> <span class="pl-c1">0</span>};<span class="pl-s3">this</span>.<span class="pl-en">haveMultiplyConfirmedCenters</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">for</span>(<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-c1">0</span>,a<span class="pl-k">=</span><span class="pl-c1">0</span>,c<span class="pl-k">=</span><span class="pl-v">this</span>.possibleCenters.<span class="pl-sc">length</span>,b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span>c;b<span class="pl-k">++</span>){<span class="pl-s">var</span> e<span class="pl-k">=</span><span class="pl-v">this</span>.possibleCenters[b];e.Count<span class="pl-k">&gt;=</span>CENTER_QUORUM<span class="pl-k">&amp;&amp;</span></td>
      </tr>
      <tr>
        <td id="L80" class="blob-num js-line-number" data-line-number="80"></td>
        <td id="LC80" class="blob-code js-file-line">(d<span class="pl-k">++</span>,a<span class="pl-k">+=</span>e.EstimatedModuleSize)}<span class="pl-k">if</span>(<span class="pl-c1">3</span><span class="pl-k">&gt;</span>d)<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-k">for</span>(<span class="pl-s">var</span> d<span class="pl-k">=</span>a/c,g<span class="pl-k">=</span><span class="pl-c1">0</span>,b<span class="pl-k">=</span><span class="pl-c1">0</span>;b<span class="pl-k">&lt;</span>c;b<span class="pl-k">++</span>)e<span class="pl-k">=</span><span class="pl-v">this</span>.possibleCenters[b],g<span class="pl-k">+=</span><span class="pl-s3">Math</span>.<span class="pl-s3">abs</span>(e.EstimatedModuleSize<span class="pl-k">-</span>d);<span class="pl-k">return</span> g<span class="pl-k">&lt;=</span><span class="pl-c1">0.05</span><span class="pl-k">*</span>a};<span class="pl-s3">this</span>.<span class="pl-en">findFinderPattern</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">d</span>){<span class="pl-v">this</span>.image<span class="pl-k">=</span>d;<span class="pl-s">var</span> a<span class="pl-k">=</span>qrcode.<span class="pl-sc">height</span>,c<span class="pl-k">=</span>qrcode.<span class="pl-sc">width</span>,b<span class="pl-k">=</span><span class="pl-s3">Math</span>.<span class="pl-s3">floor</span>(<span class="pl-c1">3</span><span class="pl-k">*</span>a/(<span class="pl-c1">4</span><span class="pl-k">*</span>MAX_MODULES));b<span class="pl-k">&lt;</span>MIN_SKIP<span class="pl-k">&amp;&amp;</span>(b<span class="pl-k">=</span>MIN_SKIP);<span class="pl-k">for</span>(<span class="pl-s">var</span> e<span class="pl-k">=!</span><span class="pl-c1">1</span>,g<span class="pl-k">=</span><span class="pl-s3">Array</span>(<span class="pl-c1">5</span>),f<span class="pl-k">=</span>b<span class="pl-k">-</span><span class="pl-c1">1</span>;f<span class="pl-k">&lt;</span>a<span class="pl-k">&amp;&amp;!</span>e;f<span class="pl-k">+=</span>b){g[<span class="pl-c1">0</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;g[<span class="pl-c1">1</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;g[<span class="pl-c1">2</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;g[<span class="pl-c1">3</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(<span class="pl-s">var</span> h<span class="pl-k">=</span>g[<span class="pl-c1">4</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>,j<span class="pl-k">=</span><span class="pl-c1">0</span>;j<span class="pl-k">&lt;</span>c;j<span class="pl-k">++</span>)<span class="pl-k">if</span>(d[j<span class="pl-k">+</span>f<span class="pl-k">*</span>qrcode.<span class="pl-sc">width</span>])<span class="pl-c1">1</span><span class="pl-k">==</span>(h<span class="pl-k">&amp;</span><span class="pl-c1">1</span>)<span class="pl-k">&amp;&amp;</span>h<span class="pl-k">++</span>,g[h]<span class="pl-k">++</span>;<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">==</span>(h<span class="pl-k">&amp;</span><span class="pl-c1">1</span>))<span class="pl-k">if</span>(<span class="pl-c1">4</span><span class="pl-k">==</span>h)<span class="pl-k">if</span>(<span class="pl-v">this</span>.foundPatternCross(g)){<span class="pl-k">if</span>(h<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L81" class="blob-num js-line-number" data-line-number="81"></td>
        <td id="LC81" class="blob-code js-file-line"><span class="pl-v">this</span>.handlePossibleCenter(g,f,j))b<span class="pl-k">=</span><span class="pl-c1">2</span>,<span class="pl-v">this</span>.hasSkipped<span class="pl-k">?</span>e<span class="pl-k">=</span><span class="pl-v">this</span>.haveMultiplyConfirmedCenters()<span class="pl-k">:</span>(h<span class="pl-k">=</span><span class="pl-v">this</span>.findRowSkip(),h<span class="pl-k">&gt;</span>g[<span class="pl-c1">2</span>]<span class="pl-k">&amp;&amp;</span>(f<span class="pl-k">+=</span>h<span class="pl-k">-</span>g[<span class="pl-c1">2</span>]<span class="pl-k">-</span>b,j<span class="pl-k">=</span>c<span class="pl-k">-</span><span class="pl-c1">1</span>));<span class="pl-k">else</span>{<span class="pl-k">do</span> j<span class="pl-k">++</span>;<span class="pl-k">while</span>(j<span class="pl-k">&lt;</span>c<span class="pl-k">&amp;&amp;!</span>d[j<span class="pl-k">+</span>f<span class="pl-k">*</span>qrcode.<span class="pl-sc">width</span>]);j<span class="pl-k">--</span>}h<span class="pl-k">=</span><span class="pl-c1">0</span>;g[<span class="pl-c1">0</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;g[<span class="pl-c1">1</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;g[<span class="pl-c1">2</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;g[<span class="pl-c1">3</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;g[<span class="pl-c1">4</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>}<span class="pl-k">else</span> g[<span class="pl-c1">0</span>]<span class="pl-k">=</span>g[<span class="pl-c1">2</span>],g[<span class="pl-c1">1</span>]<span class="pl-k">=</span>g[<span class="pl-c1">3</span>],g[<span class="pl-c1">2</span>]<span class="pl-k">=</span>g[<span class="pl-c1">4</span>],g[<span class="pl-c1">3</span>]<span class="pl-k">=</span><span class="pl-c1">1</span>,g[<span class="pl-c1">4</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>,h<span class="pl-k">=</span><span class="pl-c1">3</span>;<span class="pl-k">else</span> g[<span class="pl-k">++</span>h]<span class="pl-k">++</span>;<span class="pl-k">else</span> g[h]<span class="pl-k">++</span>;<span class="pl-k">if</span>(<span class="pl-v">this</span>.foundPatternCross(g)<span class="pl-k">&amp;&amp;</span>(h<span class="pl-k">=</span><span class="pl-v">this</span>.handlePossibleCenter(g,f,c)))b<span class="pl-k">=</span>g[<span class="pl-c1">0</span>],<span class="pl-v">this</span>.hasSkipped<span class="pl-k">&amp;&amp;</span>(e<span class="pl-k">=</span>haveMultiplyConfirmedCenters())}d<span class="pl-k">=</span><span class="pl-v">this</span>.selectBestPatterns();qrcode.orderBestPatterns(d);<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">FinderPatternInfo</span>(d)}}</td>
      </tr>
      <tr>
        <td id="L82" class="blob-num js-line-number" data-line-number="82"></td>
        <td id="LC82" class="blob-code js-file-line">;<span class="pl-st">function</span> <span class="pl-en">AlignmentPattern</span>(<span class="pl-vpf">d</span>,<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>){<span class="pl-v">this</span>.<span class="pl-sc">x</span><span class="pl-k">=</span>d;<span class="pl-v">this</span>.<span class="pl-sc">y</span><span class="pl-k">=</span>a;<span class="pl-v">this</span>.count<span class="pl-k">=</span><span class="pl-c1">1</span>;<span class="pl-v">this</span>.estimatedModuleSize<span class="pl-k">=</span>c;<span class="pl-v">this</span>.__defineGetter__(<span class="pl-s1"><span class="pl-pds">&quot;</span>EstimatedModuleSize<span class="pl-pds">&quot;</span></span>,<span class="pl-st">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.estimatedModuleSize});<span class="pl-v">this</span>.__defineGetter__(<span class="pl-s1"><span class="pl-pds">&quot;</span>Count<span class="pl-pds">&quot;</span></span>,<span class="pl-st">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.count});<span class="pl-v">this</span>.__defineGetter__(<span class="pl-s1"><span class="pl-pds">&quot;</span>X<span class="pl-pds">&quot;</span></span>,<span class="pl-st">function</span>(){<span class="pl-k">return</span> <span class="pl-s3">Math</span>.<span class="pl-s3">floor</span>(<span class="pl-v">this</span>.<span class="pl-sc">x</span>)});<span class="pl-v">this</span>.__defineGetter__(<span class="pl-s1"><span class="pl-pds">&quot;</span>Y<span class="pl-pds">&quot;</span></span>,<span class="pl-st">function</span>(){<span class="pl-k">return</span> <span class="pl-s3">Math</span>.<span class="pl-s3">floor</span>(<span class="pl-v">this</span>.<span class="pl-sc">y</span>)});<span class="pl-s3">this</span>.<span class="pl-en">incrementCount</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-v">this</span>.count<span class="pl-k">++</span>};<span class="pl-s3">this</span>.<span class="pl-en">aboutEquals</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">b</span>,<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>){<span class="pl-k">return</span> <span class="pl-s3">Math</span>.<span class="pl-s3">abs</span>(a<span class="pl-k">-</span><span class="pl-v">this</span>.<span class="pl-sc">y</span>)<span class="pl-k">&lt;=</span>b<span class="pl-k">&amp;&amp;</span><span class="pl-s3">Math</span>.<span class="pl-s3">abs</span>(c<span class="pl-k">-</span><span class="pl-v">this</span>.<span class="pl-sc">x</span>)<span class="pl-k">&lt;=</span>b<span class="pl-k">?</span></td>
      </tr>
      <tr>
        <td id="L83" class="blob-num js-line-number" data-line-number="83"></td>
        <td id="LC83" class="blob-code js-file-line">(b<span class="pl-k">=</span><span class="pl-s3">Math</span>.<span class="pl-s3">abs</span>(b<span class="pl-k">-</span><span class="pl-v">this</span>.estimatedModuleSize),<span class="pl-c1">1</span><span class="pl-k">&gt;=</span>b<span class="pl-k">||</span><span class="pl-c1">1</span><span class="pl-k">&gt;=</span>b/<span class="pl-v">this</span>.estimatedModuleSize)<span class="pl-k">:!</span><span class="pl-c1">1</span>}}</td>
      </tr>
      <tr>
        <td id="L84" class="blob-num js-line-number" data-line-number="84"></td>
        <td id="LC84" class="blob-code js-file-line"><span class="pl-st">function</span> <span class="pl-en">AlignmentPatternFinder</span>(<span class="pl-vpf">d</span>,<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">b</span>,<span class="pl-vpf">e</span>,<span class="pl-vpf">g</span>,<span class="pl-vpf">f</span>){<span class="pl-v">this</span>.image<span class="pl-k">=</span>d;<span class="pl-v">this</span>.possibleCenters<span class="pl-k">=</span>[];<span class="pl-v">this</span>.startX<span class="pl-k">=</span>a;<span class="pl-v">this</span>.startY<span class="pl-k">=</span>c;<span class="pl-v">this</span>.<span class="pl-sc">width</span><span class="pl-k">=</span>b;<span class="pl-v">this</span>.<span class="pl-sc">height</span><span class="pl-k">=</span>e;<span class="pl-v">this</span>.moduleSize<span class="pl-k">=</span>g;<span class="pl-v">this</span>.crossCheckStateCount<span class="pl-k">=</span>[<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>];<span class="pl-v">this</span>.resultPointCallback<span class="pl-k">=</span>f;<span class="pl-s3">this</span>.<span class="pl-en">centerFromEnd</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">b</span>,<span class="pl-vpf">a</span>){<span class="pl-k">return</span> a<span class="pl-k">-</span>b[<span class="pl-c1">2</span>]<span class="pl-k">-</span>b[<span class="pl-c1">1</span>]/<span class="pl-c1">2</span>};<span class="pl-s3">this</span>.<span class="pl-en">foundPatternCross</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">b</span>){<span class="pl-k">for</span>(<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.moduleSize,c<span class="pl-k">=</span>a/<span class="pl-c1">2</span>,d<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">3</span><span class="pl-k">&gt;</span>d;d<span class="pl-k">++</span>)<span class="pl-k">if</span>(<span class="pl-s3">Math</span>.<span class="pl-s3">abs</span>(a<span class="pl-k">-</span>b[d])<span class="pl-k">&gt;=</span>c)<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">1</span>;<span class="pl-k">return</span><span class="pl-k">!</span><span class="pl-c1">0</span>};<span class="pl-s3">this</span>.<span class="pl-en">crossCheckVertical</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">b</span>,<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>,<span class="pl-vpf">d</span>){<span class="pl-s">var</span> e<span class="pl-k">=</span><span class="pl-v">this</span>.image,g<span class="pl-k">=</span>qrcode.<span class="pl-sc">height</span>,f<span class="pl-k">=</span><span class="pl-v">this</span>.crossCheckStateCount;f[<span class="pl-c1">0</span>]<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L85" class="blob-num js-line-number" data-line-number="85"></td>
        <td id="LC85" class="blob-code js-file-line"><span class="pl-c1">0</span>;f[<span class="pl-c1">1</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;f[<span class="pl-c1">2</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(<span class="pl-s">var</span> m<span class="pl-k">=</span>b;<span class="pl-c1">0</span><span class="pl-k">&lt;=</span>m<span class="pl-k">&amp;&amp;</span>e[a<span class="pl-k">+</span>m<span class="pl-k">*</span>qrcode.<span class="pl-sc">width</span>]<span class="pl-k">&amp;&amp;</span>f[<span class="pl-c1">1</span>]<span class="pl-k">&lt;=</span>c;)f[<span class="pl-c1">1</span>]<span class="pl-k">++</span>,m<span class="pl-k">--</span>;<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">&gt;</span>m<span class="pl-k">||</span>f[<span class="pl-c1">1</span>]<span class="pl-k">&gt;</span>c)<span class="pl-k">return</span> <span class="pl-c1">NaN</span>;<span class="pl-k">for</span>(;<span class="pl-c1">0</span><span class="pl-k">&lt;=</span>m<span class="pl-k">&amp;&amp;!</span>e[a<span class="pl-k">+</span>m<span class="pl-k">*</span>qrcode.<span class="pl-sc">width</span>]<span class="pl-k">&amp;&amp;</span>f[<span class="pl-c1">0</span>]<span class="pl-k">&lt;=</span>c;)f[<span class="pl-c1">0</span>]<span class="pl-k">++</span>,m<span class="pl-k">--</span>;<span class="pl-k">if</span>(f[<span class="pl-c1">0</span>]<span class="pl-k">&gt;</span>c)<span class="pl-k">return</span> <span class="pl-c1">NaN</span>;<span class="pl-k">for</span>(m<span class="pl-k">=</span>b<span class="pl-k">+</span><span class="pl-c1">1</span>;m<span class="pl-k">&lt;</span>g<span class="pl-k">&amp;&amp;</span>e[a<span class="pl-k">+</span>m<span class="pl-k">*</span>qrcode.<span class="pl-sc">width</span>]<span class="pl-k">&amp;&amp;</span>f[<span class="pl-c1">1</span>]<span class="pl-k">&lt;=</span>c;)f[<span class="pl-c1">1</span>]<span class="pl-k">++</span>,m<span class="pl-k">++</span>;<span class="pl-k">if</span>(m<span class="pl-k">==</span>g<span class="pl-k">||</span>f[<span class="pl-c1">1</span>]<span class="pl-k">&gt;</span>c)<span class="pl-k">return</span> <span class="pl-c1">NaN</span>;<span class="pl-k">for</span>(;m<span class="pl-k">&lt;</span>g<span class="pl-k">&amp;&amp;!</span>e[a<span class="pl-k">+</span>m<span class="pl-k">*</span>qrcode.<span class="pl-sc">width</span>]<span class="pl-k">&amp;&amp;</span>f[<span class="pl-c1">2</span>]<span class="pl-k">&lt;=</span>c;)f[<span class="pl-c1">2</span>]<span class="pl-k">++</span>,m<span class="pl-k">++</span>;<span class="pl-k">return</span> f[<span class="pl-c1">2</span>]<span class="pl-k">&gt;</span>c<span class="pl-k">||</span><span class="pl-c1">5</span><span class="pl-k">*</span><span class="pl-s3">Math</span>.<span class="pl-s3">abs</span>(f[<span class="pl-c1">0</span>]<span class="pl-k">+</span>f[<span class="pl-c1">1</span>]<span class="pl-k">+</span>f[<span class="pl-c1">2</span>]<span class="pl-k">-</span>d)<span class="pl-k">&gt;=</span><span class="pl-c1">2</span><span class="pl-k">*</span>d<span class="pl-k">?</span><span class="pl-c1">NaN</span><span class="pl-k">:</span><span class="pl-v">this</span>.foundPatternCross(f)<span class="pl-k">?</span><span class="pl-v">this</span>.centerFromEnd(f,m)<span class="pl-k">:</span><span class="pl-c1">NaN</span>};<span class="pl-s3">this</span>.<span class="pl-en">handlePossibleCenter</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">b</span>,<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>){<span class="pl-s">var</span> d<span class="pl-k">=</span>b[<span class="pl-c1">0</span>]<span class="pl-k">+</span>b[<span class="pl-c1">1</span>]<span class="pl-k">+</span>b[<span class="pl-c1">2</span>];c<span class="pl-k">=</span><span class="pl-v">this</span>.centerFromEnd(b,</td>
      </tr>
      <tr>
        <td id="L86" class="blob-num js-line-number" data-line-number="86"></td>
        <td id="LC86" class="blob-code js-file-line">c);a<span class="pl-k">=</span><span class="pl-v">this</span>.crossCheckVertical(a,<span class="pl-s3">Math</span>.<span class="pl-s3">floor</span>(c),<span class="pl-c1">2</span><span class="pl-k">*</span>b[<span class="pl-c1">1</span>],d);<span class="pl-k">if</span>(<span class="pl-k">!</span><span class="pl-s3">isNaN</span>(a)){b<span class="pl-k">=</span>(b[<span class="pl-c1">0</span>]<span class="pl-k">+</span>b[<span class="pl-c1">1</span>]<span class="pl-k">+</span>b[<span class="pl-c1">2</span>])/<span class="pl-c1">3</span>;<span class="pl-k">for</span>(<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-v">this</span>.possibleCenters.<span class="pl-sc">length</span>,e<span class="pl-k">=</span><span class="pl-c1">0</span>;e<span class="pl-k">&lt;</span>d;e<span class="pl-k">++</span>)<span class="pl-k">if</span>(<span class="pl-v">this</span>.possibleCenters[e].aboutEquals(b,a,c))<span class="pl-k">return</span> <span class="pl-k">new</span> <span class="pl-en">AlignmentPattern</span>(c,a,b);c<span class="pl-k">=</span><span class="pl-k">new</span> <span class="pl-en">AlignmentPattern</span>(c,a,b);<span class="pl-v">this</span>.possibleCenters.<span class="pl-s3">push</span>(c);<span class="pl-c1">null</span><span class="pl-k">!=</span><span class="pl-v">this</span>.resultPointCallback<span class="pl-k">&amp;&amp;</span><span class="pl-v">this</span>.resultPointCallback.foundPossibleResultPoint(c)}<span class="pl-k">return</span> <span class="pl-c1">null</span>};<span class="pl-s3">this</span>.<span class="pl-en">find</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">for</span>(<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.startX,e<span class="pl-k">=</span><span class="pl-v">this</span>.<span class="pl-sc">height</span>,g<span class="pl-k">=</span>a<span class="pl-k">+</span>b,f<span class="pl-k">=</span>c<span class="pl-k">+</span>(e<span class="pl-k">&gt;&gt;</span><span class="pl-c1">1</span>),l<span class="pl-k">=</span>[<span class="pl-c1">0</span>,<span class="pl-c1">0</span>,<span class="pl-c1">0</span>],s<span class="pl-k">=</span><span class="pl-c1">0</span>;s<span class="pl-k">&lt;</span>e;s<span class="pl-k">++</span>){<span class="pl-s">var</span> r<span class="pl-k">=</span>f<span class="pl-k">+</span>(<span class="pl-c1">0</span><span class="pl-k">==</span>(s<span class="pl-k">&amp;</span><span class="pl-c1">1</span>)<span class="pl-k">?</span>s<span class="pl-k">+</span><span class="pl-c1">1</span><span class="pl-k">&gt;&gt;</span><span class="pl-c1">1</span><span class="pl-k">:-</span>(s<span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L87" class="blob-num js-line-number" data-line-number="87"></td>
        <td id="LC87" class="blob-code js-file-line"><span class="pl-c1">1</span><span class="pl-k">&gt;&gt;</span><span class="pl-c1">1</span>));l[<span class="pl-c1">0</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;l[<span class="pl-c1">1</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;l[<span class="pl-c1">2</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">for</span>(<span class="pl-s">var</span> m<span class="pl-k">=</span>a;m<span class="pl-k">&lt;</span>g<span class="pl-k">&amp;&amp;!</span>d[m<span class="pl-k">+</span>qrcode.<span class="pl-sc">width</span><span class="pl-k">*</span>r];)m<span class="pl-k">++</span>;<span class="pl-k">for</span>(<span class="pl-s">var</span> q<span class="pl-k">=</span><span class="pl-c1">0</span>;m<span class="pl-k">&lt;</span>g;){<span class="pl-k">if</span>(d[m<span class="pl-k">+</span>r<span class="pl-k">*</span>qrcode.<span class="pl-sc">width</span>])<span class="pl-k">if</span>(<span class="pl-c1">1</span><span class="pl-k">==</span>q)l[q]<span class="pl-k">++</span>;<span class="pl-k">else</span> <span class="pl-k">if</span>(<span class="pl-c1">2</span><span class="pl-k">==</span>q){<span class="pl-k">if</span>(<span class="pl-v">this</span>.foundPatternCross(l)<span class="pl-k">&amp;&amp;</span>(q<span class="pl-k">=</span><span class="pl-v">this</span>.handlePossibleCenter(l,r,m),<span class="pl-c1">null</span><span class="pl-k">!=</span>q))<span class="pl-k">return</span> q;l[<span class="pl-c1">0</span>]<span class="pl-k">=</span>l[<span class="pl-c1">2</span>];l[<span class="pl-c1">1</span>]<span class="pl-k">=</span><span class="pl-c1">1</span>;l[<span class="pl-c1">2</span>]<span class="pl-k">=</span><span class="pl-c1">0</span>;q<span class="pl-k">=</span><span class="pl-c1">1</span>}<span class="pl-k">else</span> l[<span class="pl-k">++</span>q]<span class="pl-k">++</span>;<span class="pl-k">else</span> <span class="pl-c1">1</span><span class="pl-k">==</span>q<span class="pl-k">&amp;&amp;</span>q<span class="pl-k">++</span>,l[q]<span class="pl-k">++</span>;m<span class="pl-k">++</span>}<span class="pl-k">if</span>(<span class="pl-v">this</span>.foundPatternCross(l)<span class="pl-k">&amp;&amp;</span>(q<span class="pl-k">=</span><span class="pl-v">this</span>.handlePossibleCenter(l,r,g),<span class="pl-c1">null</span><span class="pl-k">!=</span>q))<span class="pl-k">return</span> q}<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">!=</span><span class="pl-v">this</span>.possibleCenters.<span class="pl-sc">length</span>)<span class="pl-k">return</span> <span class="pl-v">this</span>.possibleCenters[<span class="pl-c1">0</span>];<span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>Couldn&#39;t find enough alignment patterns<span class="pl-pds">&quot;</span></span>;}};<span class="pl-st">function</span> <span class="pl-en">QRCodeDataBlockReader</span>(<span class="pl-vpf">d</span>,<span class="pl-vpf">a</span>,<span class="pl-vpf">c</span>){<span class="pl-v">this</span>.blockPointer<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.bitPointer<span class="pl-k">=</span><span class="pl-c1">7</span>;<span class="pl-v">this</span>.dataLength<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-v">this</span>.blocks<span class="pl-k">=</span>d;<span class="pl-v">this</span>.numErrorCorrectionCode<span class="pl-k">=</span>c;<span class="pl-c1">9</span><span class="pl-k">&gt;=</span>a<span class="pl-k">?</span><span class="pl-v">this</span>.dataLengthMode<span class="pl-k">=</span><span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-c1">10</span><span class="pl-k">&lt;=</span>a<span class="pl-k">&amp;&amp;</span><span class="pl-c1">26</span><span class="pl-k">&gt;=</span>a<span class="pl-k">?</span><span class="pl-v">this</span>.dataLengthMode<span class="pl-k">=</span><span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-c1">27</span><span class="pl-k">&lt;=</span>a<span class="pl-k">&amp;&amp;</span><span class="pl-c1">40</span><span class="pl-k">&gt;=</span>a<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.dataLengthMode<span class="pl-k">=</span><span class="pl-c1">2</span>);<span class="pl-s3">this</span>.<span class="pl-en">getNextBits</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">b</span>){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-k">if</span>(b<span class="pl-k">&lt;</span><span class="pl-v">this</span>.bitPointer<span class="pl-k">+</span><span class="pl-c1">1</span>){<span class="pl-k">for</span>(<span class="pl-s">var</span> c<span class="pl-k">=</span><span class="pl-c1">0</span>,a<span class="pl-k">=</span><span class="pl-c1">0</span>;a<span class="pl-k">&lt;</span>b;a<span class="pl-k">++</span>)c<span class="pl-k">+=</span><span class="pl-c1">1</span><span class="pl-k">&lt;&lt;</span>a;c<span class="pl-k">&lt;&lt;=</span><span class="pl-v">this</span>.bitPointer<span class="pl-k">-</span>b<span class="pl-k">+</span><span class="pl-c1">1</span>;a<span class="pl-k">=</span>(<span class="pl-v">this</span>.blocks[<span class="pl-v">this</span>.blockPointer]<span class="pl-k">&amp;</span>c)<span class="pl-k">&gt;&gt;</span><span class="pl-v">this</span>.bitPointer<span class="pl-k">-</span>b<span class="pl-k">+</span><span class="pl-c1">1</span>;<span class="pl-v">this</span>.bitPointer<span class="pl-k">-=</span>b;<span class="pl-k">return</span> a}<span class="pl-k">if</span>(b<span class="pl-k">&lt;</span><span class="pl-v">this</span>.bitPointer<span class="pl-k">+</span><span class="pl-c1">1</span><span class="pl-k">+</span><span class="pl-c1">8</span>){<span class="pl-k">for</span>(<span class="pl-s">var</span> d<span class="pl-k">=</span><span class="pl-c1">0</span>,a<span class="pl-k">=</span><span class="pl-c1">0</span>;a<span class="pl-k">&lt;</span><span class="pl-v">this</span>.bitPointer<span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L88" class="blob-num js-line-number" data-line-number="88"></td>
        <td id="LC88" class="blob-code js-file-line"><span class="pl-c1">1</span>;a<span class="pl-k">++</span>)d<span class="pl-k">+=</span><span class="pl-c1">1</span><span class="pl-k">&lt;&lt;</span>a;a<span class="pl-k">=</span>(<span class="pl-v">this</span>.blocks[<span class="pl-v">this</span>.blockPointer]<span class="pl-k">&amp;</span>d)<span class="pl-k">&lt;&lt;</span>b<span class="pl-k">-</span>(<span class="pl-v">this</span>.bitPointer<span class="pl-k">+</span><span class="pl-c1">1</span>);<span class="pl-v">this</span>.blockPointer<span class="pl-k">++</span>;a<span class="pl-k">+=</span><span class="pl-v">this</span>.blocks[<span class="pl-v">this</span>.blockPointer]<span class="pl-k">&gt;&gt;</span><span class="pl-c1">8</span><span class="pl-k">-</span>(b<span class="pl-k">-</span>(<span class="pl-v">this</span>.bitPointer<span class="pl-k">+</span><span class="pl-c1">1</span>));<span class="pl-v">this</span>.bitPointer<span class="pl-k">-=</span>b<span class="pl-k">%</span><span class="pl-c1">8</span>;<span class="pl-c1">0</span><span class="pl-k">&gt;</span><span class="pl-v">this</span>.bitPointer<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.bitPointer<span class="pl-k">=</span><span class="pl-c1">8</span><span class="pl-k">+</span><span class="pl-v">this</span>.bitPointer);<span class="pl-k">return</span> a}<span class="pl-k">if</span>(b<span class="pl-k">&lt;</span><span class="pl-v">this</span>.bitPointer<span class="pl-k">+</span><span class="pl-c1">1</span><span class="pl-k">+</span><span class="pl-c1">16</span>){<span class="pl-k">for</span>(a<span class="pl-k">=</span>c<span class="pl-k">=</span>d<span class="pl-k">=</span><span class="pl-c1">0</span>;a<span class="pl-k">&lt;</span><span class="pl-v">this</span>.bitPointer<span class="pl-k">+</span><span class="pl-c1">1</span>;a<span class="pl-k">++</span>)d<span class="pl-k">+=</span><span class="pl-c1">1</span><span class="pl-k">&lt;&lt;</span>a;d<span class="pl-k">=</span>(<span class="pl-v">this</span>.blocks[<span class="pl-v">this</span>.blockPointer]<span class="pl-k">&amp;</span>d)<span class="pl-k">&lt;&lt;</span>b<span class="pl-k">-</span>(<span class="pl-v">this</span>.bitPointer<span class="pl-k">+</span><span class="pl-c1">1</span>);<span class="pl-v">this</span>.blockPointer<span class="pl-k">++</span>;<span class="pl-s">var</span> h<span class="pl-k">=</span><span class="pl-v">this</span>.blocks[<span class="pl-v">this</span>.blockPointer]<span class="pl-k">&lt;&lt;</span>b<span class="pl-k">-</span>(<span class="pl-v">this</span>.bitPointer<span class="pl-k">+</span><span class="pl-c1">1</span><span class="pl-k">+</span><span class="pl-c1">8</span>);<span class="pl-v">this</span>.blockPointer<span class="pl-k">++</span>;<span class="pl-k">for</span>(a<span class="pl-k">=</span><span class="pl-c1">0</span>;a<span class="pl-k">&lt;</span>b<span class="pl-k">-</span>(<span class="pl-v">this</span>.bitPointer<span class="pl-k">+</span></td>
      </tr>
      <tr>
        <td id="L89" class="blob-num js-line-number" data-line-number="89"></td>
        <td id="LC89" class="blob-code js-file-line"><span class="pl-c1">1</span><span class="pl-k">+</span><span class="pl-c1">8</span>);a<span class="pl-k">++</span>)c<span class="pl-k">+=</span><span class="pl-c1">1</span><span class="pl-k">&lt;&lt;</span>a;c<span class="pl-k">&lt;&lt;=</span><span class="pl-c1">8</span><span class="pl-k">-</span>(b<span class="pl-k">-</span>(<span class="pl-v">this</span>.bitPointer<span class="pl-k">+</span><span class="pl-c1">1</span><span class="pl-k">+</span><span class="pl-c1">8</span>));a<span class="pl-k">=</span>d<span class="pl-k">+</span>h<span class="pl-k">+</span>((<span class="pl-v">this</span>.blocks[<span class="pl-v">this</span>.blockPointer]<span class="pl-k">&amp;</span>c)<span class="pl-k">&gt;&gt;</span><span class="pl-c1">8</span><span class="pl-k">-</span>(b<span class="pl-k">-</span>(<span class="pl-v">this</span>.bitPointer<span class="pl-k">+</span><span class="pl-c1">1</span><span class="pl-k">+</span><span class="pl-c1">8</span>)));<span class="pl-v">this</span>.bitPointer<span class="pl-k">-=</span>(b<span class="pl-k">-</span><span class="pl-c1">8</span>)<span class="pl-k">%</span><span class="pl-c1">8</span>;<span class="pl-c1">0</span><span class="pl-k">&gt;</span><span class="pl-v">this</span>.bitPointer<span class="pl-k">&amp;&amp;</span>(<span class="pl-v">this</span>.bitPointer<span class="pl-k">=</span><span class="pl-c1">8</span><span class="pl-k">+</span><span class="pl-v">this</span>.bitPointer);<span class="pl-k">return</span> a}<span class="pl-k">return</span> <span class="pl-c1">0</span>};<span class="pl-s3">this</span>.<span class="pl-en">NextMode</span><span class="pl-k">=</span><span class="pl-st">function</span>(){<span class="pl-k">return</span> <span class="pl-v">this</span>.blockPointer<span class="pl-k">&gt;</span><span class="pl-v">this</span>.blocks.<span class="pl-sc">length</span><span class="pl-k">-</span><span class="pl-v">this</span>.numErrorCorrectionCode<span class="pl-k">-</span><span class="pl-c1">2</span><span class="pl-k">?</span><span class="pl-c1">0</span><span class="pl-k">:</span><span class="pl-v">this</span>.getNextBits(<span class="pl-c1">4</span>)};<span class="pl-s3">this</span>.<span class="pl-en">getDataLength</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">b</span>){<span class="pl-k">for</span>(<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-c1">0</span>;<span class="pl-c1">1</span><span class="pl-k">!=</span>b<span class="pl-k">&gt;&gt;</span>a;)a<span class="pl-k">++</span>;<span class="pl-k">return</span> <span class="pl-v">this</span>.getNextBits(qrcode.sizeOfDataLengthInfo[<span class="pl-v">this</span>.dataLengthMode][a])};<span class="pl-v">this</span>.getRomanAndFigureString<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L90" class="blob-num js-line-number" data-line-number="90"></td>
        <td id="LC90" class="blob-code js-file-line"><span class="pl-st">function</span>(<span class="pl-vpf">b</span>){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-c1">0</span>,c<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>,d<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ $%*+-./:<span class="pl-pds">&quot;</span></span>.<span class="pl-s3">split</span>(<span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>);<span class="pl-k">do</span> <span class="pl-k">if</span>(<span class="pl-c1">1</span><span class="pl-k">&lt;</span>b){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.getNextBits(<span class="pl-c1">11</span>),h<span class="pl-k">=</span>a<span class="pl-k">%</span><span class="pl-c1">45</span>,c<span class="pl-k">=</span>c<span class="pl-k">+</span>d[<span class="pl-s3">Math</span>.<span class="pl-s3">floor</span>(a/<span class="pl-c1">45</span>)],c<span class="pl-k">=</span>c<span class="pl-k">+</span>d[h];b<span class="pl-k">-=</span><span class="pl-c1">2</span>}<span class="pl-k">else</span> <span class="pl-c1">1</span><span class="pl-k">==</span>b<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-v">this</span>.getNextBits(<span class="pl-c1">6</span>),c<span class="pl-k">+=</span>d[a],b<span class="pl-k">-=</span><span class="pl-c1">1</span>);<span class="pl-k">while</span>(<span class="pl-c1">0</span><span class="pl-k">&lt;</span>b);<span class="pl-k">return</span> c};<span class="pl-s3">this</span>.<span class="pl-en">getFigureString</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">b</span>){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-c1">0</span>,c<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;<span class="pl-k">do</span> <span class="pl-c1">3</span><span class="pl-k">&lt;=</span>b<span class="pl-k">?</span>(a<span class="pl-k">=</span><span class="pl-v">this</span>.getNextBits(<span class="pl-c1">10</span>),<span class="pl-c1">100</span><span class="pl-k">&gt;</span>a<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">+=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>0<span class="pl-pds">&quot;</span></span>),<span class="pl-c1">10</span><span class="pl-k">&gt;</span>a<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">+=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>0<span class="pl-pds">&quot;</span></span>),b<span class="pl-k">-=</span><span class="pl-c1">3</span>)<span class="pl-k">:</span><span class="pl-c1">2</span><span class="pl-k">==</span>b<span class="pl-k">?</span>(a<span class="pl-k">=</span><span class="pl-v">this</span>.getNextBits(<span class="pl-c1">7</span>),<span class="pl-c1">10</span><span class="pl-k">&gt;</span>a<span class="pl-k">&amp;&amp;</span>(c<span class="pl-k">+=</span><span class="pl-s1"><span class="pl-pds">&quot;</span>0<span class="pl-pds">&quot;</span></span>),b<span class="pl-k">-=</span><span class="pl-c1">2</span>)<span class="pl-k">:</span><span class="pl-c1">1</span><span class="pl-k">==</span>b<span class="pl-k">&amp;&amp;</span>(a<span class="pl-k">=</span><span class="pl-v">this</span>.getNextBits(<span class="pl-c1">4</span>),b<span class="pl-k">-=</span><span class="pl-c1">1</span>),c<span class="pl-k">+=</span>a;<span class="pl-k">while</span>(<span class="pl-c1">0</span><span class="pl-k">&lt;</span>b);<span class="pl-k">return</span> c};<span class="pl-s3">this</span>.<span class="pl-en">get8bitByteArray</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">b</span>){<span class="pl-s">var</span> a<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L91" class="blob-num js-line-number" data-line-number="91"></td>
        <td id="LC91" class="blob-code js-file-line"><span class="pl-c1">0</span>,c<span class="pl-k">=</span>[];<span class="pl-k">do</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.getNextBits(<span class="pl-c1">8</span>),c.<span class="pl-s3">push</span>(a),b<span class="pl-k">--</span>;<span class="pl-k">while</span>(<span class="pl-c1">0</span><span class="pl-k">&lt;</span>b);<span class="pl-k">return</span> c};<span class="pl-s3">this</span>.<span class="pl-en">getKanjiString</span><span class="pl-k">=</span><span class="pl-st">function</span>(<span class="pl-vpf">b</span>){<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-c1">0</span>,c<span class="pl-k">=</span><span class="pl-s1"><span class="pl-pds">&quot;</span><span class="pl-pds">&quot;</span></span>;<span class="pl-k">do</span>{<span class="pl-s">var</span> a<span class="pl-k">=</span>getNextBits(<span class="pl-c1">13</span>),a<span class="pl-k">=</span>(a/<span class="pl-c1">192</span><span class="pl-k">&lt;&lt;</span><span class="pl-c1">8</span>)<span class="pl-k">+</span>a<span class="pl-k">%</span><span class="pl-c1">192</span>,d<span class="pl-k">=</span><span class="pl-c1">0</span>,d<span class="pl-k">=</span><span class="pl-c1">40956</span><span class="pl-k">&gt;=</span>a<span class="pl-k">+</span><span class="pl-c1">33088</span><span class="pl-k">?</span>a<span class="pl-k">+</span><span class="pl-c1">33088</span><span class="pl-k">:</span>a<span class="pl-k">+</span><span class="pl-c1">49472</span>,c<span class="pl-k">=</span>c<span class="pl-k">+</span><span class="pl-s3">String</span>.<span class="pl-s3">fromCharCode</span>(d);b<span class="pl-k">--</span>}<span class="pl-k">while</span>(<span class="pl-c1">0</span><span class="pl-k">&lt;</span>b);<span class="pl-k">return</span> c};<span class="pl-v">this</span>.__defineGetter__(<span class="pl-s1"><span class="pl-pds">&quot;</span>DataByte<span class="pl-pds">&quot;</span></span>,<span class="pl-st">function</span>(){<span class="pl-s">var</span> b<span class="pl-k">=</span>[];<span class="pl-k">do</span>{<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.NextMode();<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">==</span>a)<span class="pl-k">if</span>(<span class="pl-c1">0</span><span class="pl-k">&lt;</span>b.<span class="pl-sc">length</span>)<span class="pl-k">break</span>;<span class="pl-k">else</span> <span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>Empty data block<span class="pl-pds">&quot;</span></span>;<span class="pl-k">if</span>(<span class="pl-c1">1</span><span class="pl-k">!=</span>a<span class="pl-k">&amp;&amp;</span><span class="pl-c1">2</span><span class="pl-k">!=</span>a<span class="pl-k">&amp;&amp;</span><span class="pl-c1">4</span><span class="pl-k">!=</span>a<span class="pl-k">&amp;&amp;</span><span class="pl-c1">8</span><span class="pl-k">!=</span>a)<span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>Invalid mode: <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>a<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span> in (block:<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-v">this</span>.blockPointer<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span> bit:<span class="pl-pds">&quot;</span></span><span class="pl-k">+</span><span class="pl-v">this</span>.bitPointer<span class="pl-k">+</span><span class="pl-s1"><span class="pl-pds">&quot;</span>)<span class="pl-pds">&quot;</span></span>;dataLength<span class="pl-k">=</span></td>
      </tr>
      <tr>
        <td id="L92" class="blob-num js-line-number" data-line-number="92"></td>
        <td id="LC92" class="blob-code js-file-line"><span class="pl-v">this</span>.getDataLength(a);<span class="pl-k">if</span>(<span class="pl-c1">1</span><span class="pl-k">&gt;</span>dataLength)<span class="pl-k">throw</span><span class="pl-s1"><span class="pl-pds">&quot;</span>Invalid data length: <span class="pl-pds">&quot;</span></span><span class="pl-k">+</span>dataLength;<span class="pl-k">switch</span>(a){<span class="pl-k">case</span> <span class="pl-c1">1</span><span class="pl-k">:</span><span class="pl-k">for</span>(<span class="pl-s">var</span> a<span class="pl-k">=</span><span class="pl-v">this</span>.getFigureString(dataLength),c<span class="pl-k">=</span><span class="pl-s3">Array</span>(a.<span class="pl-sc">length</span>),d<span class="pl-k">=</span><span class="pl-c1">0</span>;d<span class="pl-k">&lt;</span>a.<span class="pl-sc">length</span>;d<span class="pl-k">++</span>)c[d]<span class="pl-k">=</span>a.<span class="pl-s3">charCodeAt</span>(d);b.<span class="pl-s3">push</span>(c);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">2</span><span class="pl-k">:</span>a<span class="pl-k">=</span><span class="pl-v">this</span>.getRomanAndFigureString(dataLength);c<span class="pl-k">=</span><span class="pl-s3">Array</span>(a.<span class="pl-sc">length</span>);<span class="pl-k">for</span>(d<span class="pl-k">=</span><span class="pl-c1">0</span>;d<span class="pl-k">&lt;</span>a.<span class="pl-sc">length</span>;d<span class="pl-k">++</span>)c[d]<span class="pl-k">=</span>a.<span class="pl-s3">charCodeAt</span>(d);b.<span class="pl-s3">push</span>(c);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">4</span><span class="pl-k">:</span>a<span class="pl-k">=</span><span class="pl-v">this</span>.get8bitByteArray(dataLength);b.<span class="pl-s3">push</span>(a);<span class="pl-k">break</span>;<span class="pl-k">case</span> <span class="pl-c1">8</span><span class="pl-k">:</span>a<span class="pl-k">=</span><span class="pl-v">this</span>.getKanjiString(dataLength),b.<span class="pl-s3">push</span>(a)}}<span class="pl-k">while</span>(<span class="pl-c1">1</span>);<span class="pl-k">return</span> b})};</td>
      </tr>
</table>

  </div>

</div>

<a href="#jump-to-line" rel="facebox[.linejump]" data-hotkey="l" style="display:none">Jump to Line</a>
<div id="jump-to-line" style="display:none">
  <form accept-charset="UTF-8" class="js-jump-to-line-form">
    <input class="linejump-input js-jump-to-line-field" type="text" placeholder="Jump to line&hellip;" autofocus>
    <button type="submit" class="button">Go</button>
  </form>
</div>

        </div>

      </div><!-- /.repo-container -->
      <div class="modal-backdrop"></div>
    </div><!-- /.container -->
  </div><!-- /.site -->


    </div><!-- /.wrapper -->

      <div class="container">
  <div class="site-footer" role="contentinfo">
    <ul class="site-footer-links right">
        <li><a href="https://status.github.com/" data-ga-click="Footer, go to status, text:status">Status</a></li>
      <li><a href="https://developer.github.com" data-ga-click="Footer, go to api, text:api">API</a></li>
      <li><a href="http://training.github.com" data-ga-click="Footer, go to training, text:training">Training</a></li>
      <li><a href="http://shop.github.com" data-ga-click="Footer, go to shop, text:shop">Shop</a></li>
        <li><a href="https://github.com/blog" data-ga-click="Footer, go to blog, text:blog">Blog</a></li>
        <li><a href="https://github.com/about" data-ga-click="Footer, go to about, text:about">About</a></li>

    </ul>

    <a href="https://github.com" aria-label="Homepage">
      <span class="mega-octicon octicon-mark-github" title="GitHub"></span>
</a>
    <ul class="site-footer-links">
      <li>&copy; 2015 <span title="0.05173s from github-fe140-cp1-prd.iad.github.net">GitHub</span>, Inc.</li>
        <li><a href="https://github.com/site/terms" data-ga-click="Footer, go to terms, text:terms">Terms</a></li>
        <li><a href="https://github.com/site/privacy" data-ga-click="Footer, go to privacy, text:privacy">Privacy</a></li>
        <li><a href="https://github.com/security" data-ga-click="Footer, go to security, text:security">Security</a></li>
        <li><a href="https://github.com/contact" data-ga-click="Footer, go to contact, text:contact">Contact</a></li>
    </ul>
  </div>
</div>


    <div class="fullscreen-overlay js-fullscreen-overlay" id="fullscreen_overlay">
  <div class="fullscreen-container js-suggester-container">
    <div class="textarea-wrap">
      <textarea name="fullscreen-contents" id="fullscreen-contents" class="fullscreen-contents js-fullscreen-contents" placeholder=""></textarea>
      <div class="suggester-container">
        <div class="suggester fullscreen-suggester js-suggester js-navigation-container"></div>
      </div>
    </div>
  </div>
  <div class="fullscreen-sidebar">
    <a href="#" class="exit-fullscreen js-exit-fullscreen tooltipped tooltipped-w" aria-label="Exit Zen Mode">
      <span class="mega-octicon octicon-screen-normal"></span>
    </a>
    <a href="#" class="theme-switcher js-theme-switcher tooltipped tooltipped-w"
      aria-label="Switch themes">
      <span class="octicon octicon-color-mode"></span>
    </a>
  </div>
</div>



    

    <div id="ajax-error-message" class="flash flash-error">
      <span class="octicon octicon-alert"></span>
      <a href="#" class="octicon octicon-x flash-close js-ajax-error-dismiss" aria-label="Dismiss error"></a>
      Something went wrong with that request. Please try again.
    </div>


      <script crossorigin="anonymous" src="https://assets-cdn.github.com/assets/frameworks-4bf9533935259bb898a8d60e1958f4d047968c430eae889800a187e279faf38f.js"></script>
      <script async="async" crossorigin="anonymous" src="https://assets-cdn.github.com/assets/github-89ea7a010c60586a50791c3114e292685a92554e4fb1baa4bea352997f7b3eb5.js"></script>
      
      

  </body>
</html>

